/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _nUi = __webpack_require__(181);
	
	var _comments = __webpack_require__(559);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var oViewport = __webpack_require__(377);
	var OVideo = __webpack_require__(378);
	var lightSignup = __webpack_require__(568);
	var expander = __webpack_require__(373);
	var nUiConfig = __webpack_require__(613);
	// import cacheJourney from './components/cache-journey/cache-journey';
	
	
	(0, _nUi.bootstrap)(nUiConfig, function (_ref) {
		var flags = _ref.flags;
		var mainCss = _ref.mainCss;
	
	
		var slideshow = __webpack_require__(614);
		var readingHistory = __webpack_require__(624);
		var scrollDepth = __webpack_require__(625);
	
		var onwardJourney = __webpack_require__(626);
		var toc = __webpack_require__(627);
		var share = __webpack_require__(628);
		var promotedContent = __webpack_require__(665);
	
		// cacheJourney();
	
		oViewport.listenTo('resize');
	
		if (document.querySelector('*[data-article-status="error"]')) {
			return;
		}
	
		var uuid = document.querySelector('article[data-content-id]').getAttribute('data-content-id');
	
		if (uuid) {
			readingHistory.add(uuid);
		}
	
		if (flags.get('articleShareButtons')) {
			share.init();
		}
	
		toc.init(flags);
		scrollDepth(flags);
	
		mainCss.then(function () {
			slideshow(document.querySelectorAll('.article ft-slideshow'));
			onwardJourney.init(flags);
			lightSignup.init();
			expander.init();
			promotedContent(flags);
	
			var videos = document.querySelectorAll('[data-o-component="o-video"]');
			(0, _from2.default)(videos).forEach(function (video) {
				new OVideo(video, {
					id: video.getAttribute('data-o-video-id'),
					placeholder: true,
					classes: ['video'],
					advertising: flags.get('videoPlayerAdvertising'),
					source: 'brightcove',
					placeholderdisplay: 'brand,title'
				});
			});
	
			if (flags.get('articleComments') && document.querySelector('#comments')) {
				(0, _comments.init)();
			}
		});
	});

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(7);

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.EnvConfig = __webpack_require__(8);
	exports.Events = __webpack_require__(78);
	exports.jsonp = __webpack_require__(79);
	exports.scriptLoader = __webpack_require__(81);
	exports.storageWrapper = {
		localStorage: __webpack_require__(82),
		sessionStorage: __webpack_require__(86)
	};
	exports.logger = __webpack_require__(87);
	exports.functionSync = {
		parallel: __webpack_require__(88)
	};
	exports.initDomConstruct = __webpack_require__(89);
	exports.dateHelper = __webpack_require__(91);
	exports.merge = __webpack_require__(77);
	exports.dom = {
		ScrollMonitor: __webpack_require__(92),
		offset: __webpack_require__(93),
		windowSize: __webpack_require__(94)
	};
	exports.cookie = __webpack_require__(95);
	exports.ftUser = __webpack_require__(96);
	exports.generateId = __webpack_require__(90);

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var merge = __webpack_require__(77);
	
	/**
	 * Config class which can be instantiated. It will create an isolated set of configuration options.
	 * It can be extended and read.
	 * @return {undefined}
	 */
	function Config() {
		/**
	  * Local object of the configuration.
	  * @type {Object}
	  */
		var config = {};
	
		/**
	  * Read the current configuration or a configuration entry
	  * @param  {string}   param    Optional. Entry key of the configuration object. If specified, only the value of the entry is returned.
	  * @return {string|object}     Either the value of the key specified or the whole object.
	  */
		this.get = function (param) {
			if (param) {
				if (typeof config[param] !== 'undefined') {
					return config[param];
				} else {
					return undefined;
				}
			} else {
				return config;
			}
		};
	
		/**
	  * Extends the current configuration.
	  * @param {string|object}  keyOrObject   If a key is specified, then the next parameter (value)
	  *                                       will be merged into the current config object. If an object is specified,
	  *                                       then the object will be merged into the current config object.
	  * @param {[type]}         value         If a key is specified, the value should also be specified and will be merged
	  *                                       into the corresponding value of the current object's key's value.
	  * @return {undefined}
	  */
		this.set = function (keyOrObject, value) {
			if (typeof keyOrObject === 'string') {
				if (typeof value !== 'undefined') {
					var obj = {};
					obj[keyOrObject] = value;
	
					config = merge(config, obj);
				}
			} else if ((typeof keyOrObject === 'undefined' ? 'undefined' : (0, _typeof3.default)(keyOrObject)) === 'object') {
				config = merge(config, keyOrObject);
			}
		};
	
		this.destroy = function () {
			config = null;
		};
	}
	module.exports = Config;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(10);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(61);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(11), __esModule: true };

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(12);
	__webpack_require__(56);
	module.exports = __webpack_require__(60).f('iterator');

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(13)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(16)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(14)
	  , defined   = __webpack_require__(15);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(17)
	  , $export        = __webpack_require__(18)
	  , redefine       = __webpack_require__(33)
	  , hide           = __webpack_require__(23)
	  , has            = __webpack_require__(34)
	  , Iterators      = __webpack_require__(35)
	  , $iterCreate    = __webpack_require__(36)
	  , setToStringTag = __webpack_require__(52)
	  , getPrototypeOf = __webpack_require__(54)
	  , ITERATOR       = __webpack_require__(53)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(19)
	  , core      = __webpack_require__(20)
	  , ctx       = __webpack_require__(21)
	  , hide      = __webpack_require__(23)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 19 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 20 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(22);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(24)
	  , createDesc = __webpack_require__(32);
	module.exports = __webpack_require__(28) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(25)
	  , IE8_DOM_DEFINE = __webpack_require__(27)
	  , toPrimitive    = __webpack_require__(31)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(28) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(26);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(28) && !__webpack_require__(29)(function(){
	  return Object.defineProperty(__webpack_require__(30)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(29)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(26)
	  , document = __webpack_require__(19).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(26);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 32 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(23);

/***/ },
/* 34 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(37)
	  , descriptor     = __webpack_require__(32)
	  , setToStringTag = __webpack_require__(52)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(23)(IteratorPrototype, __webpack_require__(53)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(25)
	  , dPs         = __webpack_require__(38)
	  , enumBugKeys = __webpack_require__(50)
	  , IE_PROTO    = __webpack_require__(47)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(30)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(51).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(24)
	  , anObject = __webpack_require__(25)
	  , getKeys  = __webpack_require__(39);
	
	module.exports = __webpack_require__(28) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(40)
	  , enumBugKeys = __webpack_require__(50);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(34)
	  , toIObject    = __webpack_require__(41)
	  , arrayIndexOf = __webpack_require__(44)(false)
	  , IE_PROTO     = __webpack_require__(47)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(42)
	  , defined = __webpack_require__(15);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(43);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(41)
	  , toLength  = __webpack_require__(45)
	  , toIndex   = __webpack_require__(46);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(14)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(14)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(48)('keys')
	  , uid    = __webpack_require__(49);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(19)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 49 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 50 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(19).document && document.documentElement;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(24).f
	  , has = __webpack_require__(34)
	  , TAG = __webpack_require__(53)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(48)('wks')
	  , uid        = __webpack_require__(49)
	  , Symbol     = __webpack_require__(19).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(34)
	  , toObject    = __webpack_require__(55)
	  , IE_PROTO    = __webpack_require__(47)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(15);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(57);
	var global        = __webpack_require__(19)
	  , hide          = __webpack_require__(23)
	  , Iterators     = __webpack_require__(35)
	  , TO_STRING_TAG = __webpack_require__(53)('toStringTag');
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(58)
	  , step             = __webpack_require__(59)
	  , Iterators        = __webpack_require__(35)
	  , toIObject        = __webpack_require__(41);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(16)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 58 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(53);

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(62), __esModule: true };

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(63);
	__webpack_require__(74);
	__webpack_require__(75);
	__webpack_require__(76);
	module.exports = __webpack_require__(20).Symbol;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(19)
	  , has            = __webpack_require__(34)
	  , DESCRIPTORS    = __webpack_require__(28)
	  , $export        = __webpack_require__(18)
	  , redefine       = __webpack_require__(33)
	  , META           = __webpack_require__(64).KEY
	  , $fails         = __webpack_require__(29)
	  , shared         = __webpack_require__(48)
	  , setToStringTag = __webpack_require__(52)
	  , uid            = __webpack_require__(49)
	  , wks            = __webpack_require__(53)
	  , wksExt         = __webpack_require__(60)
	  , wksDefine      = __webpack_require__(65)
	  , keyOf          = __webpack_require__(66)
	  , enumKeys       = __webpack_require__(67)
	  , isArray        = __webpack_require__(70)
	  , anObject       = __webpack_require__(25)
	  , toIObject      = __webpack_require__(41)
	  , toPrimitive    = __webpack_require__(31)
	  , createDesc     = __webpack_require__(32)
	  , _create        = __webpack_require__(37)
	  , gOPNExt        = __webpack_require__(71)
	  , $GOPD          = __webpack_require__(73)
	  , $DP            = __webpack_require__(24)
	  , $keys          = __webpack_require__(39)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(72).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(69).f  = $propertyIsEnumerable;
	  __webpack_require__(68).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(17)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(23)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(49)('meta')
	  , isObject = __webpack_require__(26)
	  , has      = __webpack_require__(34)
	  , setDesc  = __webpack_require__(24).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(29)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(19)
	  , core           = __webpack_require__(20)
	  , LIBRARY        = __webpack_require__(17)
	  , wksExt         = __webpack_require__(60)
	  , defineProperty = __webpack_require__(24).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(39)
	  , toIObject = __webpack_require__(41);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(39)
	  , gOPS    = __webpack_require__(68)
	  , pIE     = __webpack_require__(69);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 68 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 69 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(43);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(41)
	  , gOPN      = __webpack_require__(72).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(40)
	  , hiddenKeys = __webpack_require__(50).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(69)
	  , createDesc     = __webpack_require__(32)
	  , toIObject      = __webpack_require__(41)
	  , toPrimitive    = __webpack_require__(31)
	  , has            = __webpack_require__(34)
	  , IE8_DOM_DEFINE = __webpack_require__(27)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(28) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 74 */
/***/ function(module, exports) {



/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(65)('asyncIterator');

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(65)('observable');

/***/ },
/* 77 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Merges two or more objects into a single object. It either overrides if the key is the same, or appends to the existing object.
	 * The first parameter is the destination, all the other parameters are the sources.
	 * The level of importance increases starting from the destination to the last source (the last source will be the most important).
	 *
	 * @param  {object} destination The object to which the source objects will be merged
	 * @param  {object} source Any number of further arguments which are sources and will be merged to the destination.
	 * @return {object} The modified destination object with the sources merged in.
	 */
	function merge(destination) {
		var ln = arguments.length;
		var mergeFn = merge;
		var object = void 0;
		var key = void 0;
		var value = void 0;
	
		for (var i = 1; i < ln; i++) {
			object = arguments[i];
	
			for (key in object) {
				if (object.hasOwnProperty(key)) {
					value = object[key];
	
					if (value !== null && typeof value !== 'undefined') {
						if (typeof destination[key] === 'undefined') {
							destination[key] = value;
						} else if (destination[key].constructor !== Object) {
							destination[key] = value;
						} else {
							if (value.constructor !== Object) {
								destination[key] = value;
							} else {
								mergeFn(destination[key], value);
							}
						}
					}
				}
			}
		}
	
		return destination;
	}
	module.exports = merge;

/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * When instantiated, it creates an isolated event collection.
	 * These events can be handled and triggered using the resulted object.
	 * @return {undefined}
	 */
	function Events() {
		var self = this;
	
		/**
	  * Isolated set of events.
	  * @type {Object}
	  */
		var events = {};
	
		var actionInProgress = {};
		var actionQueue = {};
	
		function queueAnAction(evt, type, args) {
			if (!actionQueue[evt]) {
				actionQueue[evt] = [];
			}
	
			actionQueue[evt].push({
				evt: evt,
				type: type,
				args: args
			});
			nextAction(evt);
		}
	
		function nextAction(evt) {
			if (!actionInProgress[evt]) {
				var action = actionQueue[evt].shift();
	
				if (action) {
					actionInProgress[evt] = true;
	
					switch (action.type) {
						case 'off':
							off.apply(self, action.args);
							break;
						case 'trigger':
							trigger.apply(self, action.args);
							break;
					}
	
					actionInProgress[evt] = false;
					nextAction(evt);
				}
			}
		}
	
		/**
	  * Registers a new event handler to a specified event which will be called each time the event is triggered.
	  * @param  {string}   evt    Name of the event.
	  * @param  {Function} handler Handler function which will be called when the event is triggered.
	  * @return {undefined}
	  */
		this.on = function (evt, handler) {
			if (typeof evt !== 'string' || typeof handler !== 'function') {
				return;
			}
	
			if (!events[evt]) {
				events[evt] = [];
			}
			events[evt].push({
				callback: handler
			});
		};
	
		/**
	  * Registers a new event handler to a specified event which will be called only the first time the event is triggered.
	  * @param  {String}   evt    Name of the event.
	  * @param  {Function} handler Handler function which will be called when the event is triggered.
	  * @return {undefined}
	  */
		this.one = function (evt, handler) {
			if (typeof evt !== 'string' || typeof handler !== 'function') {
				return;
			}
	
			if (!events[evt]) {
				events[evt] = [];
			}
			events[evt].push({
				callback: handler,
				once: true
			});
		};
	
		/**
	  * Helper function to get the index of the handler from the array of handlers attached to an event.
	  * @param  {Array}    arr      Array in which to search.
	  * @param  {Function} handler  Handler function which is searched in the Array.
	  * @return {number}            Index where the handler was found or -1 if not found.
	  */
		function getIndexOfHandler(arr, handler) {
			for (var i = 0; i < arr.length; i++) {
				if (arr[i].callback === handler) {
					return i;
				}
			}
	
			return -1;
		}
	
		/**
	  * Removes event handler(s).
	  * If there's no parameters, all event handlers are removed.
	  * If only the event is specified, all event handlers are removed from that event handler.
	  * If an event handler is specified as well, only that specific event handler will be removed.
	  * @param  {string}   evt   Optional. Name of the event from which the event handler should be removed.
	  * @param  {Function} handler Optional. Handler function to be removed.
	  * @return {undefined}
	  */
		var off = function off(evt, handler) {
			var handlerNotSet = typeof handler === 'undefined';
			var eventCorrect = typeof evt === 'string';
			var handlerCorrect = typeof handler === 'function';
	
			if (eventCorrect) {
				if (events[evt]) {
					if (handlerNotSet) {
						delete events[evt];
					} else if (handlerCorrect) {
						var index = getIndexOfHandler(events[evt], handler);
	
						if (index > -1) {
							events[evt].splice(index, 1);
						}
					}
				}
			}
		};
	
		/**
	  * Queues off process(es) for the event(s).
	  * @param  {string}   evt   Optional. Name of the event from which the event handler should be removed.
	  * @param  {Function} handler Optional. Handler function to be removed.
	  * @return {undefined}
	  */
		this.off = function (evt, handler) {
			var eventNotSet = typeof evt === 'undefined';
			var handlerNotSet = typeof handler === 'undefined';
			var eventCorrect = typeof evt === 'string';
			var handlerCorrect = typeof handler === 'function';
	
			if (eventNotSet) {
				for (var evtKey in events) {
					if (events.hasOwnProperty(evtKey)) {
						queueAnAction(evtKey, 'off', [evtKey]);
					}
				}
			} else {
				if (eventCorrect) {
					if (events[evt]) {
						if (handlerNotSet) {
							queueAnAction(evt, 'off', [evt]);
						} else if (handlerCorrect) {
							queueAnAction(evt, 'off', arguments);
						}
					}
				}
			}
		};
	
		/**
	  * Triggers an event which causes the call of each handler attached.
	  * @param  {string} evt      Name of the event which will be triggered.
	  * @param  {any}    customData Optional. Data to be passed to handlers.
	  * @return {undefined}
	  */
		var trigger = function trigger(evt, customData) {
			var i = void 0;
	
			if (events[evt]) {
				if (!(customData instanceof Array)) {
					customData = [customData];
				}
	
				i = 0;
				while (i < events[evt].length) {
					events[evt][i].callback.apply(this, customData);
	
					if (events[evt][i].once === true) {
						events[evt].splice(i, 1);
					} else {
						i++;
					}
				}
			}
		};
	
		/**
	  * Queues a trigger process for the event.
	  * @param  {string} evt      Name of the event which will be triggered.
	  * @param  {any}    customData Optional. Data to be passed to handlers.
	  * @return {undefined}
	  */
		this.trigger = function (evt) {
			queueAnAction(evt, 'trigger', arguments);
		};
	
		this.destroy = function () {
			events = null;
			actionInProgress = null;
			actionQueue = null;
		};
	}
	module.exports = Events;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var param = __webpack_require__(80);
	var scriptLoader = __webpack_require__(81);
	
	var callbackIndex = 0;
	var callbackBase = 'jsonp_' + Math.random().toString(36).substring(7);
	
	/**
	 * The actual function which does the jsonp.
	 * @param  {object}   options  Several configuration options (e.g. url, data)
	 * @param  {Function} callback function (err, data)
	 * @return {undefined}
	 */
	function jsonp(options, callback) {
		var callbackName = void 0;
		var callbackIssued = void 0;
		var callbackCalled = void 0;
		var success = void 0;
		var error = void 0;
	
		/**
	  * Parameter validation.
	  */
		if (typeof callback !== 'function') {
			throw "Callback not specified";
		}
	
		if ((typeof options === 'undefined' ? 'undefined' : (0, _typeof3.default)(options)) !== 'object') {
			callback(new Error("Configuration not specified or has the wrong type."));
			return;
		}
	
		if (!options.url) {
			callback(new Error("URL is not specified"));
			return;
		}
	
		callbackIssued = false;
		callbackCalled = false;
	
		success = function success(jsonData) {
			try {
				delete window[callbackName];
			} catch (e1) {
				window[callbackName] = undefined;
			}
	
			if (!callbackIssued) {
				callbackIssued = true;
	
				callback(null, jsonData);
			}
		};
	
		error = function error(e) {
			try {
				delete window[callbackName];
			} catch (e2) {
				window[callbackName] = undefined;
			}
	
			if (!callbackIssued) {
				callbackIssued = true;
	
				callback(e || new Error("Timeout"));
			}
		};
	
		callbackName = callbackBase + callbackIndex++;
	
		if (options.data) {
			options.url += '?' + param(options.data);
	
			options.url += '&callback=' + callbackName;
		} else {
			options.url += '?callback=' + callbackName;
		}
	
		options.url += '&_=' + new Date().getTime();
	
		window[callbackName] = function (jsonData) {
			callbackCalled = true;
	
			success(jsonData);
		};
	
		scriptLoader(options, function (err) {
			if (err) {
				error(err);
				return;
			}
	
			setTimeout(function () {
				if (!callbackCalled) {
					error();
				}
			}, 50);
		});
	}
	
	module.exports = jsonp;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Data object transformation into query string.
	 * @param  {object} data Object to be transformed into a query string.
	 * @return {string}      Query string.
	 */
	function param(data) {
		var dataArr = [];
		var add = function add(key, value) {
			value = typeof value === 'function' ? value() : value === null ? "" : value;
	
			dataArr[dataArr.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
		};
	
		if ((typeof data === "undefined" ? "undefined" : (0, _typeof3.default)(data)) !== 'object') {
			throw "The argument is not an object.";
		}
	
		for (var key in data) {
			if (data.hasOwnProperty(key)) {
				add(key, data[key]);
			}
		}
	
		// Return the resulting serialization
		return dataArr.join("&").replace(/%20/g, "+");
	}
	module.exports = param;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Reference to the &lt;head&gt; DOM object
	 * @type {Object}
	 */
	var head = document.head || document.getElementsByTagName('head')[0];
	
	/**
	 * The actual function which does the script loading.
	 * @param  {object}   options  Several configuration options (e.g. url)
	 * @param  {Function} callback function (err)
	 * @return {undefined}
	 */
	function scriptLoader(options, callback) {
		var script = void 0;
		var callbackIssued = void 0;
		var error = void 0;
		var success = void 0;
		var url = void 0;
		var charset = void 0;
	
		/**
	  * Parameter validation.
	  */
		if (typeof callback !== 'function') {
			throw "Callback not specified";
		}
	
		if (typeof options === 'string') {
			// url
			url = options;
		} else if (options && (typeof options === 'undefined' ? 'undefined' : (0, _typeof3.default)(options)) === 'object') {
			if (!options.url) {
				callback(new Error("URL is not specified"));
				return;
			}
	
			url = options.url;
			if (options.charset) {
				charset = options.charset;
			}
		} else {
			callback(new Error("Configuration not specified or has the wrong type."));
			return;
		}
	
		callbackIssued = false;
	
		error = function error(e) {
			if (!callbackIssued) {
				callbackIssued = true;
	
				callback(e || new Error("Timeout"));
			}
		};
	
		success = function success() {
			if (!callbackIssued) {
				callbackIssued = true;
	
				callback(null);
			}
		};
	
		script = document.createElement("script");
		script.async = true;
	
		if (charset) {
			script.charset = charset;
		}
	
		script.src = url;
	
		var destroy = function destroy() {
			if (script) {
				// Handle memory leak in IE
				script.onload = script.onreadystatechange = null;
	
				// Remove the script
				if (script.parentNode) {
					script.parentNode.removeChild(script);
				}
	
				// Dereference the script
				script = null;
			}
		};
	
		script.onload = script.onreadystatechange = function (_, isAbort) {
			if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {
				destroy();
	
				if (isAbort) {
					error(new Error("Aborted."));
					return;
				}
	
				success();
			}
		};
	
		script.onerror = function () {
			destroy();
			error(new Error("Error loading script."));
		};
	
		head.insertBefore(script, head.firstChild);
	}
	
	module.exports = scriptLoader;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var StorageWrapper = __webpack_require__(83);
	
	module.exports = new StorageWrapper('localStorage');

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Is storage supported?
	 * @type {Boolean}
	 */
	var storageOk = false;
	if (typeof Storage !== "undefined") {
		try {
			localStorage.setItem('test', 2);
			localStorage.removeItem('test', 2);
	
			storageOk = true;
		} catch (e) {}
	}
	
	var StorageWrapper = null;
	
	if (storageOk) {
		/**
	  *
	  * This is a generic wrapper around storage (either localStorage or sessionStorage) which helps
	  * storing multiple types of values (not just strings).
	  *
	  * @param {string} type Type of the storage to be used. Possible values:
	  * - local or localStorage
	  * - session or sessionStorage
	  * @return {undefined}
	  */
		StorageWrapper = function StorageWrapper(type) {
			var storageObj = void 0;
	
			if (type === 'local' || type === 'localStorage') {
				storageObj = localStorage;
			} else if (type === 'session' || type === 'sessionStorage') {
				storageObj = sessionStorage;
			} else {
				throw "Not valid storage type selected";
			}
	
			/**
	   * Sets an item.
	   * @param {string} key The key of the entry.
	   * @param {string|boolean|date|number|array|object} value Value which will be stored. The value is serialized when storing the object.
	   * @return {undefined}
	   */
			this.setItem = function (key, value) {
				var realValue = void 0;
				var type = void 0;
	
				switch (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) {
					case "string":
					case "boolean":
						realValue = value;
						break;
					case "number":
						if (parseFloat(value) === parseInt(value, 10)) {
							type = "int";
						} else {
							type = "float";
						}
	
						realValue = value.toString();
						break;
					case "array":
					case "object":
						if (value instanceof Date) {
							type = "date";
							realValue = value.getTime();
						} else {
							try {
								realValue = (0, _stringify2.default)(value);
								type = "json";
							} catch (e) {
								realValue = value.toString();
								type = "object";
							}
						}
	
						break;
					default:
						type = "unknown";
						realValue = value;
				}
				realValue = (typeof type !== "undefined" ? type : typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) + "|" + realValue;
	
				storageObj.setItem(key, realValue);
			};
	
			/**
	   * Reads the item stored with the key. The stored value is unserialized.
	   * @param  {string} key The key of the entry
	   * @return {string|boolean|date|number|array|object} Unserialized value
	   */
			this.getItem = function (key) {
				var type = void 0;
				var value = storageObj.getItem(key);
	
				if (value) {
					type = value.substr(0, value.indexOf("|"));
	
					value = value.substr(value.indexOf("|") + 1);
	
					switch (type) {
						case "string":
							return value;
						case "boolean":
							if (value === "true") {
								return true;
							} else if (value === "false") {
								return false;
							}
	
							return undefined;
						case "date":
							return new Date(value);
						case "int":
							return parseInt(value, 10);
						case "float":
							return parseFloat(value);
						case "json":
							return JSON.parse(value);
						case "object":
							return value;
						default:
							return value;
					}
				}
	
				return undefined;
			};
	
			/**
	   * Checks if there's an entry for the key.
	   * @param  {string}  key The key of the entry.
	   * @return {Boolean} If it has the item or not.
	   */
			this.hasItem = function (key) {
				return !!storageObj.getItem(key);
			};
	
			/**
	   * Removes the entry that is stored with the key.
	   * @param  {string}  key The key of the entry.
	   * @return {undefined}
	   */
			this.removeItem = function (key) {
				storageObj.removeItem(key);
			};
	
			/**
	   * Clears all entries.
	   * @return {undefined}
	   */
			this.clear = function () {
				storageObj.clear();
			};
	
			/**
	   * Returns the native storage object.
	   * @return {sessionStorage|localStorage}
	   */
			this.native = storageObj;
	
			this.destroy = function () {};
		};
	
		/**
	  * API for browsers which don't support Storage.
	  * It exposes the same API but it does nothing.
	  */
	} else {
		StorageWrapper = function StorageWrapper() {
			this.setItem = function () {
				return false;
			};
			this.getItem = function () {
				return undefined;
			};
			this.hasItem = function () {
				return false;
			};
			this.removeItem = function () {
				return false;
			};
			this.clear = function () {
				return false;
			};
			this.native = undefined;
	
			this.destroy = function () {};
		};
	}
	module.exports = StorageWrapper;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(85), __esModule: true };

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var core  = __webpack_require__(20)
	  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
	module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var StorageWrapper = __webpack_require__(83);
	
	module.exports = new StorageWrapper('sessionStorage');

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Levels of logs.
	 * @type {Array}
	 */
	var levels = ["debug", "log", "info", "warn", "error"];
	
	/**
	 * Default level is warn.
	 * @type {Number}
	 */
	var minLevel = 3;
	
	/**
	 * By default it is not enabled.
	 * @type {Boolean}
	 */
	var enabled = false;
	
	/**
	 * Returns the numeric representation of a string level.
	 * @param  {string} level String representation of the log level e.g. warn
	 * @return {number} Numeric representation of the log level e.g. 3
	 */
	var levelIndex = function levelIndex(level) {
		if (typeof Array.prototype.indexOf === 'function') {
			return levels.indexOf(level);
		} else {
			for (var i = 0; i < levels.length; i++) {
				if (levels[i] === level) {
					return i;
				}
			}
	
			return -1;
		}
	};
	
	/**
	 * Function which returns a corresponding wrapper around the native console object.
	 *
	 * If the console exists, it wraps around it. If it doesn't support calling as a wrapper, it calls directly by
	 * stringifying the objects.
	 *
	 * If the corresponding function of console doesn't exist (e.g. console.debug in IE8), it automatically falls back to the widely
	 * available console.log
	 *
	 * @return {function} function (level, args)
	 */
	var loggerFunction = function () {
		var console = window.console;
	
		if (typeof console !== 'undefined' && typeof console.log !== 'undefined') {
			return function (level, args) {
				if (enabled === true) {
					if (level >= minLevel) {
						try {
							console[levels[level]].apply(console, args);
						} catch (e) {
							for (var i = 0; i < args.length; i++) {
								args[i] = (0, _stringify2.default)(args[i]);
							}
	
							try {
								console[levels[level]](args.join(' '));
							} catch (exc) {
								console.log(args.join(' '));
							}
						}
					}
				}
			};
		} else {
			return function () {};
		}
	}();
	
	/**
	 * logger.debug, logger function for the debug level.
	 * @param  {any} args Any number of arguments of any type
	 */
	exports.debug = function () {
		var level = levelIndex('debug');
		return function () {
			loggerFunction(level, Array.prototype.slice.apply(arguments));
		};
	}();
	
	/**
	 * logger.log, logger function for the log level.
	 * @param  {any} args Any number of arguments of any type
	 */
	exports.log = function () {
		var level = levelIndex('log');
		return function () {
			loggerFunction(level, Array.prototype.slice.apply(arguments));
		};
	}();
	
	/**
	 * logger.info, logger function for the info level.
	 * @param  {any} args Any number of arguments of any type
	 */
	exports.info = function () {
		var level = levelIndex('info');
		return function () {
			loggerFunction(level, Array.prototype.slice.apply(arguments));
		};
	}();
	
	/**
	 * logger.warn, logger function for the warn level.
	 * @param  {any} args Any number of arguments of any type
	 */
	exports.warn = function () {
		var level = levelIndex('warn');
		return function () {
			loggerFunction(level, Array.prototype.slice.apply(arguments));
		};
	}();
	
	/**
	 * logger.error, logger function for the error level.
	 * @param  {any} args Any number of arguments of any type
	 */
	exports.error = function () {
		var level = levelIndex('error');
		return function () {
			loggerFunction(level, Array.prototype.slice.apply(arguments));
		};
	}();
	
	/**
	 * Enables the logging.
	 * @return {undefined}
	 */
	exports.enable = function () {
		enabled = true;
	};
	
	/**
	 * Disables the logging.
	 * @return {undefined}
	 */
	exports.disable = function () {
		enabled = false;
	};
	
	/**
	 * Sets the minimum level of log that is considered.
	 * @param {number|string} level Either a numeric (0-4) or string (debug, log, info, warn, error) representation of the level.
	 * @return {undefined}
	 */
	exports.setLevel = function (level) {
		if (typeof level === 'string') {
			if (isNaN(parseInt(level, 10))) {
				if (levelIndex(level) !== -1) {
					minLevel = levelIndex(level);
				} else {
					throw "Level not exists";
				}
			} else {
				if (level >= 0 && level <= levels.length - 1) {
					minLevel = level;
				} else {
					throw "Level out of range.";
				}
			}
		} else if (typeof level === 'number') {
			if (level >= 0 && level <= levels.length - 1) {
				minLevel = level;
			} else {
				throw "Level out of range.";
			}
		}
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * This submodule is meant to generate a callback only when all functions provided finished their execution.
	 * This is achieved by passing a callback as parameter to the functions that are executed.
	 *
	 * @param  {Object}    functions     Object with named functions (key-value pairs) that should be executed and synced.
	 * @param  {Function} finalCallback Callback that is called when all functions finished their job. It also gets a parameter which aggregates data from all functions.
	 * @return {undefined}
	 */
	function parallel(functions, finalCallback) {
		var key = void 0;
	
		var done = false;
		var dataAggregate = {};
	
		var status = {};
	
		for (key in functions) {
			if (functions.hasOwnProperty(key)) {
				status[key] = false;
			}
		}
	
		var verify = function verify() {
			var statusKey = void 0;
	
			for (statusKey in status) {
				if (status.hasOwnProperty(statusKey)) {
					if (!status[statusKey]) {
						return false;
					}
				}
			}
	
			if (!done) {
				finalCallback(null, dataAggregate);
			}
		};
	
		var callTheFunction = function callTheFunction(_key) {
			var thisCallbackDone = function thisCallbackDone(err, data) {
				if (!done) {
					if (err) {
						done = true;
	
						finalCallback({
							key: _key,
							error: err
						});
						return;
					}
	
					status[_key] = true;
					dataAggregate[_key] = data;
	
					verify();
				}
			};
	
			if (typeof functions[_key] === 'function') {
				functions[_key](thisCallbackDone);
			} else if ((0, _typeof3.default)(functions[_key]) === 'object' && typeof functions[_key].func === 'function') {
				if (functions[_key].hasOwnProperty('args')) {
					var args = functions[_key].args;
					args.splice(0, 1, thisCallbackDone);
	
					functions[_key].func.apply(this, args);
				} else {
					functions[_key].func(thisCallbackDone);
				}
			}
		};
	
		for (key in functions) {
			if (functions.hasOwnProperty(key)) {
				callTheFunction(key);
			}
		}
	}
	module.exports = parallel;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var generateId = __webpack_require__(90);
	
	function getCamelCaseName(str) {
		var parts = str.split('-');
		var result = parts[0];
	
		for (var i = 1; i < parts.length; i++) {
			result += parts[i].charAt(0).toUpperCase() + parts[i].slice(1);
		}
	
		return result;
	}
	
	module.exports = function (config) {
		var el = config.context;
	
		if (!el) {
			el = document.body;
		} else if (!(el instanceof HTMLElement)) {
			el = document.querySelector(el);
		}
	
		var instances = el.querySelectorAll('[data-o-component="' + config.classNamespace + '"]');
	
		var item = void 0;
		var meetsReqs = void 0;
		var widgets = [];
	
		for (var i = 0; i < instances.length; i++) {
			item = instances[i];
	
			meetsReqs = !item.getAttribute('data-' + config.classNamespace + '-built');
			if (config.auto) {
				meetsReqs = meetsReqs && item.getAttribute('data-' + config.classNamespace + '-auto-init') !== "false";
			}
	
			if (meetsReqs) {
				var getAttributeValue = function getAttributeValue(valueRead) {
					if (valueRead === "true") {
						return true;
					} else if (valueRead === "false") {
						return false;
					} else {
						var intValue = parseInt(valueRead, 10);
						if (!isNaN(valueRead) && intValue) {
							return intValue;
						} else {
							return valueRead;
						}
					}
				};
	
				if (!item.id) {
					// generate an ID
					item.id = config.classNamespace + '--' + generateId();
				}
	
				// prevent rebuilding it again
				item.setAttribute('data-' + config.classNamespace + '-built', "true");
	
				var widgetConfig = {};
				var match = void 0;
				var itemsInConfig = void 0;
				var currentLevel = void 0;
				var camelCaseConfigName = void 0;
	
				for (var j = 0; j < item.attributes.length; j++) {
					match = item.attributes[j].name.match(new RegExp('data-' + config.classNamespace + '-config-(.*)'));
					if (match && match.length) {
						itemsInConfig = match[1].split('--');
						currentLevel = widgetConfig;
	
						for (var k = 0; k < itemsInConfig.length; k++) {
							camelCaseConfigName = getCamelCaseName(itemsInConfig[k]);
							if (k === itemsInConfig.length - 1) {
								// last level
								currentLevel[camelCaseConfigName] = getAttributeValue(item.attributes[j].value);
							} else {
								// there's one more level
								if (!currentLevel[camelCaseConfigName]) {
									currentLevel[camelCaseConfigName] = {};
									currentLevel = currentLevel[camelCaseConfigName];
								}
							}
						}
					}
				}
	
				/* eslint-disable */ // Constructor name should start with uppercase, but in this case the constructor is a variable
				var widget = new config.module(item, widgetConfig);
				/* eslint-enable */
	
				document.body.dispatchEvent(new CustomEvent(config.eventNamespace + '.ready', {
					detail: {
						id: item.id,
						instance: widget
					},
					bubble: true
				}));
	
				widgets.push(widget);
			}
		}
	
		return widgets;
	};

/***/ },
/* 90 */
/***/ function(module, exports) {

	"use strict";
	
	var generateId = function generateId() {
		var text = "";
		var possible = "abcdefghijklmnopqrstuvwxyz";
		var length = (Math.random() + 1) * 10;
	
		for (var i = 0; i < length; i++) {
			text += possible.charAt(Math.floor(Math.random() * possible.length));
		}return text;
	};
	
	module.exports = generateId;

/***/ },
/* 91 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Pad number to 2 characters.
	 * @param  {Number} number Number which should be pad to 2 characters.
	 * @return {String|Number} The number in 2 characters.
	 */
	function padTo2(number) {
		if (number < 10) {
			return '0' + number;
		}
		return number;
	}
	
	var date = {
		/**
	  * Converts a date in any format to a timestamp in milliseconds.
	  * @param  {Date|String|Number} timestampOrDate Can be Date, string which is compatible with the constructor of Date, or a timestamp.
	  * @return {Number} Timestamp in milliseconds
	  */
		toTimestamp: function toTimestamp(timestampOrDate) {
			if (timestampOrDate instanceof Date) {
				return timestampOrDate.getTime();
			}
	
			if (typeof timestampOrDate === "string") {
				return new Date(timestampOrDate).getTime();
			}
	
			if (typeof timestampOrDate === "number" && parseInt(timestampOrDate, 10).toString().length < 13) {
				return timestampOrDate * 1000;
			}
	
			return timestampOrDate;
		},
	
		/**
	  * Converts a date in any format to a JS Date Object.
	  * @param  {Date|String|Number} timestampOrDate Can be Date, string which is compatible with the constructor of Date, or a timestamp.
	  * @return {Date} Date object
	  */
		toDateObject: function toDateObject(timestampOrDate) {
			if (timestampOrDate instanceof Date) {
				return timestampOrDate;
			}
	
			return new Date(date.toTimestamp(timestampOrDate));
		},
	
		/**
	  * Shim of Date.toISOString JS function for older browsers. Converts a date to the ISO format.
	  * @param  {Date|String|Number} timestampOrDate Can be Date, string which is compatible with the constructor of Date, or a timestamp.
	  * @return {String} Date in ISO format.
	  */
		toISOString: function toISOString(timestampOrDate) {
			var dateObj = date.toDateObject(timestampOrDate);
	
			if (dateObj.hasOwnProperty('toISOString')) {
				return dateObj.toISOString();
			} else {
				return dateObj.getUTCFullYear() + '-' + padTo2(dateObj.getUTCMonth() + 1) + '-' + padTo2(dateObj.getUTCDate()) + 'T' + padTo2(dateObj.getUTCHours()) + ':' + padTo2(dateObj.getUTCMinutes()) + ':' + padTo2(dateObj.getUTCSeconds()) + '.' + (dateObj.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
			}
		}
	};
	module.exports = date;

/***/ },
/* 92 */
/***/ function(module, exports) {

	'use strict';
	
	function ScrollMonitor(el, callback) {
		var elToListen = el;
		var elToReadPosition = el;
		if (el === document.body || el === document.getElementsByTagName('html')[0] || el === window) {
			elToReadPosition = [document.body, document.getElementsByTagName('html')[0]];
			elToListen = window;
		}
	
		var started = false;
	
		var lastTime = 0;
		var throttle = 200;
		var scrollPosition = void 0;
		var lastScrollPosition = void 0;
		var lastScrollPositionCheck = void 0;
		var i = void 0;
	
		function onValidScroll(force) {
			if (elToReadPosition instanceof Array) {
				scrollPosition = 0;
				for (i = 0; i < elToReadPosition.length; i++) {
					if (elToReadPosition[i].scrollTop > 0) {
						scrollPosition = elToReadPosition[i].scrollTop;
					}
				}
			} else {
				scrollPosition = elToReadPosition.scrollTop;
			}
	
			if (force || lastScrollPosition !== scrollPosition) {
				callback(scrollPosition);
			}
			lastScrollPosition = scrollPosition;
		}
	
		function onScroll() {
			clearTimeout(lastScrollPositionCheck);
			lastScrollPositionCheck = setTimeout(function () {
				onValidScroll();
			}, throttle);
	
			if (new Date().getTime() - lastTime > throttle) {
				lastTime = new Date().getTime();
	
				onValidScroll(true);
			}
		}
	
		this.start = function () {
			if (!started) {
				started = true;
	
				elToListen.addEventListener('scroll', onScroll);
			}
		};
	
		this.stop = function () {
			if (started) {
				started = false;
	
				elToListen.removeEventListener('scroll', onScroll);
			}
		};
	
		this.destroy = function () {
			this.stop();
	
			elToListen = null;
			elToReadPosition = null;
	
			started = null;
			lastTime = null;
			throttle = null;
			scrollPosition = null;
			lastScrollPosition = null;
			lastScrollPositionCheck = null;
			i = null;
		};
	
		this.start.call(this);
	}
	module.exports = ScrollMonitor;

/***/ },
/* 93 */
/***/ function(module, exports) {

	"use strict";
	
	module.exports = function (el) {
		var left = 0;
		var top = 0;
	
		var obj = el;
		if (obj.offsetParent) {
			do {
				left += obj.offsetLeft;
				top += obj.offsetTop;
	
				obj = obj.offsetParent;
			} while (obj);
	
			return {
				left: left,
				top: top
			};
		} else {
			return {
				top: el.offsetTop,
				left: el.offsetLeft
			};
		}
	};

/***/ },
/* 94 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function () {
		var w = window;
		var d = document;
		var e = d.documentElement;
		var g = d.getElementsByTagName('body')[0];
		var x = w.innerWidth || g.clientWidth || e.clientWidth;
		var y = w.innerHeight || g.clientHeight || e.clientHeight;
	
		return {
			width: x,
			height: y
		};
	};

/***/ },
/* 95 */
/***/ function(module, exports) {

	"use strict";
	
	exports.set = function (name, value, days) {
		var expires = void 0;
	
		if (days) {
			var date = new Date();
			date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
			expires = "; expires=" + date.toGMTString();
		} else {
			expires = "";
		}
		document.cookie = name + "=" + value + expires + "; path=/";
	};
	
	exports.get = function (name) {
		var nameEQ = name + "=";
		var ca = document.cookie.split(';');
		for (var i = 0; i < ca.length; i++) {
			var c = ca[i];
			while (c.charAt(0) === ' ') {
				c = c.substring(1, c.length);
			}
			if (c.indexOf(nameEQ) === 0) {
				return c.substring(nameEQ.length, c.length);
			}
		}
		return null;
	};
	
	exports.remove = function (name) {
		exports.set(name, "", -1);
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var cookie = __webpack_require__(95);
	
	/**
	 * Check if the cookies which shows that a user is possibly logged in are set.
	 * @return {Boolean} If the user is logged in or not
	 */
	function isLoggedIn() {
	  return !!getSession();
	}
	
	/**
	 * Reads the user's session identifier.
	 * @return {String} Session ID
	 */
	function getSession() {
	  var session = cookie.get('FTSession');
	  if (session) {
	    return session;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Exports the above defined utility functions.
	 * @type {Object}
	 */
	module.exports = {
	  isLoggedIn: isLoggedIn,
	  getSession: getSession
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(98);

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var config = __webpack_require__(99);
	var suds = __webpack_require__(100);
	var ccs = __webpack_require__(103);
	var cache = __webpack_require__(101);
	var stream = __webpack_require__(104);
	var defaultConfig = __webpack_require__(107);
	var oCommentUtilities = __webpack_require__(6);
	
	config.set(defaultConfig);
	
	/**
	 * Export of the SUDS and CCS APIs.
	 * @type {Object}
	 */
	exports.api = {
		getLivefyreInitConfig: suds.livefyre.getInitConfig,
		getCommentCount: suds.livefyre.getCommentCount,
	
		getAuth: suds.user.getAuth,
		updateUser: suds.user.updateUser,
	
		getComments: ccs.getComments,
		postComment: ccs.postComment,
		deleteComment: ccs.deleteComment,
	
		stream: {
			create: stream.create,
			destroy: stream.destroy
		}
	};
	
	/**
	 * Allows access to the cached values.
	 * @type {Object}
	 */
	exports.cache = {
		clear: cache.clear,
		clearAuth: cache.clearAuth,
		clearLivefyreInit: cache.clearLivefyreInit
	};
	
	/**
	 * Enables logging.
	 * @return {undefined}
	 */
	exports.enableLogging = function () {
		oCommentUtilities.logger.enable.apply(this, arguments);
	};
	
	/**
	 * Disables logging.
	 * @return {undefined}
	 */
	exports.disableLogging = function () {
		oCommentUtilities.logger.disable.apply(this, arguments);
	};
	
	/**
	 * Sets logging level.
	 * @return {undefined}
	 */
	exports.setLoggingLevel = function () {
		oCommentUtilities.logger.setLevel.apply(this, arguments);
	};
	
	/**
	 * This method sets additional or overrides current configuration options.
	 *
	 * @param  {string|object} keyOrObject Key or actually an object with key-value pairs.
	 * @param  {anything} value Optional. Should be specified only if keyOrObject is actually a key (string).
	 * @return {undefined}
	 */
	exports.setConfig = function () {
		config.set.apply(this, arguments);
	};
	
	document.addEventListener('o.DOMContentLoaded', function () {
		try {
			var configInDomEl = document.querySelector('script[type="application/json"][data-o-comment-api-config]');
			if (configInDomEl) {
				var configInDom = JSON.parse(configInDomEl.innerHTML);
	
				exports.setConfig(configInDom);
			}
		} catch (e) {
			oCommentUtilities.logger.log('Invalid config in the DOM.', e);
		}
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var EnvConfig = __webpack_require__(6).EnvConfig;
	
	/**
	 * Isolated copy of the configuration.
	 * @type {js-env-config}
	 */
	module.exports = new EnvConfig();

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cache = __webpack_require__(101);
	var utils = __webpack_require__(102);
	var envConfig = __webpack_require__(99);
	var oCommentUtilities = __webpack_require__(6);
	
	/**
	 * Livefyre related SUDS endpoints.
	 * @type {Object}
	 */
	var livefyre = {};
	
	/**
	 * Uses SUDS.livefyre.init endpoint, but it also embeds an optional caching layer.
	 *
	 * @param {Object} conf Configuration object
	 * ### Configuration
	 * #### Mandatory fields:
	 * - elId: ID of the HTML element in which the widget should be loaded
	 * - articleId: ID of the article, any string
	 * - url: canonical URL of the page
	 * - title: Title of the page
	 *
	 * #### Optional fields:
	 * - stream_type: livecomments, livechat, liveblog
	 * - force: has effect in combination with cache enabled. If force set to true, the data won't be readed from the cache even if a valid entry exists, but it will force the call to the webservice to happen.
	 * - section: Override the default mapping based on URL or CAPI with an explicit mapping. Section parameter should be a valid FT metadata term (Primary section)
	 * - tags: Tags which will be added to the collection in Livefyre
	 * @param {Function} callback function (err, data)
	 * @return {undefined}
	 */
	livefyre.getInitConfig = function (conf, callback) {
		if (typeof callback !== 'function') {
			throw "Callbacks not provided";
		}
	
		if (!conf) {
			throw "No configuration parameters provided";
		}
	
		if (!conf.hasOwnProperty('articleId')) {
			callback(new Error("Article ID not provided"));
		}
	
		if (!conf.hasOwnProperty('url')) {
			callback(new Error("Article URL not provided"));
		}
	
		if (!conf.hasOwnProperty('elId')) {
			callback(new Error("Element ID not provided"));
		}
	
		if (!conf.hasOwnProperty('title')) {
			callback(new Error("Article title not provided"));
		}
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		var cacheEnabled = false;
		if (envConfig.get('cache') === true && sessionId) {
			cacheEnabled = true;
		}
	
		// actually make the request to SUDS
		var makeCall = function makeCall() {
			var dataToBeSent = {
				title: conf.title,
				url: conf.url,
				articleId: conf.articleId,
				el: conf.elId
			};
	
			if (sessionId) {
				dataToBeSent.sessionId = sessionId;
			}
	
			if (typeof conf.stream_type !== 'undefined') {
				dataToBeSent.stream_type = conf.stream_type;
			}
			if (typeof conf.section !== 'undefined') {
				dataToBeSent.section = conf.section;
			}
			if (typeof conf.tags !== 'undefined') {
				dataToBeSent.tags = conf.tags;
			}
	
			// makes the actual call to the SUDS service
			oCommentUtilities.jsonp({
				url: envConfig.get().suds.baseUrl + envConfig.get().suds.endpoints.livefyre.init,
				data: dataToBeSent
			}, function (err, data) {
				if (err) {
					callback(err, null);
					return;
				}
	
				if (data && data.init) {
					if (data.init.unclassifiedArticle !== true && data.init.notAllowedToCreateCollection !== true && data.init.collectionMeta && cacheEnabled) {
						cache.cacheInit(conf.articleId, data.init);
						if (data.auth && data.auth.token) {
							cache.cacheAuth(data.auth);
						} else {
							cache.removeAuth();
						}
					}
	
					callback(null, data.init);
				} else {
					callback(new Error("No data received from SUDS."), null);
				}
			});
		};
	
		if (!cacheEnabled) {
			makeCall();
		} else {
			var initCache = cache.getInit(conf.articleId);
	
			if (conf.force === true || !initCache) {
				makeCall();
			} else {
				initCache.el = conf.elId;
				callback(null, initCache);
			}
		}
	};
	
	livefyre.getCommentCount = function (articleId, callback) {
		if (typeof callback !== 'function') {
			throw "Callbacks not provided";
		}
	
		if (!articleId) {
			callback(new Error("Article ID not provided"));
		}
	
		oCommentUtilities.jsonp({
			url: envConfig.get().suds.baseUrl + envConfig.get().suds.endpoints.livefyre.commentCount,
			data: {
				articleId: articleId
			}
		}, function (err, data) {
			if (err) {
				callback(err, null);
				return;
			}
	
			if (data && typeof data.count !== 'undefined') {
				callback(null, data.count);
			} else {
				callback(new Error("No data received from SUDS."), null);
			}
		});
	};
	
	/**
	 * User related SUDS endpoints.
	 * @type {Object}
	 */
	var user = {};
	
	/**
	 * Uses SUDS.user.getauth endpoint, but it also embeds an optional caching layer.
	 *
	 * ### Configuration
	 * #### Optional fields:
	 * - force: has effect in combination with cache enabled. If force set to true, the data won't be readed from the cache even if a valid entry exists, but it will force the call to the webservice to happen.
	 *
	 * @param  {Object|Function}   confOrCallback Configuration object following the fields from the description, or if it isn't relevant, callback function.
	 * @param  {Function}          callback       Callback function if configuration is provided as well.
	 * @return {undefined}
	 */
	user.getAuth = function (confOrCallback, callback) {
		if (typeof confOrCallback === 'function') {
			callback = confOrCallback;
		}
	
		if (typeof callback !== 'function') {
			throw new Error('Callback not provided.');
		}
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		var cacheEnabled = false;
		if (envConfig.get('cache') === true && sessionId) {
			cacheEnabled = true;
		}
	
		var dataToBeSent = {};
		if (sessionId) {
			dataToBeSent.sessionId = sessionId;
		}
	
		var makeCall = function makeCall() {
			oCommentUtilities.jsonp({
				url: envConfig.get().suds.baseUrl + envConfig.get().suds.endpoints.user.getAuth,
				data: dataToBeSent
			}, function (err, data) {
				if (err) {
					callback(err, null);
					return;
				}
	
				if (cacheEnabled) {
					if (data && data.token) {
						cache.cacheAuth(data);
					} else {
						cache.removeAuth();
					}
				}
	
				callback(null, data);
			});
		};
	
		if (!cacheEnabled) {
			makeCall();
		} else {
			var authCache = cache.getAuth(sessionId);
	
			if (!authCache || confOrCallback.force === true) {
				makeCall();
			} else {
				callback(null, authCache);
			}
		}
	};
	
	/**
	 * Saves the user's settings by making a call to SUDS.user.updateuser endpoint.
	 * @param {Object} userSettings Fields: pseudonym, emailcomments, emailreplies, emaillikes, emailautofollow
	 * @param {Function} callback function (err, data)
	 * @return {undefined}
	 */
	user.updateUser = function (userSettings, callback) {
		if (typeof callback !== 'function') {
			throw new Error("Callback not provided.");
		}
	
		if (!userSettings || (typeof userSettings === 'undefined' ? 'undefined' : (0, _typeof3.default)(userSettings)) !== 'object') {
			callback(new Error("Settings not provided."));
			return;
		}
	
		var dataToBeSent = userSettings;
	
		if (dataToBeSent.hasOwnProperty('pseudonym')) {
			dataToBeSent.pseudonym = utils.trim(dataToBeSent.pseudonym);
		}
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (sessionId) {
			dataToBeSent.sessionId = sessionId;
		}
	
		if (!userSettings.hasOwnProperty('pseudonym') || userSettings.hasOwnProperty('pseudonym') && userSettings.pseudonym) {
			oCommentUtilities.jsonp({
				url: envConfig.get().suds.baseUrl + envConfig.get().suds.endpoints.user.updateUser,
				data: dataToBeSent
			}, function (err, data) {
				if (err) {
					callback(err, null);
					return;
				}
	
				if (!data) {
					callback(new Error("No data received."), null);
				} else {
					if (data.status === "ok") {
						callback(null, data);
					} else {
						if (data.error) {
							callback({
								sudsError: true,
								error: data.error
							}, null);
						} else {
							callback(new Error("An error occured."), null);
						}
					}
				}
			});
		} else {
			callback({
				sudsError: true,
				error: "Pseudonym is blank."
			}, null);
		}
	};
	
	/**
	 * Export all endpoints.
	 * @type {Object}
	 */
	module.exports = {
		livefyre: livefyre,
		user: user
	};

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var envConfig = __webpack_require__(99);
	var oCommentUtilities = __webpack_require__(6);
	
	/**
	 * Verifies if there's a valid auth token (not expired) attached to the session ID provided.
	 * @return {String} Auth token
	 */
	exports.getAuth = function () {
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (!sessionId) {
			return undefined;
		}
	
		var authCache = oCommentUtilities.storageWrapper.sessionStorage.getItem(envConfig.get().cacheConfig.authBaseName + sessionId);
		if (authCache) {
			if (new Date() < oCommentUtilities.dateHelper.toDateObject(authCache.expires)) {
				return authCache;
			} else {
				oCommentUtilities.storageWrapper.sessionStorage.removeItem(envConfig.get().cacheConfig.authBaseName + sessionId);
			}
		}
	
		return undefined;
	};
	
	/**
	 * Removes the auth token from the local cache.
	 * @return {undefined}
	 */
	exports.removeAuth = function () {
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (!sessionId) {
			return;
		}
	
		oCommentUtilities.storageWrapper.sessionStorage.removeItem(envConfig.get().cacheConfig.authBaseName + sessionId);
	};
	
	/**
	 * Saves the auth token into the local cache.
	 * @param  {object} authObject Object which contains the following:
	 * - JWT token
	 * - displayName
	 * - settings (e.g. email preferences)
	 * - expires (timestamp like Date.getTime())
	 * @return {boolean} True if successfully saved or false if not.
	 */
	exports.cacheAuth = function (authObject) {
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (!sessionId) {
			return false;
		}
	
		if (authObject.token) {
			try {
				var oldObj = {};
				if (oCommentUtilities.storageWrapper.sessionStorage.hasItem(envConfig.get().cacheConfig.authBaseName + sessionId)) {
					oldObj = oCommentUtilities.storageWrapper.sessionStorage.getItem(envConfig.get().cacheConfig.authBaseName + sessionId);
				}
	
				var mergedObj = oCommentUtilities.merge({}, oldObj, authObject);
				oCommentUtilities.storageWrapper.sessionStorage.setItem(envConfig.get().cacheConfig.authBaseName + sessionId, mergedObj);
	
				return true;
			} catch (e) {
				oCommentUtilities.logger.debug("Failed to save to the storage.", "authObject:", authObject, "sessionId:", sessionId, "Error:", e);
			}
		}
	
		return false;
	};
	
	/**
	 * Returns the SUDS init object saved into the local cache.
	 * @param  {string|number} articleId The ID of the article
	 * @return {object} Livefyre init object
	 */
	exports.getInit = function (articleId) {
		return oCommentUtilities.storageWrapper.sessionStorage.getItem(envConfig.get().cacheConfig.initBaseName + articleId);
	};
	
	/**
	 * Saves the SUDS init object into the local cache.
	 * @param  {string|number} articleId The ID of the article
	 * @param  {object} initObj SUDS init
	 * @return {undefined}
	 */
	exports.cacheInit = function (articleId, initObj) {
		try {
			oCommentUtilities.storageWrapper.sessionStorage.setItem(envConfig.get().cacheConfig.initBaseName + articleId, initObj);
	
			return true;
		} catch (e) {
			oCommentUtilities.logger.debug("Failed to save to the storage.", "articleId:", articleId, "initObj:", initObj, "Error:", e);
		}
	
		return false;
	};
	
	/**
	 * Removes the SUDS init object from the local cache.
	 * @param  {string|number} articleId The ID of the article
	 * @return {undefined}
	 */
	exports.removeInit = function (articleId) {
		oCommentUtilities.storageWrapper.sessionStorage.removeItem(envConfig.get().cacheConfig.initBaseName + articleId);
	};
	
	exports.clearAuth = function () {
		if (oCommentUtilities.storageWrapper.sessionStorage.native) {
			for (var key in oCommentUtilities.storageWrapper.sessionStorage.native) {
				if (oCommentUtilities.storageWrapper.sessionStorage.hasItem(key)) {
					var matchAuth = key.match(new RegExp(envConfig.get().cacheConfig.authBaseName + '(.*)'));
					if (matchAuth && matchAuth.length) {
						oCommentUtilities.storageWrapper.sessionStorage.removeItem(key);
					}
				}
			}
		}
	};
	
	exports.clearLivefyreInit = function () {
		if (oCommentUtilities.storageWrapper.sessionStorage.native) {
			for (var key in oCommentUtilities.storageWrapper.sessionStorage.native) {
				if (oCommentUtilities.storageWrapper.sessionStorage.hasItem(key)) {
					var matchInit = key.match(new RegExp(envConfig.get().cacheConfig.initBaseName + '(.*)'));
					if (matchInit && matchInit.length) {
						oCommentUtilities.storageWrapper.sessionStorage.removeItem(key);
					}
				}
			}
		}
	};
	
	/**
	 * Clears all entries created by the cache.
	 * @return {undefined}
	 */
	exports.clear = function () {
		exports.clearAuth();
		exports.clearInit();
	};

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Wrapper and polyfill for String.prototype.trim
	 * @param  {string} string The string to be trimmed.
	 * @return {string} The trimmed string.
	 */
	exports.trim = function (string) {
		if (!String.prototype.trim) {
			return string.replace(/^\s+|\s+$/g, '');
		} else {
			return string.trim();
		}
	};

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var oCommentUtilities = __webpack_require__(6);
	var envConfig = __webpack_require__(99);
	var cache = __webpack_require__(101);
	var stream = __webpack_require__(104);
	
	/**
	 * Uses CCS.getComments endpoint, but it also embeds an optional caching layer for the authentication info.
	 *
	 * @param {Object} conf Configuration object:
	 * ### Configuration
	 * #### Mandatory fields:
	 * - articleId: ID of the article, any string
	 * - url: canonical URL of the page
	 * - title: Title of the page
	 *
	 * #### Optional fields:
	 * - stream: enable streaming of new comments
	 * - page: the page number to be fetched. By default it is 0.
	 * - section: Override the default mapping based on URL or CAPI with an explicit mapping. Section parameter should be a valid FT metadata term (Primary section)
	 * - tags: Tags which will be added to the collection in Livefyre
	 * @param {function} callback function (err, data)
	 * @return {undefined}
	 */
	function getComments(conf, _callback) {
		if (typeof _callback !== 'function') {
			throw new Error("Callback not provided");
		}
	
		if (!conf || (typeof conf === 'undefined' ? 'undefined' : (0, _typeof3.default)(conf)) !== 'object') {
			_callback(new Error("Configuration is not provided."));
			return;
		}
	
		if (!conf.hasOwnProperty('articleId')) {
			_callback(new Error("Article ID not provided."));
			return;
		}
	
		if (!conf.hasOwnProperty('title')) {
			_callback(new Error("Article title not provided."));
			return;
		}
	
		if (!conf.hasOwnProperty('url')) {
			_callback(new Error("Article url not provided."));
			return;
		}
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		var cacheEnabled = false;
		if (envConfig.get('cache') === true && sessionId) {
			cacheEnabled = true;
		}
	
		var dataToBeSent = {
			title: conf.title,
			url: conf.url,
			articleId: conf.articleId
		};
		if (typeof conf.page === 'number') {
			dataToBeSent.pageNumber = conf.page;
		}
		if (typeof conf.section !== 'undefined') {
			dataToBeSent.section = conf.section;
		}
		if (typeof conf.tags !== 'undefined') {
			dataToBeSent.tags = conf.tags;
		}
		if (sessionId) {
			dataToBeSent.sessionId = sessionId;
		}
	
		oCommentUtilities.jsonp({
			url: envConfig.get().ccs.baseUrl + envConfig.get().ccs.endpoints.getComments,
			data: dataToBeSent
		}, function (err, data) {
			if (err) {
				_callback(err, null);
				return;
			}
	
			if (data && data.collection) {
				if (data.collection.unclassifiedArticle !== true && cacheEnabled) {
					if (data.userDetails && data.userDetails.token) {
						cache.cacheAuth(data.userDetails);
					} else {
						cache.removeAuth();
					}
				}
	
				_callback(null, {
					collection: data.collection
				});
	
				if (conf.stream === true && typeof conf.page === 'undefined') {
					stream.create(data.collection.collectionId, {
						callback: function callback(eventData) {
							_callback(null, {
								stream: eventData
							});
						},
						lastEventId: data.collection.lastEvent
					});
				}
			} else {
				_callback(new Error("No data received from CCS."), null);
			}
		});
	}
	
	/**
	 * Posts a comment into a given collection using the user's auth token.
	 *
	 * ### Configuration
	 * #### Mandatory fields
	 * - collectionId: ID of the collection to post the comment.
	 * - commentBody: actual content of the comment.
	 *
	 * @param  {Object}   conf     Configuration object
	 * @param  {Function} callback function (err, data)
	 * @return {undefined}
	 */
	function postComment(conf, callback) {
		if (typeof callback !== 'function') {
			throw new Error("Callback not provided");
		}
	
		if (!conf || (typeof conf === 'undefined' ? 'undefined' : (0, _typeof3.default)(conf)) !== 'object') {
			callback(new Error("Configuration is not provided."));
			return;
		}
	
		if (!conf.commentBody) {
			callback(new Error("Content not provided."));
			return;
		}
	
		if (!conf.collectionId) {
			callback(new Error("Collection ID not provided."));
			return;
		}
	
		var dataToBeSent = {
			collectionId: conf.collectionId,
			commentBody: conf.commentBody
		};
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (sessionId) {
			dataToBeSent.sessionId = sessionId;
		}
	
		oCommentUtilities.jsonp({
			url: envConfig.get().ccs.baseUrl + envConfig.get().ccs.endpoints.postComment,
			data: dataToBeSent
		}, function (err, data) {
			if (err) {
				callback(err);
				return;
			}
	
			callback(null, data);
		});
	}
	
	function deleteComment(conf, callback) {
		if (typeof callback !== 'function') {
			throw new Error("Callback not provided");
		}
	
		if (!conf || (typeof conf === 'undefined' ? 'undefined' : (0, _typeof3.default)(conf)) !== 'object') {
			callback(new Error("Configuration is not provided."));
			return;
		}
	
		if (!conf.collectionId) {
			callback(new Error("Collection ID not provided."));
			return;
		}
	
		if (!conf.commentId) {
			callback(new Error("Comment ID not provided."));
			return;
		}
	
		var dataToBeSent = {
			collectionId: conf.collectionId,
			commentId: conf.commentId
		};
	
		var sessionId = oCommentUtilities.ftUser.getSession();
		if (sessionId) {
			dataToBeSent.sessionId = sessionId;
		}
	
		oCommentUtilities.jsonp({
			url: envConfig.get().ccs.baseUrl + envConfig.get().ccs.endpoints.deleteComment,
			data: dataToBeSent
		}, function (err, data) {
			if (err) {
				callback(err);
				return;
			}
	
			callback(null, data);
		});
	}
	
	/**
	 * Export all endpoints.
	 * @type {Object}
	 */
	module.exports = {
		getComments: getComments,
		postComment: postComment,
		deleteComment: deleteComment
	};

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var events = __webpack_require__(105);
	
	var request = __webpack_require__(106);
	var envConfig = __webpack_require__(99);
	var logger = __webpack_require__(6).logger;
	
	function Stream(collectionId, config) {
		var callbacks = [];
		var lastEventId = void 0;
	
		var commentIds = [];
	
		var initialized = false;
		var destroyed = false;
	
		if (config.callbacks && config.callbacks instanceof Array) {
			callbacks = config.callbacks;
		}
		if (config.callback && typeof config.callback === 'function') {
			callbacks.push(config.callback);
		}
	
		if (typeof config.lastEventId !== 'undefined') {
			lastEventId = config.lastEventId;
		}
	
		var callAllCallbacks = function callAllCallbacks() {
			var i = void 0;
			var args = arguments;
	
			var callCallback = function callCallback(currentCallback) {
				setTimeout(function () {
					currentCallback.apply(this, args);
				});
			};
	
			for (i = 0; i < callbacks.length; i++) {
				callCallback(callbacks[i]);
			}
		};
	
		var handleNewComment = function handleNewComment(data, authorData) {
			if (commentIds.indexOf(data.content.id) === -1) {
				commentIds.push(data.content.id);
			}
	
			callAllCallbacks({
				comment: {
					parentId: data.content.parentId || null,
					author: authorData ? {
						displayName: authorData.displayName,
						tags: authorData.tags,
						type: authorData.type
					} : null,
					content: data.content.bodyHtml || null,
					timestamp: data.content.createdAt || null,
					commentId: data.content.id || null,
					visibility: data.vis
				}
			});
		};
	
		var handleUpdateComment = function handleUpdateComment(data, authorData) {
			callAllCallbacks({
				comment: {
					updated: true,
					parentId: data.content.parentId || null,
					author: authorData ? {
						displayName: authorData.displayName,
						tags: authorData.tags,
						type: authorData.type
					} : null,
					content: data.content.bodyHtml || null,
					timestamp: data.content.createdAt || null,
					commentId: data.content.id || null,
					visibility: data.vis,
					lastVisibility: data.lastVis
				}
			});
		};
	
		var handleDeleteComment = function handleDeleteComment(data) {
			callAllCallbacks({
				comment: {
					deleted: true,
					commentId: data.content.id
				}
			});
		};
	
		var handleCommentsEnabled = function handleCommentsEnabled(data) {
			callAllCallbacks({
				collection: {
					commentsEnabled: data.value
				}
			});
		};
	
		var handleResponseData = function handleResponseData(data) {
			if (data.states) {
				var eventCollection = data.states;
	
				for (var key in eventCollection) {
					if (eventCollection.hasOwnProperty(key)) {
						var item = eventCollection[key];
	
						// type: comment
						if (item.type === 0) {
							if (item.vis >= 1) {
								if (item.content.updatedBy || commentIds.indexOf(item.content.id) !== -1) {
									handleUpdateComment(item, data.authors && item.content.authorId ? data.authors[item.content.authorId] : null);
								} else {
									handleNewComment(item, data.authors && item.content.authorId ? data.authors[item.content.authorId] : null);
								}
							} else if (item.vis === 0) {
								handleDeleteComment(item);
							}
						}
					}
				}
			}
	
			if (data.settings && data.settings.length) {
				var i = 0;
				var setting = void 0;
	
				for (i = 0; i < data.settings.length; i++) {
					setting = data.settings[i];
	
					if (setting.name === 'commentsEnabled') {
						handleCommentsEnabled(setting);
					}
				}
			}
		};
	
		function connect() {
			if (destroyed) {
				return;
			}
	
			var lastTime = new Date();
			var timeToWait = 0;
			var aborted = false;
	
			var lfStreamUrl = "//" + envConfig.get().livefyre.networkName + ".stream1.fyre.co/v3.0/collection/" + collectionId + "/" + lastEventId + "/";
	
			var backupRestart = setTimeout(function () {
				aborted = true;
	
				logger.debug('oCommentApi', 'stream', 'backup restart');
				restartConnection({
					force: true
				});
			}, 30000);
	
			var restartConnection = function restartConnection(options) {
				options = options || {};
	
				logger.debug('oCommentApi', 'stream', 'restart');
				clearTimeout(backupRestart);
	
				if (!aborted || options.force === true) {
					aborted = true;
	
					timeToWait = 10000 - (new Date() - lastTime);
	
					setTimeout(function () {
						if (options.report === true) {
							events.emit('streamingEvent', {
								eventType: 'info',
								message: 'connection restored'
							});
						}
	
						connect();
					}, timeToWait < 0 ? 0 : timeToWait);
				}
				return;
			};
	
			try {
				request.get(lfStreamUrl, {
					success: function success(response) {
						try {
							if (response.timeout === true) {
								logger.debug('oCommentApi', 'stream', 'success, timeout');
								restartConnection();
								return;
							}
	
							if (response.data) {
								handleResponseData(response.data);
							}
	
							if (!aborted) {
								clearTimeout(backupRestart);
	
								lastEventId = response.data && response.data.maxEventId ? response.data.maxEventId : lastEventId;
								setTimeout(function () {
									logger.debug('oCommentApi', 'stream', 'success, new call');
									connect();
								}, 0);
							}
						} catch (e) {
							events.emit('streamingEvent', {
								eventType: 'error',
								message: 'connection dropped',
								error: e
							});
							logger.debug('oCommentApi', 'stream', 'exception', e);
	
							restartConnection({
								report: true
							});
						}
					},
					error: function error(err) {
						events.emit('streamingEvent', {
							eventType: 'error',
							message: 'connection dropped',
							error: err
						});
						logger.debug('oCommentApi', 'stream', 'error', err);
	
						restartConnection({
							report: true
						});
					},
					timeout: function timeout() {
						logger.debug('oCommentApi', 'stream', 'timeout');
						restartConnection();
					}
				});
			} catch (e) {
				events.emit('streamingEvent', {
					eventType: 'error',
					message: 'connection dropped',
					error: e
				});
				logger.debug('oCommentApi', 'stream', 'exception', e);
	
				restartConnection({
					report: true
				});
			}
		}
	
		this.addCallback = function (callback) {
			if (callback && typeof callback === 'function') {
				callbacks.push(callback);
			}
		};
	
		this.removeCallback = function (callback) {
			if (callback && typeof callback === 'function' && callbacks.indexOf(callback) !== -1) {
				callbacks.splice(callbacks.indexOf(callback), 1);
			}
	
			if (callbacks.length === 0) {
				this.destroy();
			}
		};
	
		this.setLastEventId = function (eventId) {
			lastEventId = eventId;
		};
	
		this.init = function () {
			if (!initialized && !destroyed && typeof lastEventId !== 'undefined' && typeof collectionId !== 'undefined' && callbacks.length) {
				initialized = true;
				connect();
	
				return true;
			} else {
				return false;
			}
		};
	
		this.destroy = function () {
			callbacks = null;
			lastEventId = null;
	
			if (typeof streamsForCollectionId[collectionId] !== 'undefined') {
				streamsForCollectionId[collectionId] = undefined;
			}
	
			destroyed = true;
		};
	}
	
	var streamsForCollectionId = {};
	
	function create(collectionId, configOrCallback) {
		var callback = void 0;
		var lastEventId = 0;
	
		if (!collectionId) {
			return;
		}
	
		if (typeof configOrCallback === 'function') {
			callback = configOrCallback;
		} else {
			if ((typeof configOrCallback === 'undefined' ? 'undefined' : (0, _typeof3.default)(configOrCallback)) !== 'object') {
				return false;
			}
	
			if (typeof configOrCallback.callback !== 'function') {
				return false;
			} else {
				callback = configOrCallback.callback;
			}
	
			if (configOrCallback.lastEventId) {
				lastEventId = configOrCallback.lastEventId;
			}
		}
	
		if (streamsForCollectionId[collectionId]) {
			streamsForCollectionId[collectionId].addCallback(callback);
	
			return true;
		} else {
			streamsForCollectionId[collectionId] = new Stream(collectionId, {
				lastEventId: lastEventId,
				callback: callback
			});
			streamsForCollectionId[collectionId].init();
	
			return true;
		}
	}
	
	function destroy(collectionId, configOrCallback) {
		var callback = void 0;
	
		if (!collectionId) {
			return;
		}
	
		if (typeof configOrCallback === 'function') {
			callback = configOrCallback;
		} else {
			if (typeof configOrCallback.callback === 'function') {
				callback = configOrCallback.callback;
			}
		}
	
		if (streamsForCollectionId[collectionId]) {
			if (callback) {
				streamsForCollectionId[collectionId].removeCallback(callback);
			} else {
				streamsForCollectionId[collectionId].destroy();
			}
		}
	}
	
	module.exports = {
		create: create,
		destroy: destroy
	};

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';
	
	exports.emit = function (eventName, eventDetails) {
		eventDetails = eventDetails || {
			eventType: 'info'
		};
	
		try {
			document.body.dispatchEvent(new CustomEvent('oCommentApi.' + eventName, {
				detail: eventDetails,
				bubbles: true
			}));
		} catch (e) {
			// do nothing
		}
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/* global XDomainRequest:false, ActiveXObject:false */
	
	var oCommentUtilities = __webpack_require__(6);
	
	exports.get = function (url, callback) {
		var xhr = getXhrForUrl(url);
		var aborted = false;
	
		if (!xhr) {
			callback.error(new Error("No XML Http support"));
			return;
		}
	
		var timestamp = new Date().getTime();
		if (url.indexOf('?') !== -1) {
			url += '&_=' + timestamp;
		} else {
			url += '?_=' + timestamp;
		}
	
		if (xhr instanceof XMLHttpRequest) {
			xhr.open("get", url, true);
		} else {
			xhr.open("get", url);
			if (typeof xhr.hasOwnProperty !== 'function') {
				xhr.timeout = 9000;
			}
		}
	
		if (xhr.onload !== 'undefined') {
			xhr.onload = function () {
				if (!aborted) {
					if ((!xhr.status || xhr.status === 200) && xhr.responseText) {
						var responseText = xhr.responseText;
						try {
							responseText = JSON.parse(responseText);
						} catch (e) {}
	
						oCommentUtilities.logger.debug('stream', 'xhr onload', 'responseText:', responseText);
						callback.success(responseText);
					} else {
						callback.error(new Error(xhr.statusText || "Failed response."));
					}
				}
			};
	
			xhr.onerror = function (err) {
				if (!aborted) {
					oCommentUtilities.logger.debug('stream', 'xhr onerror', 'xhr error');
					callback.error(err);
				}
			};
	
			xhr.ontimeout = function () {
				if (!aborted) {
					oCommentUtilities.logger.debug('stream', 'xhr ontimeout', 'xhr timeout');
	
					aborted = true;
					try {
						xhr.abort();
					} catch (e) {}
					callback.timeout();
				}
			};
	
			xhr.onprogress = function () {}; // do nothing, we are not interested in the progress
		} else {
			xhr.onreadystatechange = function () {
				if (xhr.readyState === 4) {
					if (xhr.responseText) {
						var responseText = xhr.responseText;
						try {
							responseText = JSON.parse(responseText);
						} catch (e) {}
	
						oCommentUtilities.logger.debug('stream', 'xhr onreadystatechange', 'responseText:', responseText);
						callback.success(responseText);
					} else {
						oCommentUtilities.logger.debug('stream', 'xhr onreadystatechange', 'xhr error');
						callback.error();
					}
				}
			};
		}
	
		setTimeout(function () {
			xhr.send();
		}, 0);
	};
	
	/**
	 * Determine XHR.
	 */
	
	function getXhrForUrl(requestUrl) {
		var isXDomainRequest = false;
	
		if (typeof window.location !== 'undefined') {
			var hostnameMatch = requestUrl.match(/(http[s]?:)?\/\/([^\/]*)/);
	
			if (hostnameMatch && hostnameMatch[2] !== window.location.hostname) {
				isXDomainRequest = true;
			}
		}
	
		if (isXDomainRequest === true) {
			if (typeof new XMLHttpRequest().withCredentials !== 'undefined') {
				// Check if the XMLHttpRequest object has a "withCredentials" property.
				// "withCredentials" only exists on XMLHTTPRequest2 objects.
	
				return new XMLHttpRequest();
			} else if (typeof XDomainRequest !== "undefined") {
				// Otherwise, check if XDomainRequest.
				// XDomainRequest only exists in IE, and is IE's way of making CORS requests.
	
				return new XDomainRequest();
			} else {
				return false;
			}
		} else {
			if (window.XMLHttpRequest && ('file:' !== window.location.protocol || !window.ActiveXObject)) {
				return new XMLHttpRequest();
			} else {
				try {
					return new ActiveXObject('Microsoft.XMLHTTP');
				} catch (e) {}
				try {
					return new ActiveXObject('Msxml2.XMLHTTP.6.0');
				} catch (e) {}
				try {
					return new ActiveXObject('Msxml2.XMLHTTP.3.0');
				} catch (e) {}
				try {
					return new ActiveXObject('Msxml2.XMLHTTP');
				} catch (e) {}
			}
		}
	
		return false;
	}

/***/ },
/* 107 */
/***/ function(module, exports) {

	"use strict";
	
	module.exports = {
		suds: {
			baseUrl: "//session-user-data.webservices.ft.com",
			endpoints: {
				livefyre: {
					init: "/v1/livefyre/init",
					commentCount: "/v1/livefyre/commentcount"
				},
				user: {
					updateUser: "/v1/user/updateuser",
					getAuth: "/v1/user/getauth"
				}
			}
		},
		ccs: {
			baseUrl: "//comment-creation.webservices.ft.com",
			endpoints: {
				getComments: "/v1/getComments",
				postComment: "/v1/postComment",
				deleteComment: "/v1/deleteComment"
			}
		},
		cacheConfig: {
			authBaseName: "comments-prod-auth-",
			initBaseName: "comments-prod-init-"
		},
		livefyre: {
			networkName: "ft"
		}
	};

/***/ },
/* 108 */,
/* 109 */,
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(111), __esModule: true };

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(112);
	var $Object = __webpack_require__(20).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(18)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(37)});

/***/ },
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(135);

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var oOverlay = __webpack_require__(136);
	var constructAll = function constructAll() {
		oOverlay.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	module.exports = oOverlay;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Delegate = __webpack_require__(141);
	var viewport = __webpack_require__(143);
	var oLayers = __webpack_require__(146);
	var utils = __webpack_require__(150);
	var overlays = {};
	
	var checkOptions = function checkOptions(opts) {
		if (opts.trigger && !(opts.trigger instanceof HTMLElement)) {
			opts.trigger = document.querySelector(opts.trigger);
		}
	
		// There can't be a heading with an empty title
		if (opts.heading && (!opts.heading.title || !opts.heading.title.trim())) {
			throw new Error('"o-overlay error": To have a heading, a non-empty title needs to be set');
		}
	
		// Overlays that don't point at anything should be modal by default
		if (!opts.arrow && typeof opts.modal === 'undefined') {
			opts.modal = true;
		}
	
		if (opts.compact && opts.heading && opts.heading.shaded) {
			throw new Error('"o-overlay error": Compact overlays can\'t have a shaded header');
		}
	
		if (opts.arrow) {
			// Default arrow position is 'left'
			if (!opts.arrow.position) {
				opts.arrow.position = 'left';
			}
	
			// Overlays with arrows can not be modal
			if (opts.modal) {
				opts.modal = false;
			}
	
			if (opts.arrow.position !== 'left' && opts.arrow.position !== 'right' && opts.arrow.position !== 'top' && opts.arrow.position !== 'bottom') {
				throw new Error('"o-overlay error": The position of the arrow has to be either "top", "bottom", "left" or "right".');
			}
	
			// If the position of the arrow is 'top' or 'bottom', the heading can't be shaded
			if ((opts.arrow.position === 'top' || opts.arrow.position === 'bottom') && opts.heading && opts.heading.shaded) {
				throw new Error('"o-overlay error": The position of the arrow can\'t be set to "top" or "bottom" when the shaded heading option is set to true.');
			}
	
			// Default target for the arrow will be the trigger
			if (!opts.arrow.target) {
				if (opts.trigger) {
					opts.arrow.target = opts.trigger;
				} else {
					throw new Error('"o-overlay error": For overlays with arrows, if you don\'t set a trigger, you do need to set a target for the overlay.');
				}
			} else if (!(opts.arrow.target instanceof HTMLElement)) {
				opts.arrow.target = document.querySelector(opts.arrow.target);
			}
		}
	
		return opts;
	};
	
	var getOptionsFromTrigger = function getOptionsFromTrigger(trigger) {
		var opts = {};
		// Get config from data attributes set in the trigger if they haven't been passed via JS
		if (trigger instanceof HTMLElement) {
			Array.prototype.forEach.call(trigger.attributes, function (attr) {
				if (attr.name.indexOf('data-o-overlay') === 0) {
					// Remove the unnecessary part of the string the first time this is run for each attribute
					var key = attr.name.replace('data-o-overlay-', '');
					opts = utils.optionsFromKey(key, attr.value, opts);
				}
			});
			opts.trigger = trigger;
		}
		return opts;
	};
	
	var triggerClickHandler = function triggerClickHandler(id, ev) {
		ev.stopPropagation();
		var overlay = overlays[id];
		if (overlay) {
			if (overlay.visible === true) {
				overlay.close();
			} else {
				overlay.open();
			}
		}
	};
	
	var Overlay = function Overlay(id, opts) {
		viewport.listenTo('resize');
		this.visible = false;
		this.id = id;
	
		try {
			this.opts = checkOptions(opts);
		} catch (e) {
			this.broadcast('log', 'oErrors', {
				error: e
			});
			throw e;
		}
	
		if (!this.opts) {
			var noOptError = new Error('"o-overlay error": Required options have not been set');
			this.broadcast('log', 'oErrors', {
				error: noOptError
			});
			throw noOptError;
		}
		if (this.opts.trigger) {
			this.opts.trigger.addEventListener('click', triggerClickHandler.bind(this.opts.trigger, id), false);
			this.context = this.opts.arrow ? oLayers.getLayerContext(this.opts.arrow.target) : oLayers.getLayerContext(this.opts.trigger);
		} else {
			this.context = this.opts.arrow ? oLayers.getLayerContext(this.opts.arrow.target) : document.body;
		}
	
		this.delegates = {
			doc: new Delegate(),
			wrap: new Delegate(),
			context: new Delegate()
		};
	
		// Add this overlay to the overlays hashmap
		overlays[id] = this;
	};
	
	Overlay.prototype.open = function () {
		var _this = this;
	
		if (this.opts.trigger) {
			this.opts.trigger.setAttribute('aria-pressed', 'true');
		}
	
		if (!this.content) {
			(function () {
				var overlay = _this;
				_this.loadContent(function (html) {
					overlay.opts.html = html;
					if (!overlay.opts.html) {
						throw new Error('"o-overlay error": Content for the overlay needs to be set via the "html" or the "src" option.');
					}
					overlay.render();
				});
			})();
		} else {
			this.show();
		}
	};
	
	Overlay.prototype.loadContent = function (callback) {
		if (!this.opts.html && this.opts.src) {
			if (/^(https?\:\/)?\//.test(this.opts.src)) {
				utils.copyContentFromUrl(this.opts.src, function (html) {
					callback(html);
				});
			} else {
				utils.copyContentFromElement(document.querySelector(this.opts.src), function (html) {
					callback(html);
				});
			}
		} else {
			callback(this.opts.html);
		}
	};
	
	Overlay.prototype.render = function () {
		var wrapperEl = document.createElement('div');
		wrapperEl.className = 'o-overlay';
		wrapperEl.classList.add('o-overlay--' + this.id.replace(' ', '-'));
		wrapperEl.setAttribute('role', 'dialog');
		if (this.opts.zindex) {
			wrapperEl.style.zIndex = this.opts.zindex;
		}
		this.wrapper = wrapperEl;
	
		if (this.opts.heading) {
			var heading = document.createElement('header');
			var headingId = this.opts.heading.title.replace(' ', '-').toLowerCase();
			heading.classList.add('o-overlay__heading');
			heading.setAttribute('id', headingId);
			wrapperEl.setAttribute('aria-labelledby', headingId);
	
			if (this.opts.heading.shaded) {
				heading.classList.add('o-overlay__heading--shaded');
			}
	
			var button = document.createElement('a');
			button.className = 'o-overlay__close';
			button.setAttribute('role', 'button');
			button.setAttribute('tabindex', '0');
			button.setAttribute('href', '#void');
			button.setAttribute('aria-label', 'Close');
			button.setAttribute('title', 'Close');
	
			var title = document.createElement('span');
			title.setAttribute('role', 'heading');
			title.className = 'o-overlay__title';
			title.innerHTML = this.opts.heading.title;
	
			heading.appendChild(button);
			heading.appendChild(title);
			wrapperEl.appendChild(heading);
		}
	
		var content = document.createElement('section');
		content.className = 'o-overlay__content';
		wrapperEl.appendChild(content);
	
		this.content = content;
	
		if (this.opts.compact) {
			wrapperEl.classList.add('o-overlay--compact');
		}
	
		this.show();
	};
	
	Overlay.prototype.show = function () {
		if (this.opts.modal) {
			this.wrapper.classList.add('o-overlay--modal');
			var shadow = document.createElement('div');
			shadow.className = 'o-overlay-shadow';
			this.shadow = shadow;
			document.body.appendChild(shadow);
		}
	
		this.delegates.doc.root(document.body);
		this.delegates.wrap.root(this.wrapper);
		this.delegates.context.root(this.context);
	
		this.closeHandler = this.close.bind(this);
		this.resizeListenerHandler = this.resizeListener.bind(this);
		this.delegates.doc.on('oViewport.resize', 'body', this.resizeListenerHandler);
		this.closeOnNewLayerHandler = this.closeOnNewLayer.bind(this);
		this.delegates.context.on('oLayers.new', this.closeOnNewLayerHandler);
	
		if (this.opts.heading) {
			this.delegates.wrap.on('click', '.o-overlay__close', this.closeHandler);
			this.delegates.wrap.on('touchend', '.o-overlay__close', this.closeHandler);
		}
	
		this.closeOnExternalClickHandler = this.closeOnExternalClick.bind(this);
		this.delegates.doc.on('click', 'body', this.closeOnExternalClickHandler);
		this.delegates.doc.on('touchend', 'body', this.closeOnExternalClickHandler);
	
		this.closeOnEscapePressHandler = this.closeOnEscapePress.bind(this);
		this.delegates.doc.on('keyup', this.closeOnEscapePressHandler);
	
		this.broadcast('new', 'oLayers');
		this.context.appendChild(this.wrapper);
	
		// Give the overlay focus
		this.wrapper.setAttribute('tabindex', '0');
		this.wrapper.style.outline = 0;
	
		// Renders content after overlay has been added so css is applied before that
		// Thay way if an element has autofocus, the window won't scroll to the bottom
		// in Safari as the overlay is already in position
		var overlay = this;
		window.requestAnimationFrame(function () {
			if (!overlay.content.innerHTML) {
				// overlay.respondToWindow(viewport.getSize());
				if (typeof overlay.opts.html === 'string') {
					overlay.content.innerHTML = overlay.opts.html;
				} else {
					overlay.content.appendChild(overlay.opts.html);
				}
			}
			overlay.width = overlay.getWidth();
			overlay.height = overlay.getHeight();
			overlay.respondToWindow(viewport.getSize());
			overlay.visible = true;
			overlay.wrapper.focus();
			overlay.broadcast('ready');
	
			// Add o-tracking integration
			overlay.broadcast('event', 'oTracking', {
				category: 'overlay',
				action: 'show',
				overlay_id: overlay.id
			});
		});
	};
	
	Overlay.prototype.close = function () {
		this.delegates.doc.destroy();
		this.delegates.wrap.destroy();
		this.delegates.context.destroy();
	
		viewport.stopListeningTo('resize');
	
		this.broadcast('destroy');
		this.broadcast('event', 'oTracking', {
			category: 'overlay',
			action: 'close',
			overlay_id: this.id
		});
	
		this.context.removeChild(this.wrapper);
		if (this.opts.modal) {
			this.shadow.parentNode.removeChild(this.shadow);
		}
	
		// Put focus back on the triggering element
		if (this.opts.trigger) {
			this.opts.trigger.focus();
			this.opts.trigger.setAttribute('aria-pressed', 'false');
		}
		this.visible = false;
		this.broadcast('close', 'oLayers');
		return false;
	};
	
	Overlay.prototype.closeOnExternalClick = function (ev) {
		if (!this.wrapper.contains(ev.target) && !this.opts.modal && this.opts.trigger && !this.opts.trigger.contains(ev.target)) {
			this.close();
		}
	};
	
	Overlay.prototype.closeOnEscapePress = function (ev) {
		if (ev.keyCode === 27) {
			this.close();
		}
	};
	
	Overlay.prototype.closeOnNewLayer = function (ev) {
		if (!ev.detail || ev.detail.el !== this) {
			this.close();
		}
	};
	
	Overlay.prototype.resizeListener = function (ev) {
		if (!this.wrapper.contains(ev.target)) {
			this.respondToWindow(ev.detail.viewport);
		}
	};
	
	Overlay.prototype.broadcast = function (eventType, namespace, detail) {
		namespace = namespace || 'oOverlay';
		var target = namespace === 'oLayers' ? this.context : this.wrapper || document.body;
	
		detail = detail || {};
	
		if (namespace !== 'oTracking') {
			detail.el = this;
		}
	
		target.dispatchEvent(new CustomEvent(namespace + '.' + eventType, {
			detail: detail,
			// Don't bubble above the overlay's layer context otherwise we risk triggering a listener on a parent context
			bubbles: namespace !== 'oLayers' ? true : false
		}));
	};
	
	Overlay.prototype.realign = function (dimension, size) {
		var edge = dimension === 'width' ? 'left' : 'top';
	
		if (size <= this[dimension]) {
			this.wrapper.classList.add('o-overlay--full-' + dimension);
			this.wrapper.style[edge] = '0';
			this.wrapper.style['margin' + utils.capitalise(edge)] = 0;
			if (dimension === 'height') {
				// Set the exact height that the content of the overlay will have which is the total
				// height of the overlay minus the heading if there is one. If height = 100%, the
				// heading is part of that 100%, so some content is truncated.
				var borderHeight = this.wrapper.offsetHeight - this.wrapper.clientHeight;
				this.content.style.height = this.wrapper.offsetHeight - (this.opts.heading ? this.wrapper.querySelector('header').offsetHeight : 0) - borderHeight + 'px';
			}
		} else {
			if (dimension === 'height') {
				// Remove the property and let the overlay extend to its content
				this.content.style.height = null;
			}
			this.wrapper.classList.remove('o-overlay--full-' + dimension);
			if (!this.opts.arrow) {
				this.wrapper.style['margin' + utils.capitalise(edge)] = -(this.wrapper['offset' + utils.capitalise(dimension)] / 2) + 'px';
			}
			// Set alignment in JavaScript (not via CSS) after all other styles have been applied
			// so that browsers compute it properly. If it's applied earlier, when the negative
			// margin is calculated, the overlay might not fit, so it shrinks and the negative
			// margin would be incorrect
			this.wrapper.style[edge] = '50%';
		}
	};
	
	Overlay.prototype.respondToWindow = function (size) {
		this.realign('width', size.width);
		this.realign('height', size.height);
	
		this.wrapper.classList.remove('o-overlay__arrow-top');
		this.wrapper.classList.remove('o-overlay__arrow-bottom');
		this.wrapper.classList.remove('o-overlay__arrow-left');
		this.wrapper.classList.remove('o-overlay__arrow-right');
	
		if (this.opts.arrow && !this.fills()) {
			this.opts.arrow.currentposition = this.getCurrentArrowPosition(this.opts.arrow.position);
			this.wrapper.classList.add('o-overlay__arrow-' + this.opts.arrow.currentposition);
	
			var edge = this.opts.arrow.currentposition === 'left' || this.opts.arrow.currentposition === 'right' ? 'left' : 'top';
			var oppositeEdge = this.opts.arrow.currentposition === 'left' || this.opts.arrow.currentposition === 'right' ? 'top' : 'left';
			var dimension = this.opts.arrow.currentposition === 'left' || this.opts.arrow.currentposition === 'right' ? 'height' : 'width';
	
			var offset = 0;
			// Protrusion distance for the arrow. It's 13 due to the border around it
			var arrowSize = 13;
			var targetClientRect = utils.getOffsetRect(this.opts.arrow.target);
			var dimensionValue = targetClientRect[dimension];
			switch (this.opts.arrow.currentposition) {
				case 'left':
					offset = targetClientRect.left + targetClientRect.width + arrowSize;
					break;
				case 'right':
					offset = targetClientRect.left - this.width - arrowSize;
					break;
				case 'top':
					offset = targetClientRect.top + targetClientRect.height + arrowSize;
					break;
				case 'bottom':
					offset = targetClientRect.top - this.height - arrowSize;
					break;
			}
	
			this.wrapper.style[edge] = offset + 'px';
			// 1. Get where the element is positioned
			// 2. Add its width or height divided by two to get its center
			// 3. Substract the width or height divided by two of the overlay so the arrow, which is in the center, points to the center of the side of the target
			this.wrapper.style[oppositeEdge] = targetClientRect[oppositeEdge] + dimensionValue / 2 - this[dimension] / 2 + 'px';
		}
	};
	
	Overlay.prototype.getCurrentArrowPosition = function (position) {
		var targetClientRect = this.opts.arrow.target.getBoundingClientRect();
		// Protrusion distance for the arrow. It's 13 due to the border around it
		var arrowSize = 13;
		var wrapperWidth = this.wrapper.getBoundingClientRect().width + arrowSize;
		var wrapperHeight = this.wrapper.getBoundingClientRect().height + arrowSize;
		// Check if the overlay won't fit on the side set in the options and that it will on the opposite side.
		// In that case, use the opposite side
		switch (this.opts.arrow.position) {
			case 'left':
				if (targetClientRect.right + wrapperWidth >= window.innerWidth && targetClientRect.left - wrapperWidth > 0) {
	
					position = 'right';
				}
				break;
			case 'right':
				if (targetClientRect.left - wrapperWidth <= 0 && targetClientRect.right + wrapperWidth < window.innerWidth) {
	
					position = 'left';
				}
				break;
			case 'top':
				if (targetClientRect.bottom + wrapperHeight >= window.innerHeight && targetClientRect.top - wrapperHeight + arrowSize > 0) {
	
					position = 'bottom';
				}
				break;
			case 'bottom':
				if (targetClientRect.top - wrapperHeight <= 0 && targetClientRect.bottom + wrapperHeight < window.innerHeight) {
	
					position = 'top';
				}
				break;
		}
		return position;
	};
	
	Overlay.prototype.fills = function (dimension) {
		return this.wrapper.classList.contains('o-overlay--full-' + dimension);
	};
	
	Overlay.prototype.destroy = function () {
		if (this.visible === true) {
			this.close();
		}
		if (this.opts.trigger) {
			this.opts.trigger.removeEventListener('click', triggerClickHandler);
		}
		delete overlays[this.id];
	};
	
	Overlay.prototype.getHeight = function () {
		var borderHeight = this.wrapper.offsetHeight - this.wrapper.clientHeight;
		return this.content.scrollHeight + (this.opts.heading ? this.wrapper.querySelector('header').offsetHeight : 0) + borderHeight;
	};
	
	Overlay.prototype.getWidth = function () {
		var borderWidth = this.wrapper.offsetWidth - this.wrapper.clientWidth;
		return this.content.scrollWidth + borderWidth;
	};
	
	Overlay.init = function (el) {
		if (!el) {
			el = document.body;
		}
		if (!(el instanceof HTMLElement)) {
			el = document.querySelector(el);
		}
		var triggers = el.querySelectorAll('.o-overlay-trigger');
		var overlaysArray = [];
		for (var t = 0; t < triggers.length; t++) {
			// There can only be one overlay per trigger when set declaratively, so the first trigger found for a given overlay will be the one used to create the overlay
			if (!overlays[triggers[t].getAttribute('data-o-overlay-id')]) {
				overlaysArray.push(new Overlay(triggers[t].getAttribute('data-o-overlay-id'), getOptionsFromTrigger(triggers[t])));
			}
		}
	
		return overlaysArray;
	};
	
	Overlay.destroy = function () {
		var overlayIds = (0, _keys2.default)(overlays);
		overlayIds.forEach(function (id) {
			overlays[id].destroy();
		});
	};
	
	Overlay.getOverlays = function () {
		return overlays;
	};
	
	module.exports = Overlay;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(138), __esModule: true };

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(139);
	module.exports = __webpack_require__(20).Object.keys;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(55)
	  , $keys    = __webpack_require__(39);
	
	__webpack_require__(140)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(18)
	  , core    = __webpack_require__(20)
	  , fails   = __webpack_require__(29);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(142);

/***/ },
/* 142 */
/***/ function(module, exports) {

	/*jshint browser:true, node:true*/
	
	'use strict';
	
	module.exports = Delegate;
	
	/**
	 * DOM event delegator
	 *
	 * The delegator will listen
	 * for events that bubble up
	 * to the root node.
	 *
	 * @constructor
	 * @param {Node|string} [root] The root node or a selector string matching the root node
	 */
	function Delegate(root) {
	
	  /**
	   * Maintain a map of listener
	   * lists, keyed by event name.
	   *
	   * @type Object
	   */
	  this.listenerMap = [{}, {}];
	  if (root) {
	    this.root(root);
	  }
	
	  /** @type function() */
	  this.handle = Delegate.prototype.handle.bind(this);
	}
	
	/**
	 * Start listening for events
	 * on the provided DOM element
	 *
	 * @param  {Node|string} [root] The root node or a selector string matching the root node
	 * @returns {Delegate} This method is chainable
	 */
	Delegate.prototype.root = function (root) {
	  var listenerMap = this.listenerMap;
	  var eventType;
	
	  // Remove master event listeners
	  if (this.rootElement) {
	    for (eventType in listenerMap[1]) {
	      if (listenerMap[1].hasOwnProperty(eventType)) {
	        this.rootElement.removeEventListener(eventType, this.handle, true);
	      }
	    }
	    for (eventType in listenerMap[0]) {
	      if (listenerMap[0].hasOwnProperty(eventType)) {
	        this.rootElement.removeEventListener(eventType, this.handle, false);
	      }
	    }
	  }
	
	  // If no root or root is not
	  // a dom node, then remove internal
	  // root reference and exit here
	  if (!root || !root.addEventListener) {
	    if (this.rootElement) {
	      delete this.rootElement;
	    }
	    return this;
	  }
	
	  /**
	   * The root node at which
	   * listeners are attached.
	   *
	   * @type Node
	   */
	  this.rootElement = root;
	
	  // Set up master event listeners
	  for (eventType in listenerMap[1]) {
	    if (listenerMap[1].hasOwnProperty(eventType)) {
	      this.rootElement.addEventListener(eventType, this.handle, true);
	    }
	  }
	  for (eventType in listenerMap[0]) {
	    if (listenerMap[0].hasOwnProperty(eventType)) {
	      this.rootElement.addEventListener(eventType, this.handle, false);
	    }
	  }
	
	  return this;
	};
	
	/**
	 * @param {string} eventType
	 * @returns boolean
	 */
	Delegate.prototype.captureForType = function (eventType) {
	  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;
	};
	
	/**
	 * Attach a handler to one
	 * event for all elements
	 * that match the selector,
	 * now or in the future
	 *
	 * The handler function receives
	 * three arguments: the DOM event
	 * object, the node that matched
	 * the selector while the event
	 * was bubbling and a reference
	 * to itself. Within the handler,
	 * 'this' is equal to the second
	 * argument.
	 *
	 * The node that actually received
	 * the event can be accessed via
	 * 'event.target'.
	 *
	 * @param {string} eventType Listen for these events
	 * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element
	 * @param {function()} handler Handler function - event data passed here will be in event.data
	 * @param {Object} [eventData] Data to pass in event.data
	 * @returns {Delegate} This method is chainable
	 */
	Delegate.prototype.on = function (eventType, selector, handler, useCapture) {
	  var root, listenerMap, matcher, matcherParam;
	
	  if (!eventType) {
	    throw new TypeError('Invalid event type: ' + eventType);
	  }
	
	  // handler can be passed as
	  // the second or third argument
	  if (typeof selector === 'function') {
	    useCapture = handler;
	    handler = selector;
	    selector = null;
	  }
	
	  // Fallback to sensible defaults
	  // if useCapture not set
	  if (useCapture === undefined) {
	    useCapture = this.captureForType(eventType);
	  }
	
	  if (typeof handler !== 'function') {
	    throw new TypeError('Handler must be a type of Function');
	  }
	
	  root = this.rootElement;
	  listenerMap = this.listenerMap[useCapture ? 1 : 0];
	
	  // Add master handler for type if not created yet
	  if (!listenerMap[eventType]) {
	    if (root) {
	      root.addEventListener(eventType, this.handle, useCapture);
	    }
	    listenerMap[eventType] = [];
	  }
	
	  if (!selector) {
	    matcherParam = null;
	
	    // COMPLEX - matchesRoot needs to have access to
	    // this.rootElement, so bind the function to this.
	    matcher = matchesRoot.bind(this);
	
	    // Compile a matcher for the given selector
	  } else if (/^[a-z]+$/i.test(selector)) {
	    matcherParam = selector;
	    matcher = matchesTag;
	  } else if (/^#[a-z0-9\-_]+$/i.test(selector)) {
	    matcherParam = selector.slice(1);
	    matcher = matchesId;
	  } else {
	    matcherParam = selector;
	    matcher = matches;
	  }
	
	  // Add to the list of listeners
	  listenerMap[eventType].push({
	    selector: selector,
	    handler: handler,
	    matcher: matcher,
	    matcherParam: matcherParam
	  });
	
	  return this;
	};
	
	/**
	 * Remove an event handler
	 * for elements that match
	 * the selector, forever
	 *
	 * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters
	 * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed
	 * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed
	 * @returns {Delegate} This method is chainable
	 */
	Delegate.prototype.off = function (eventType, selector, handler, useCapture) {
	  var i, listener, listenerMap, listenerList, singleEventType;
	
	  // Handler can be passed as
	  // the second or third argument
	  if (typeof selector === 'function') {
	    useCapture = handler;
	    handler = selector;
	    selector = null;
	  }
	
	  // If useCapture not set, remove
	  // all event listeners
	  if (useCapture === undefined) {
	    this.off(eventType, selector, handler, true);
	    this.off(eventType, selector, handler, false);
	    return this;
	  }
	
	  listenerMap = this.listenerMap[useCapture ? 1 : 0];
	  if (!eventType) {
	    for (singleEventType in listenerMap) {
	      if (listenerMap.hasOwnProperty(singleEventType)) {
	        this.off(singleEventType, selector, handler);
	      }
	    }
	
	    return this;
	  }
	
	  listenerList = listenerMap[eventType];
	  if (!listenerList || !listenerList.length) {
	    return this;
	  }
	
	  // Remove only parameter matches
	  // if specified
	  for (i = listenerList.length - 1; i >= 0; i--) {
	    listener = listenerList[i];
	
	    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {
	      listenerList.splice(i, 1);
	    }
	  }
	
	  // All listeners removed
	  if (!listenerList.length) {
	    delete listenerMap[eventType];
	
	    // Remove the main handler
	    if (this.rootElement) {
	      this.rootElement.removeEventListener(eventType, this.handle, useCapture);
	    }
	  }
	
	  return this;
	};
	
	/**
	 * Handle an arbitrary event.
	 *
	 * @param {Event} event
	 */
	Delegate.prototype.handle = function (event) {
	  var i,
	      l,
	      type = event.type,
	      root,
	      phase,
	      listener,
	      returned,
	      listenerList = [],
	      target,
	      /** @const */EVENTIGNORE = 'ftLabsDelegateIgnore';
	
	  if (event[EVENTIGNORE] === true) {
	    return;
	  }
	
	  target = event.target;
	
	  // Hardcode value of Node.TEXT_NODE
	  // as not defined in IE8
	  if (target.nodeType === 3) {
	    target = target.parentNode;
	  }
	
	  root = this.rootElement;
	
	  phase = event.eventPhase || (event.target !== event.currentTarget ? 3 : 2);
	
	  switch (phase) {
	    case 1:
	      //Event.CAPTURING_PHASE:
	      listenerList = this.listenerMap[1][type];
	      break;
	    case 2:
	      //Event.AT_TARGET:
	      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);
	      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);
	      break;
	    case 3:
	      //Event.BUBBLING_PHASE:
	      listenerList = this.listenerMap[0][type];
	      break;
	  }
	
	  // Need to continuously check
	  // that the specific list is
	  // still populated in case one
	  // of the callbacks actually
	  // causes the list to be destroyed.
	  l = listenerList.length;
	  while (target && l) {
	    for (i = 0; i < l; i++) {
	      listener = listenerList[i];
	
	      // Bail from this loop if
	      // the length changed and
	      // no more listeners are
	      // defined between i and l.
	      if (!listener) {
	        break;
	      }
	
	      // Check for match and fire
	      // the event if there's one
	      //
	      // TODO:MCG:20120117: Need a way
	      // to check if event#stopImmediatePropagation
	      // was called. If so, break both loops.
	      if (listener.matcher.call(target, listener.matcherParam, target)) {
	        returned = this.fire(event, target, listener);
	      }
	
	      // Stop propagation to subsequent
	      // callbacks if the callback returned
	      // false
	      if (returned === false) {
	        event[EVENTIGNORE] = true;
	        event.preventDefault();
	        return;
	      }
	    }
	
	    // TODO:MCG:20120117: Need a way to
	    // check if event#stopPropagation
	    // was called. If so, break looping
	    // through the DOM. Stop if the
	    // delegation root has been reached
	    if (target === root) {
	      break;
	    }
	
	    l = listenerList.length;
	    target = target.parentElement;
	  }
	};
	
	/**
	 * Fire a listener on a target.
	 *
	 * @param {Event} event
	 * @param {Node} target
	 * @param {Object} listener
	 * @returns {boolean}
	 */
	Delegate.prototype.fire = function (event, target, listener) {
	  return listener.handler.call(target, event, target);
	};
	
	/**
	 * Check whether an element
	 * matches a generic selector.
	 *
	 * @type function()
	 * @param {string} selector A CSS selector
	 */
	var matches = function (el) {
	  if (!el) return;
	  var p = el.prototype;
	  return p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;
	}(Element);
	
	/**
	 * Check whether an element
	 * matches a tag selector.
	 *
	 * Tags are NOT case-sensitive,
	 * except in XML (and XML-based
	 * languages such as XHTML).
	 *
	 * @param {string} tagName The tag name to test against
	 * @param {Element} element The element to test with
	 * @returns boolean
	 */
	function matchesTag(tagName, element) {
	  return tagName.toLowerCase() === element.tagName.toLowerCase();
	}
	
	/**
	 * Check whether an element
	 * matches the root.
	 *
	 * @param {?String} selector In this case this is always passed through as null and not used
	 * @param {Element} element The element to test with
	 * @returns boolean
	 */
	function matchesRoot(selector, element) {
	  /*jshint validthis:true*/
	  if (this.rootElement === window) return element === document;
	  return this.rootElement === element;
	}
	
	/**
	 * Check whether the ID of
	 * the element in 'this'
	 * matches the given ID.
	 *
	 * IDs are case-sensitive.
	 *
	 * @param {string} id The ID to test against
	 * @param {Element} element The element to test with
	 * @returns boolean
	 */
	function matchesId(id, element) {
	  return id === element.id;
	}
	
	/**
	 * Short hand for off()
	 * and root(), ie both
	 * with no parameters
	 *
	 * @return void
	 */
	Delegate.prototype.destroy = function () {
	  this.off();
	  this.root();
	};

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(144);

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// let debug;
	var utils = __webpack_require__(145);
	var throttle = utils.throttle;
	var debounce = utils.debounce;
	
	var listeners = {};
	var intervals = {
		resize: 100,
		orientation: 100,
		visibility: 100,
		scroll: 100
	};
	
	function setThrottleInterval(eventType, interval) {
		if (typeof arguments[0] === 'number') {
			setThrottleInterval('scroll', arguments[0]);
			setThrottleInterval('resize', arguments[1]);
			setThrottleInterval('orientation', arguments[2]);
			setThrottleInterval('visibility', arguments[3]);
		} else if (interval) {
			intervals[eventType] = interval;
		}
	}
	
	function listenToResize() {
		if (listeners.resize) {
			return;
		}
		var eventType = 'resize';
		var handler = debounce(function (ev) {
			utils.broadcast('resize', {
				viewport: utils.getSize(),
				originalEvent: ev
			});
		}, intervals.resize);
	
		window.addEventListener(eventType, handler);
		listeners.resize = {
			eventType: eventType,
			handler: handler
		};
	}
	
	function listenToOrientation() {
	
		if (listeners.orientation) {
			return;
		}
	
		var eventType = 'orientationchange';
		var handler = debounce(function (ev) {
			utils.broadcast('orientation', {
				viewport: utils.getSize(),
				orientation: utils.getOrientation(),
				originalEvent: ev
			});
		}, intervals.orientation);
	
		window.addEventListener(eventType, handler);
		listeners.orientation = {
			eventType: eventType,
			handler: handler
		};
	}
	
	function listenToVisibility() {
	
		if (listeners.visibility) {
			return;
		}
	
		var eventType = utils.detectVisiblityAPI().eventType;
		var handler = debounce(function (ev) {
			utils.broadcast('visibility', {
				hidden: utils.getVisibility(),
				originalEvent: ev
			});
		}, intervals.visibility);
	
		window.addEventListener(eventType, handler);
	
		listeners.visibility = {
			eventType: eventType,
			handler: handler
		};
	}
	
	function listenToScroll() {
	
		if (listeners.scroll) {
			return;
		}
	
		var eventType = 'scroll';
		var handler = throttle(function (ev) {
			var scrollPos = utils.getScrollPosition();
			utils.broadcast('scroll', {
				viewport: utils.getSize(),
				scrollHeight: scrollPos.height,
				scrollLeft: scrollPos.left,
				scrollTop: scrollPos.top,
				scrollWidth: scrollPos.width,
				originalEvent: ev
			});
		}, intervals.scroll);
	
		window.addEventListener(eventType, handler);
		listeners.scroll = {
			eventType: eventType,
			handler: handler
		};
	}
	
	function listenTo(eventType) {
		if (eventType === 'resize' || eventType === 'all') {
			listenToResize();
		}
	
		if (eventType === 'scroll' || eventType === 'all') {
			listenToScroll();
		}
	
		if (eventType === 'orientation' || eventType === 'all') {
			listenToOrientation();
		}
	
		if (eventType === 'visibility' || eventType === 'all') {
			listenToVisibility();
		}
	}
	
	function stopListeningTo(eventType) {
		if (eventType === 'all') {
			(0, _keys2.default)(listeners).forEach(stopListeningTo);
		} else if (listeners[eventType]) {
			window.removeEventListener(listeners[eventType].eventType, listeners[eventType].handler);
			delete listeners[eventType];
		}
	}
	
	module.exports = {
		debug: function debug() {
			// debug = true;
			utils.debug();
		},
		listenTo: listenTo,
		stopListeningTo: stopListeningTo,
		setThrottleInterval: setThrottleInterval,
		getOrientation: utils.getOrientation,
		getSize: utils.getSize,
		getScrollPosition: utils.getScrollPosition
	};

/***/ },
/* 145 */
/***/ function(module, exports) {

	'use strict';
	
	/* jshint devel: true */
	
	var _debug = void 0;
	
	function broadcast(eventType, data, target) {
		target = target || document.body;
	
		if (_debug) {
			console.log('o-viewport', eventType, data);
		}
	
		target.dispatchEvent(new CustomEvent('oViewport.' + eventType, {
			detail: data,
			bubbles: true
		}));
	}
	
	function getHeight(ignoreScrollbars) {
		return ignoreScrollbars ? document.documentElement.clientHeight : Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
	}
	
	function getWidth(ignoreScrollbars) {
		return ignoreScrollbars ? document.documentElement.clientWidth : Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	}
	
	function getSize(ignoreScrollbars) {
		return {
			height: module.exports.getHeight(ignoreScrollbars),
			width: module.exports.getWidth(ignoreScrollbars)
		};
	}
	
	function getScrollPosition() {
		var de = document.documentElement;
		var db = document.body;
	
		// adapted from https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY
		var isCSS1Compat = (document.compatMode || '') === 'CSS1Compat';
	
		var ieX = isCSS1Compat ? de.scrollLeft : db.scrollLeft;
		var ieY = isCSS1Compat ? de.scrollTop : db.scrollTop;
		return {
			height: db.scrollHeight,
			width: db.scrollWidth,
			left: window.pageXOffset || window.scrollX || ieX,
			top: window.pageYOffset || window.scrollY || ieY
		};
	}
	
	function getOrientation() {
		var orientation = window.screen.orientation || window.screen.mozOrientation || window.screen.msOrientation || undefined;
		if (orientation) {
			return typeof orientation === 'string' ? orientation.split('-')[0] : orientation.type.split('-')[0];
		} else if (window.matchMedia) {
			return window.matchMedia('(orientation: portrait)').matches ? 'portrait' : 'landscape';
		} else {
			return getHeight() >= getWidth() ? 'portrait' : 'landscape';
		}
	}
	
	function detectVisiblityAPI() {
		var hiddenName = void 0;
		var eventType = void 0;
		if (typeof document.hidden !== 'undefined') {
			hiddenName = 'hidden';
			eventType = 'visibilitychange';
		} else if (typeof document.mozHidden !== 'undefined') {
			hiddenName = 'mozHidden';
			eventType = 'mozvisibilitychange';
		} else if (typeof document.msHidden !== 'undefined') {
			hiddenName = 'msHidden';
			eventType = 'msvisibilitychange';
		} else if (typeof document.webkitHidden !== 'undefined') {
			hiddenName = 'webkitHidden';
			eventType = 'webkitvisibilitychange';
		}
	
		return {
			hiddenName: hiddenName,
			eventType: eventType
		};
	}
	
	function getVisibility() {
		var hiddenName = detectVisiblityAPI().hiddenName;
		return document[hiddenName];
	}
	
	function debounce(func, wait) {
		var timeout = void 0;
		return function () {
			var _this = this;
	
			var args = arguments;
			var later = function later() {
				timeout = null;
				func.apply(_this, args);
			};
			clearTimeout(timeout);
			timeout = setTimeout(later, wait);
		};
	};
	
	function throttle(func, wait) {
		var timeout = void 0;
		return function () {
			var _this2 = this;
	
			if (timeout) {
				return;
			}
			var args = arguments;
			var later = function later() {
				timeout = null;
				func.apply(_this2, args);
			};
	
			timeout = setTimeout(later, wait);
		};
	};
	
	module.exports = {
		debug: function debug() {
			_debug = true;
		},
		broadcast: broadcast,
		getWidth: getWidth,
		getHeight: getHeight,
		getSize: getSize,
		getScrollPosition: getScrollPosition,
		getVisibility: getVisibility,
		getOrientation: getOrientation,
		detectVisiblityAPI: detectVisiblityAPI,
		throttle: throttle,
		debounce: debounce
	};

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(147);

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var dom = __webpack_require__(148);
	
	module.exports = {
		getLayerContext: function getLayerContext(el) {
			return dom.getClosestMatch(el, '.o-layers__context') || document.body;
		}
	};

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(149);

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/*global exports*/
	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getClosestMatch(el, selector) {
		while (el) {
			if (el.matches(selector)) {
				return el;
			} else {
				el = el.parentElement;
			}
		}
		return false;
	}
	
	function getIndex(el) {
		var i = 0;
		if (el && (typeof el === 'undefined' ? 'undefined' : (0, _typeof3.default)(el)) === 'object' && el.nodeType === 1) {
			while (el.previousSibling) {
				el = el.previousSibling;
				if (el.nodeType === 1) {
					++i;
				}
			}
			return i;
		}
	}
	
	exports.getClosestMatch = getClosestMatch;
	exports.getIndex = getIndex;

/***/ },
/* 150 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
		unCapitalise: function unCapitalise(str) {
			return str.charAt(0).toLowerCase() + str.substr(1);
		},
	
		capitalise: function capitalise(str) {
			return str.charAt(0).toUpperCase() + str.substr(1);
		},
	
		copyContentFromElement: function copyContentFromElement(content, callback) {
			var html = content.nodeName === 'SCRIPT' ? content.innerHTML : content.outerHTML;
			callback(html);
		},
	
		copyContentFromUrl: function copyContentFromUrl(url, callback) {
			var xhr = new XMLHttpRequest();
			xhr.open('GET', url, true);
			xhr.onload = function () {
				// eslint complains of e not being used
				if (xhr.readyState === 4) {
					if (xhr.status === 200) {
						callback(xhr.responseText);
					} else {
						callback('Content failed to load correctly');
					}
				}
			};
			xhr.onerror = function (e) {
				throw new Error('"o-overlay error": Fetching content from ' + url + ' failed with errror ' + e);
			};
	
			xhr.send(null);
		},
	
		optionsFromKey: function optionsFromKey(key, value, opts) {
			var dashIndex = key.indexOf('-');
			if (dashIndex === -1) {
				try {
					// If it's a JSON, a boolean or a number, we want it stored like that, and not as a string
					// We also replace all ' with " so JSON strings are parsed correctly
					opts[key] = JSON.parse(value.replace(/\'/g, '"'));
				} catch (e) {
					opts[key] = value;
				}
			} else {
				// Key that holds an object instead of a value
				var subKey = key.substr(0, dashIndex);
	
				// If sub-object doesn't exist already, create it
				if (!opts[subKey]) {
					opts[subKey] = {};
				}
	
				// Run function again starting with the rest of the key
				opts[subKey] = this.optionsFromKey(key.substr(dashIndex + 1), value, opts[subKey]);
			}
	
			return opts;
		},
	
		// Code based on this article to get coordinates independent of scroll: http://javascript.info/tutorial/coordinates
		getOffsetRect: function getOffsetRect(e) {
			var eClientRect = e.getBoundingClientRect();
	
			var body = document.body;
			var docElem = document.documentElement;
	
			// docElem.scrollTop/Left for IE, use body as a last resort
			var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;
			var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;
	
			// IE sometimes shifts the upper left corner
			var clientTop = docElem.clientTop || body.clientTop || 0;
			var clientLeft = docElem.clientLeft || body.clientLeft || 0;
	
			return {
				// IE8 doesn't support getBoundingClientRect().height and .weight
				width: eClientRect.width || eClientRect.right - eClientRect.left,
				height: eClientRect.height || eClientRect.bottom - eClientRect.top,
				top: eClientRect.top + scrollTop - clientTop,
				left: eClientRect.left + scrollLeft - clientLeft
			};
		}
	};

/***/ },
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(173), __esModule: true };

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(12);
	__webpack_require__(174);
	module.exports = __webpack_require__(20).Array.from;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(21)
	  , $export        = __webpack_require__(18)
	  , toObject       = __webpack_require__(55)
	  , call           = __webpack_require__(175)
	  , isArrayIter    = __webpack_require__(176)
	  , toLength       = __webpack_require__(45)
	  , createProperty = __webpack_require__(177)
	  , getIterFn      = __webpack_require__(178);
	
	$export($export.S + $export.F * !__webpack_require__(180)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(25);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(35)
	  , ITERATOR   = __webpack_require__(53)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(24)
	  , createDesc      = __webpack_require__(32);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(179)
	  , ITERATOR  = __webpack_require__(53)('iterator')
	  , Iterators = __webpack_require__(35);
	module.exports = __webpack_require__(20).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(43)
	  , TAG = __webpack_require__(53)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(53)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(182);

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports._ReactDom = exports._React = exports._superstoreSync = exports._superstore = exports._ftdomdelegate = exports._image = exports._video = exports._viewport = exports._overlay = exports._grid = exports._expander = exports._notification = exports._utils = exports._myftDigestPromo = exports._myft = exports._footer = exports._messagePrompts = exports._welcomeMessage = exports._cookieMessage = exports._promoMessages = exports._header = exports._date = exports._tracking = exports._ads = exports.configure = exports.bootstrap = undefined;
	
	var _jsSetup = __webpack_require__(183);
	
	Object.defineProperty(exports, 'bootstrap', {
	  enumerable: true,
	  get: function get() {
	    return _jsSetup.bootstrap;
	  }
	});
	Object.defineProperty(exports, 'configure', {
	  enumerable: true,
	  get: function get() {
	    return _jsSetup.configure;
	  }
	});
	
	__webpack_require__(371);
	
	var _ads2 = __webpack_require__(213);
	
	var _ads3 = _interopRequireDefault(_ads2);
	
	var _tracking2 = __webpack_require__(243);
	
	var _tracking3 = _interopRequireDefault(_tracking2);
	
	var _date2 = __webpack_require__(280);
	
	var _date3 = _interopRequireDefault(_date2);
	
	var _header2 = __webpack_require__(283);
	
	var _header3 = _interopRequireDefault(_header2);
	
	var _promoMessages2 = __webpack_require__(316);
	
	var _promoMessages3 = _interopRequireDefault(_promoMessages2);
	
	var _cookieMessage2 = __webpack_require__(317);
	
	var _cookieMessage3 = _interopRequireDefault(_cookieMessage2);
	
	var _welcomeMessage2 = __webpack_require__(318);
	
	var _welcomeMessage3 = _interopRequireDefault(_welcomeMessage2);
	
	var _messagePrompts2 = __webpack_require__(319);
	
	var _messagePrompts3 = _interopRequireDefault(_messagePrompts2);
	
	var _footer2 = __webpack_require__(320);
	
	var _footer3 = _interopRequireDefault(_footer2);
	
	var _myft2 = __webpack_require__(325);
	
	var _myft3 = _interopRequireDefault(_myft2);
	
	var _myftDigestPromo2 = __webpack_require__(361);
	
	var _myftDigestPromo3 = _interopRequireDefault(_myftDigestPromo2);
	
	var _utils2 = __webpack_require__(203);
	
	var _utils3 = _interopRequireDefault(_utils2);
	
	var _notification2 = __webpack_require__(352);
	
	var _notification3 = _interopRequireDefault(_notification2);
	
	var _expander2 = __webpack_require__(373);
	
	var _expander3 = _interopRequireDefault(_expander2);
	
	var _grid2 = __webpack_require__(376);
	
	var _grid3 = _interopRequireDefault(_grid2);
	
	var _overlay2 = __webpack_require__(356);
	
	var _overlay3 = _interopRequireDefault(_overlay2);
	
	var _viewport2 = __webpack_require__(377);
	
	var _viewport3 = _interopRequireDefault(_viewport2);
	
	var _oVideo = __webpack_require__(378);
	
	var _oVideo2 = _interopRequireDefault(_oVideo);
	
	var _nImage = __webpack_require__(366);
	
	var image = _interopRequireWildcard(_nImage);
	
	var _ftdomdelegate2 = __webpack_require__(141);
	
	var _ftdomdelegate3 = _interopRequireDefault(_ftdomdelegate2);
	
	var _superstore2 = __webpack_require__(215);
	
	var _superstore3 = _interopRequireDefault(_superstore2);
	
	var _superstoreSync2 = __webpack_require__(217);
	
	var _superstoreSync3 = _interopRequireDefault(_superstoreSync2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(421);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _ads = exports._ads = _ads3.default;
	
	// Expose entry points to shared bundle
	var _tracking = exports._tracking = _tracking3.default;
	var _date = exports._date = _date3.default;
	var _header = exports._header = _header3.default;
	var _promoMessages = exports._promoMessages = _promoMessages3.default;
	var _cookieMessage = exports._cookieMessage = _cookieMessage3.default;
	var _welcomeMessage = exports._welcomeMessage = _welcomeMessage3.default;
	var _messagePrompts = exports._messagePrompts = _messagePrompts3.default;
	var _footer = exports._footer = _footer3.default;
	var _myft = exports._myft = _myft3.default;
	var _myftDigestPromo = exports._myftDigestPromo = _myftDigestPromo3.default;
	var _utils = exports._utils = _utils3.default;
	var _notification = exports._notification = _notification3.default;
	var _expander = exports._expander = _expander3.default;
	var _grid = exports._grid = _grid3.default;
	var _overlay = exports._overlay = _overlay3.default;
	var _viewport = exports._viewport = _viewport3.default;
	var _video = exports._video = _oVideo2.default;
	var _image = exports._image = image;
	
	// Export some third party components we're unlikely to remove in a hurry
	var _ftdomdelegate = exports._ftdomdelegate = _ftdomdelegate3.default;
	var _superstore = exports._superstore = _superstore3.default;
	var _superstoreSync = exports._superstoreSync = _superstoreSync3.default;
	var _React = exports._React = _react2.default;
	var _ReactDom = exports._ReactDom = _reactDom2.default;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _componentInitializer = __webpack_require__(184);
	
	exports.default = new _componentInitializer.ComponentInitializer();
	module.exports = exports['default'];

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ComponentInitializer = exports.presets = undefined;
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _loader = __webpack_require__(201);
	
	var _loader2 = _interopRequireDefault(_loader);
	
	var _ads = __webpack_require__(213);
	
	var _ads2 = _interopRequireDefault(_ads);
	
	var _tracking = __webpack_require__(243);
	
	var _tracking2 = _interopRequireDefault(_tracking);
	
	var _date = __webpack_require__(280);
	
	var _date2 = _interopRequireDefault(_date);
	
	var _header = __webpack_require__(283);
	
	var _header2 = _interopRequireDefault(_header);
	
	var _optOut = __webpack_require__(315);
	
	var _optOut2 = _interopRequireDefault(_optOut);
	
	var _promoMessages = __webpack_require__(316);
	
	var _promoMessages2 = _interopRequireDefault(_promoMessages);
	
	var _cookieMessage = __webpack_require__(317);
	
	var _cookieMessage2 = _interopRequireDefault(_cookieMessage);
	
	var _welcomeMessage = __webpack_require__(318);
	
	var _welcomeMessage2 = _interopRequireDefault(_welcomeMessage);
	
	var _messagePrompts = __webpack_require__(319);
	
	var _messagePrompts2 = _interopRequireDefault(_messagePrompts);
	
	var _footer = __webpack_require__(320);
	
	var _footer2 = _interopRequireDefault(_footer);
	
	var _myft = __webpack_require__(325);
	
	var _myft2 = _interopRequireDefault(_myft);
	
	var _myftDigestPromo = __webpack_require__(361);
	
	var _myftDigestPromo2 = _interopRequireDefault(_myftDigestPromo);
	
	var _nImage = __webpack_require__(366);
	
	var _nServiceWorker = __webpack_require__(369);
	
	var serviceWorker = _interopRequireWildcard(_nServiceWorker);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var presets = exports.presets = {
		discrete: {
			header: true,
			footer: true,
			date: true,
			welcomeMessage: true
		},
		complete: {
			header: true,
			footer: true,
			date: true,
			cookieMessage: true,
			welcomeMessage: true,
			myft: true,
			messagePrompts: false,
			promoMessages: false,
			ads: true
		}
	};
	
	var ComponentInitializer = exports.ComponentInitializer = function () {
		function ComponentInitializer() {
			(0, _classCallCheck3.default)(this, ComponentInitializer);
	
			this.initializedFeatures = {};
			this.configuration = {};
			this.loader = new _loader2.default();
			this.configure = this.configure.bind(this);
			this.bootstrap = this.bootstrap.bind(this);
		}
	
		ComponentInitializer.prototype.isInitialized = function isInitialized(feature) {
			return !!this.initializedFeatures[feature];
		};
	
		ComponentInitializer.prototype.configure = function configure() {
			var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
			// NOTE: just store configuration for now, need to wait for polyfill to load before assigning
			// n-ui.configure is deprecated - pass in your config object as a first argument to bootstrap instead
			this.configuration = options;
		};
	
		ComponentInitializer.prototype.bootstrap = function bootstrap(config, cb) {
			var _this = this;
	
			// backwards compatible with previous signature of bootstrap(cb);
			if (!cb && typeof config === 'function') {
				cb = config;
				config = null;
			}
	
			cb = cb || function () {
				return null;
			};
			config = config || this.configuration || {};
	
			// belt and braces backwards compatibility for old api, which expected a flat config object
			if (!config.features) {
				config.features = (0, _assign2.default)({}, config);
			}
	
			config.features = (0, _assign2.default)({}, presets[config.preset], config.features);
	
			return this.loader.bootstrap(config, function (_ref) {
				var flags = _ref.flags;
				var mainCss = _ref.mainCss;
				var appInfo = _ref.appInfo;
				// eslint-disable-line
	
				if (!_this.initializedFeatures.tracking) {
					// FT and next tracking
					_tracking2.default.init(flags, appInfo);
					_this.initializedFeatures.tracking = true;
				}
	
				if (flags.get('serviceWorker')) {
					serviceWorker.register(flags).catch(function () {});
				} else {
					serviceWorker.unregister();
				}
	
				if (flags.get('optInOut')) {
					_optOut2.default.init();
				}
	
				if (config.features.myft && !_this.initializedFeatures.myftclient) {
					var clientOpts = [];
	
					if (flags.get('follow')) {
						clientOpts.push({ relationship: 'followed', type: 'concept' });
					}
	
					if (flags.get('saveForLater')) {
						clientOpts.push({ relationship: 'saved', type: 'content' });
					}
					_myft2.default.client.init(clientOpts);
	
					if (flags.get('myFtDigestPromo')) {
						_myftDigestPromo2.default.init();
					}
	
					_this.initializedFeatures.myftClient = true;
				}
	
				if (config.features.header && !_this.initializedFeatures.header) {
					_header2.default.init(flags);
					_this.initializedFeatures.header = true;
				}
	
				if (config.features.date && !_this.initializedFeatures.date) {
					_date2.default.init();
					_this.initializedFeatures.date = true;
				}
	
				if (config.features.lazyLoadImages && !_this.initializedFeatures.lazyLoadImages) {
					(0, _nImage.lazyLoad)();
					_this.initializedFeatures.lazyLoadImages = true;
				}
	
				mainCss.then(function () {
	
					if (config.features.footer && !_this.initializedFeatures.footer) {
						_footer2.default.init(flags);
						_this.initializedFeatures.footer = true;
					}
	
					if (config.features.cookieMessage && !_this.initializedFeatures.cookieMessage) {
						_cookieMessage2.default.init(flags);
						_this.initializedFeatures.cookieMessage = true;
					}
	
					if (config.features.welcomeMessage && !_this.initializedFeatures.welcomeMessage) {
						flags.get('welcomePanel') && _welcomeMessage2.default.init();
						_this.initializedFeatures.welcomeMessage = true;
					}
	
					if (config.features.messagePrompts && !_this.initializedFeatures.messagePrompts) {
						_messagePrompts2.default.init(flags);
						_this.initializedFeatures.messagePrompts = true;
					}
	
					if (config.features.myft && !_this.initializedFeatures.myftUi) {
						_myft2.default.ui.init({
							anonymous: !/FTSession=/.test(document.cookie),
							flags: flags
						});
						_myft2.default.uiInstant.init({
							anonymous: !/FTSession=/.test(document.cookie),
							flags: flags
						});
						_this.initializedFeatures.myftUi = true;
					}
	
					if (config.features.promoMessages && !_this.initializedFeatures.promoMessages) {
						_promoMessages2.default.init(flags);
						_this.initializedFeatures.promoMessages = true;
					}
				});
	
				return _promise2.default.resolve({ flags: flags, mainCss: mainCss, appInfo: appInfo }).then(cb).then(function () {
					// TODO - lazy load this
					if (!_this.initializedFeatures.ads) {
						_ads2.default.init(flags, appInfo);
						_this.initializedFeatures.ads = true;
					}
	
					if (!_this.initializedFeatures.lazyTracking) {
						_tracking2.default.lazyInit(flags);
						_this.initializedFeatures.lazyTracking = true;
					}
					return { flags: flags, mainCss: mainCss, appInfo: appInfo };
				});
			});
		};
	
		return ComponentInitializer;
	}();

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(186), __esModule: true };

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(74);
	__webpack_require__(12);
	__webpack_require__(56);
	__webpack_require__(187);
	module.exports = __webpack_require__(20).Promise;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(17)
	  , global             = __webpack_require__(19)
	  , ctx                = __webpack_require__(21)
	  , classof            = __webpack_require__(179)
	  , $export            = __webpack_require__(18)
	  , isObject           = __webpack_require__(26)
	  , aFunction          = __webpack_require__(22)
	  , anInstance         = __webpack_require__(188)
	  , forOf              = __webpack_require__(189)
	  , speciesConstructor = __webpack_require__(190)
	  , task               = __webpack_require__(191).set
	  , microtask          = __webpack_require__(193)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(53)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(194)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(52)($Promise, PROMISE);
	__webpack_require__(195)(PROMISE);
	Wrapper = __webpack_require__(20)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(180)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 188 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(21)
	  , call        = __webpack_require__(175)
	  , isArrayIter = __webpack_require__(176)
	  , anObject    = __webpack_require__(25)
	  , toLength    = __webpack_require__(45)
	  , getIterFn   = __webpack_require__(178)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(25)
	  , aFunction = __webpack_require__(22)
	  , SPECIES   = __webpack_require__(53)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(21)
	  , invoke             = __webpack_require__(192)
	  , html               = __webpack_require__(51)
	  , cel                = __webpack_require__(30)
	  , global             = __webpack_require__(19)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(43)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 192 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(19)
	  , macrotask = __webpack_require__(191).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(43)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(23);
	module.exports = function(target, src, safe){
	  for(var key in src){
	    if(safe && target[key])target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(19)
	  , core        = __webpack_require__(20)
	  , dP          = __webpack_require__(24)
	  , DESCRIPTORS = __webpack_require__(28)
	  , SPECIES     = __webpack_require__(53)('species');
	
	module.exports = function(KEY){
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(197), __esModule: true };

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(198);
	module.exports = __webpack_require__(20).Object.assign;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(18);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(199)});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(39)
	  , gOPS     = __webpack_require__(68)
	  , pIE      = __webpack_require__(69)
	  , toObject = __webpack_require__(55)
	  , IObject  = __webpack_require__(42)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(29)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 200 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _fontLoader = __webpack_require__(202);
	
	var _utils = __webpack_require__(203);
	
	var _instrumentFetch = __webpack_require__(206);
	
	var _instrumentFetch2 = _interopRequireDefault(_instrumentFetch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// for safety polyfill window.console
	if (!window.console) {
		window.console = {};
		var methods = ['info', 'log', 'warn', 'error'];
		for (var i = 0; i < methods.length; i++) {
			window.console[methods[i]] = function () {};
		}
	}
	
	var oErrors = __webpack_require__(207);
	
	// Dispatch a custom `ftNextLoaded` event after the app executes.
	function dispatchLoadedEvent() {
		var ftNextLoaded = false;
		var ftNextLoadedTrigger = function ftNextLoadedTrigger() {
			if (document.readyState === 'complete' && ftNextLoaded === false) {
				ftNextLoaded = true;
				window.dispatchEvent(new CustomEvent('ftNextLoaded'));
				return true;
			}
		};
		if (!ftNextLoadedTrigger()) {
			window.addEventListener('load', ftNextLoadedTrigger);
			document.onreadystatechange = ftNextLoadedTrigger;
		}
	}
	
	var JsSetup = function () {
		function JsSetup() {
			(0, _classCallCheck3.default)(this, JsSetup);
		}
	
		JsSetup.prototype.init = function init() {
	
			(0, _fontLoader.load)(document.documentElement);
	
			this.appInfo = {
				isProduction: document.documentElement.hasAttribute('data-next-is-production'),
				version: document.documentElement.getAttribute('data-next-version'),
				name: document.documentElement.getAttribute('data-next-app')
			};
	
			var flags = window.nextFeatureFlags.reduce(function (obj, flag) {
				obj[flag.name] = flag.state;
				return obj;
			}, {
				get: function get(name) {
					return this[name];
				},
				getAll: function getAll() {
					return this;
				}
			});
	
			oErrors.init({
				enabled: flags.get('clientErrorReporting') && this.appInfo.isProduction,
				sentryEndpoint: 'https://edb56e86be2446eda092e69732d8654b@app.getsentry.com/32594',
				siteVersion: this.appInfo.version,
				logLevel: flags.get('clientDetailedErrorReporting') ? 'contextonly' : 'off',
				tags: { appName: this.appInfo.name },
				errorBuffer: window.errorBuffer || []
			});
	
			(0, _instrumentFetch2.default)(flags, oErrors);
	
			if (flags.get('clientAjaxErrorReporting')) {
				(function () {
	
					var realFetch = window.fetch;
	
					window.fetch = function (url, opts) {
						return realFetch.call(this, url, opts).catch(function (err) {
							oErrors.log(url + (opts ? (0, _stringify2.default)(opts) : '') + err);
							throw err;
						});
					};
				})();
			}
	
			return _promise2.default.resolve({
				flags: flags,
				appInfo: this.appInfo,
				mainCss: new _promise2.default(function (res) {
					// if this element exists it means the page is setup to deliver critical/main css
					if (document.querySelector('style.n-layout-head-css')) {
						(0, _utils.waitForCondition)('MainCss', res);
					} else {
						res();
					}
				})
			});
		};
	
		JsSetup.prototype.bootstrap = function bootstrap(opts, callback) {
			var _this = this;
	
			opts = opts || {};
			(0, _utils.waitForCondition)('Polyfill', function () {
				_this.initResult = _this.initResult || _this.init();
	
				_this.bootstrapResult = _this.initResult.then(function (result) {
					var promise = callback(result);
					if (!(promise && typeof promise.then === 'function')) {
						promise = _promise2.default.resolve();
					}
					return promise.then(function () {
						if (opts.preload) {
							(0, _utils.perfMark)('nUiJsExecuted');
						} else {
							document.documentElement.classList.add('js-success');
							(0, _utils.perfMark)('appJsExecuted');
							dispatchLoadedEvent();
						}
					});
				}).catch(function (err) {
					if (!_this.appInfo.isProduction) {
						if ((typeof err === 'undefined' ? 'undefined' : (0, _typeof3.default)(err)) === 'object' && err.stack) {
							console.error(err.stack); //eslint-disable-line
						} else {
							console.error(err); //eslint-disable-line
						}
					}
					oErrors.error(err);
				});
			});
		};
	
		JsSetup.prototype.loadScript = function loadScript(src) {
			return (0, _utils.loadScript)(src);
		};
	
		return JsSetup;
	}();
	
	module.exports = JsSetup;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	exports.load = load;
	
	var _utils = __webpack_require__(203);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* globals FontFaceObserver */
	__webpack_require__(205);
	
	var fontLoadedPrefix = 'o-typography--loaded-';
	var fontLoadedCookieName = 'next-fonts-loaded';
	var fontConfigs = [{
		family: 'FinancierDisplayWeb',
		weight: 'normal',
		labels: ['serifDisplay']
	}, {
		family: 'MetricWeb',
		weight: 'normal',
		labels: ['sans', 'sansData']
	}, {
		family: 'MetricWeb',
		weight: 600,
		labels: ['sansBold', 'sansDataBold']
	}];
	
	function load(el) {
		if (new RegExp('(^|\\s)' + fontLoadedCookieName + '=1(;|$)').test(document.cookie)) {
			return _promise2.default.resolve();
		}
		var fontPromises = fontConfigs.map(function (fontConfig) {
			return new FontFaceObserver(fontConfig.family, { weight: fontConfig.weight }).load().then(function () {
				return el.className += fontConfig.labels.reduce(function (classes, label) {
					return classes += ' ' + fontLoadedPrefix + label;
				}, '');
			});
		});
	
		return _promise2.default.all(fontPromises).then(function () {
			// set cookie for subsequent visits
			document.cookie = fontLoadedCookieName + '=1;domain=.ft.com;path=/;max-age=' + 60 * 60 * 24 * 7;
			// create a performance mark
			(0, _utils.perfMark)('fontsLoaded');
		}).catch(function () {});
	};

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// tricky recursive function, but it works
	function uuid(a) {
		return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);
	}
	
	module.exports = {
		$: function $(sel, ctx) {
			return (ctx || document).querySelector(sel);
		},
		$$: function $$(sel, ctx) {
			return [].slice.call((ctx || document).querySelectorAll(sel));
		},
		debounce: function debounce(func, wait) {
			var timeout = void 0;
			return function () {
				var _this = this;
	
				var args = arguments;
				var later = function later() {
					timeout = null;
					func.apply(_this, args);
				};
				clearTimeout(timeout);
				timeout = setTimeout(later, wait);
			};
		},
	
		throttle: function throttle(func, wait) {
			var timeout = void 0;
			return function () {
				var _this2 = this;
	
				if (timeout) {
					return;
				}
				var args = arguments;
				var later = function later() {
					timeout = null;
					func.apply(_this2, args);
				};
	
				timeout = setTimeout(later, wait);
			};
		},
		uuid: uuid,
		ascii: __webpack_require__(204),
		loadScript: function loadScript(src) {
			return new _promise2.default(function (res, rej) {
				var script = window.ftNextLoadScript(src);
				script.addEventListener('load', res);
				script.addEventListener('error', rej);
			});
		},
		waitForCondition: function waitForCondition(conditionName, action) {
			return window['ftNext' + conditionName + 'Loaded'] ? action() : document.addEventListener('ftNext' + conditionName + 'Loaded', action);
		},
		broadcast: function broadcast(name, data) {
			var bubbles = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];
	
			var rootEl = document.body;
			var event = function () {
				try {
					return new CustomEvent(name, { bubbles: bubbles, cancelable: true, detail: data });
				} catch (e) {
					return CustomEvent.initCustomEvent(name, true, true, data);
				}
			}();
	
			rootEl.dispatchEvent(event);
		},
		perfMark: function perfMark(name) {
			var performance = window.LUX || window.performance || window.msPerformance || window.webkitPerformance || window.mozPerformance;
			if (performance && performance.mark) {
				performance.mark(name);
			}
		},
		getCookieValue: function getCookieValue(key) {
			var regex = new RegExp(key + '=([^;]+)', 'i');
			var a = regex.exec(document.cookie);
			return a ? a[1] : undefined;
		}
	
	};

/***/ },
/* 204 */
/***/ function(module, exports) {

	'use strict';
	
	var mapASCII = {
		'à': 'a',
		'á': 'a',
		'â': 'a',
		'ä': 'a',
		'ã': 'a',
		'å': 'a',
		'ā': 'a',
		'æ': 'ae',
		'ç': 'c',
		'č': 'c',
		'è': 'e',
		'é': 'e',
		'ê': 'e',
		'ë': 'e',
		'ē': 'e',
		'ğ': 'g',
		'î': 'i',
		'ï': 'i',
		'í': 'i',
		'ì': 'i',
		'ī': 'i',
		'ł': 'l',
		'ñ': 'n',
		'ń': 'n',
		'ô': 'o',
		'ö': 'o',
		'ò': 'o',
		'ó': 'o',
		'ø': 'o',
		'õ': 'o',
		'ō': 'o',
		'œ': 'oe',
		'ş': 's',
		'ș': 's',
		'š': 's',
		'ß': 'ss',
		'û': 'u',
		'ü': 'u',
		'ù': 'u',
		'ú': 'u',
		'ū': 'u',
		'ž': 'z'
	};
	
	var nonASCII = /[^\x00-\x7F]+/;
	
	function toASCII(string) {
		if (nonASCII.test(string) === false) {
			return string;
		}
	
		var i = string.length;
	
		while (i > -1) {
			var ascii = mapASCII[string[i]];
	
			if (ascii) {
				string = string.substr(0, i) + ascii + string.substr(i + 1);
			}
	
			i--;
		}
	
		return string;
	}
	
	module.exports = toASCII;

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	(function () {
	  function l(a, b) {
	    document.addEventListener ? a.addEventListener("scroll", b, !1) : a.attachEvent("scroll", b);
	  }function m(a) {
	    document.body ? a() : document.addEventListener ? document.addEventListener("DOMContentLoaded", function c() {
	      document.removeEventListener("DOMContentLoaded", c);a();
	    }) : document.attachEvent("onreadystatechange", function k() {
	      if ("interactive" == document.readyState || "complete" == document.readyState) document.detachEvent("onreadystatechange", k), a();
	    });
	  };function v(a) {
	    this.a = document.createElement("div");this.a.setAttribute("aria-hidden", "true");this.a.appendChild(document.createTextNode(a));this.b = document.createElement("span");this.c = document.createElement("span");this.h = document.createElement("span");this.f = document.createElement("span");this.g = -1;this.b.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.c.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
	    this.f.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.h.style.cssText = "display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c);
	  }
	  function w(a, b) {
	    a.a.style.cssText = "max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font:" + b + ";";
	  }function y(a) {
	    var b = a.a.offsetWidth,
	        c = b + 100;a.f.style.width = c + "px";a.c.scrollLeft = c;a.b.scrollLeft = a.b.scrollWidth + 100;return a.g !== b ? (a.g = b, !0) : !1;
	  }function z(a, b) {
	    function c() {
	      var a = k;y(a) && null !== a.a.parentNode && b(a.g);
	    }var k = a;l(a.b, c);l(a.c, c);y(a);
	  };function A(a, b) {
	    var c = b || {};this.family = a;this.style = c.style || "normal";this.weight = c.weight || "normal";this.stretch = c.stretch || "normal";
	  }var B = null,
	      C = null,
	      G = !!window.FontFace;function H() {
	    if (null === C) {
	      var a = document.createElement("div");try {
	        a.style.font = "condensed 100px sans-serif";
	      } catch (b) {}C = "" !== a.style.font;
	    }return C;
	  }function I(a, b) {
	    return [a.style, a.weight, H() ? a.stretch : "", "100px", b].join(" ");
	  }
	  A.prototype.load = function (a, b) {
	    var c = this,
	        k = a || "BESbswy",
	        x = b || 3E3,
	        D = new Date().getTime();return new _promise2.default(function (a, b) {
	      if (G) {
	        var J = new _promise2.default(function (a, b) {
	          function e() {
	            new Date().getTime() - D >= x ? b() : document.fonts.load(I(c, c.family), k).then(function (c) {
	              1 <= c.length ? a() : setTimeout(e, 25);
	            }, function () {
	              b();
	            });
	          }e();
	        }),
	            K = new _promise2.default(function (a, c) {
	          setTimeout(c, x);
	        });_promise2.default.race([K, J]).then(function () {
	          a(c);
	        }, function () {
	          b(c);
	        });
	      } else m(function () {
	        function q() {
	          var b;if (b = -1 != f && -1 != g || -1 != f && -1 != h || -1 != g && -1 != h) (b = f != g && f != h && g != h) || (null === B && (b = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), B = !!b && (536 > parseInt(b[1], 10) || 536 === parseInt(b[1], 10) && 11 >= parseInt(b[2], 10))), b = B && (f == r && g == r && h == r || f == t && g == t && h == t || f == u && g == u && h == u)), b = !b;b && (null !== d.parentNode && d.parentNode.removeChild(d), clearTimeout(F), a(c));
	        }function E() {
	          if (new Date().getTime() - D >= x) null !== d.parentNode && d.parentNode.removeChild(d), b(c);else {
	            var a = document.hidden;if (!0 === a || void 0 === a) f = e.a.offsetWidth, g = n.a.offsetWidth, h = p.a.offsetWidth, q();F = setTimeout(E, 50);
	          }
	        }var e = new v(k),
	            n = new v(k),
	            p = new v(k),
	            f = -1,
	            g = -1,
	            h = -1,
	            r = -1,
	            t = -1,
	            u = -1,
	            d = document.createElement("div"),
	            F = 0;d.dir = "ltr";w(e, I(c, "sans-serif"));w(n, I(c, "serif"));w(p, I(c, "monospace"));d.appendChild(e.a);d.appendChild(n.a);d.appendChild(p.a);document.body.appendChild(d);r = e.a.offsetWidth;t = n.a.offsetWidth;u = p.a.offsetWidth;E();z(e, function (a) {
	          f = a;q();
	        });w(e, I(c, '"' + c.family + '",sans-serif'));z(n, function (a) {
	          g = a;q();
	        });w(n, I(c, '"' + c.family + '",serif'));z(p, function (a) {
	          h = a;q();
	        });w(p, I(c, '"' + c.family + '",monospace'));
	      });
	    });
	  };window.FontFaceObserver = A;window.FontFaceObserver.prototype.check = window.FontFaceObserver.prototype.load = A.prototype.load;"undefined" !== typeof module && (module.exports = window.FontFaceObserver);
	})();

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.default = function (flags, oErrors) {
		theFetch = theFetch || window.fetch;
		// allow use of our proxy for apis when cors not available
		if (!('withCredentials' in new XMLHttpRequest())) {
			(function () {
				var realFetch = window.fetch;
	
				window.fetch = function (url, opts) {
					if (opts.useCorsProxy) {
						var urlObj = new URL(url);
						opts.headers = opts.headers || {};
						opts.headers['api-host'] = urlObj.origin;
						url = url.replace(urlObj.origin, '/__api-proxy');
					}
					return realFetch.call(this, url, opts);
				};
			})();
		}
	
		// turn on more detailed error reporting of ajax calls
		if (flags.get('clientAjaxErrorReporting')) {
			(function () {
				var realFetch = window.fetch;
				window.fetch = function (url, opts) {
					return realFetch.call(this, url, opts).catch(function (err) {
						oErrors.log(url + (opts ? (0, _stringify2.default)(opts) : '') + err);
						throw err;
					});
				};
			})();
		}
	};
	
	exports.restore = restore;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var theFetch = void 0;
	function restore() {
		if (theFetch) {
			window.fetch = theFetch;
		}
	}

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(208);

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * The oErrors error tracking and reporting module.
	 *
	 * @module oErrors
	 * @see Errors
	 */
	var Errors = __webpack_require__(209);
	var errors = new Errors();
	
	function initialise() {
	  errors.init();
	  document.removeEventListener('o.DOMContentLoaded', initialise);
	}
	
	// Try and initialise on o.DOMContentLoaded. If it fails, defer to the
	// consumer of the library.
	document.addEventListener('o.DOMContentLoaded', initialise);
	
	/**
	 * A constructed object, this module is a Singleton due to the architecture of
	 * Raven JS. See {@link Errors} for the publicly available interface.
	 *
	 * @type {Errors}
	 */
	module.exports = errors;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Logger = __webpack_require__(210);
	
	function isFunction(fn) {
		return typeof fn === 'function';
	}
	
	function throwLater(error) {
		// Throw the error on the main event loop rather than in this
		// context so that the error can be surfaced to the developer
		// without halting the current context.
		setTimeout(function oErrorsError() {
			throw error;
		}, 0);
	}
	
	/**
	 * @class Errors
	 */
	function Errors() {
		// Initialises raven client with noops for consoleonly logging level
		this.ravenClient = null;
	
		/**
	  * The initialised state of the object.
	  * @type {bool}
	  */
		this.initialised = false;
	
		this.logger = null;
		this._logEventHandler = this.handleLogEvent.bind(this);
	
		// While not initialised, any caught errors are buffered.
		this._errorBuffer = [];
	
		// Cache the declarative config String to avoid reading the DOM more than
		// once, once initialised, the reference to the string is released for GC.
		this._declarativeConfigString = false;
	
		// noop operations
		this._filterError = function () {
			return true;
		};
		this._transformError = function (data) {
			return data;
		};
	}
	
	/**
	 * Initialises the Error object with a Raven dependency.
	 *
	 * All options are optional, if a configuration option is missing, the module
	 * will try to initialise using any configuration found in the DOM using the
	 * script config tag.
	 *
	 * @example
	 * <!-- DOM configuration settings -->
	 * <script type="application/json" data-o-errors-config>
	 * {
	 *   "sentryEndpoint": "https://dsn@app.getsentry.com/123"
	 * }
	 * </script>
	 *
	 * @param {Object} options                 - Optional, configuration options object
	 * @param {string} options.sentryEndpoint  - Optional if configued via the DOM, Required if not, must be a valid {@link https://app.getsentry.com/docs/platforms/|Sentry DSN}.
	 * @param {string} options.siteVersion     - Optional, optionally the version of the code the page is running. This tags each error with the code version
	 * @param {string} options.logLevel        - Optional, see {@link Logger.level} for valid names
	 * @param {boolean} options.disabled       - Optional, If `true`, disable o-errors reporting.
	 * @param {Array} options.buffer           - Optional, pre-existing buffer of error events to flush.
	 * @param {Object} raven                   - The Raven JS client object.
	 * @returns {Errors}  - The Errors instance
	 */
	Errors.prototype.init = function (options, raven) {
		if (this.initialised) {
			return this;
		}
	
		var hasDeclarativeConfig = this._hasDeclarativeConfig();
		var configMissing = !(hasDeclarativeConfig || options);
	
		// In main.js an event listener is bound to 'o.DOMContentLoaded', this
		// calls 'init' without arguments with the intention of configuring from
		// the declarative config if it exists.  If the declarative markup doesn't
		// exist, we do nothing so that the consumer has the option of
		// configuring imperatively by calling `init` with options themselves.
		if (configMissing) {
			return this;
		}
	
		options = options || {};
	
		if (hasDeclarativeConfig) {
			options = this._initialiseDeclaratively(options);
	
			if (options.filterError) {
				options.filterError = undefined;
				throwLater(new Error("Can not configure 'oErrors' with `filterError` using declarative markup - error filtering will not be enabled"));
			}
	
			if (options.transformError) {
				options.transformError = undefined;
				throwLater(new Error("Can not configure 'oErrors' with `transformError` using declarative markup - error transforming will not be enabled"));
			}
	
			if (options.transportFunction) {
				options.transportFunction = undefined;
				throwLater(new Error("Can not configure 'oErrors' with `transportFunction` using declarative markup - overriding Sentry's transport function will not be enabled"));
			}
		}
	
		if (isFunction(options.transformError)) {
			this._transformError = options.transformError;
		}
	
		if (isFunction(options.filterError)) {
			this._filterError = options.filterError;
		}
	
		if (Array.isArray(options.errorBuffer) && options.errorBuffer.length > 0) {
			this._errorBuffer = this._errorBuffer.concat(options.errorBuffer);
		}
	
		// If errors is configured to be disabled, (options.disabled = true),
		// then stub this.report, turn off logging (which turns them into noops),
		// and return 'initialised' before installing raven.
		var isErrorsDisabled = options.enabled === undefined ? false : options.enabled === false;
	
		var logLevel = isErrorsDisabled ? Logger.off : options.logLevel;
		var defaultLogLength = 10;
		this.logger = new Logger(defaultLogLength, logLevel);
	
		if (isErrorsDisabled) {
			this.report = function (error) {
				return error;
			};
			this.wrapWithContext = function (fn) {
				return fn;
			};
			this.initialised = true;
			return this;
		}
	
		if (!options.sentryEndpoint) {
			throw new Error('Could not initialise o-errors: Sentry endpoint and auth configuration missing.');
		}
	
		// Only install Raven if not using console only logging level
		if (Logger.level[logLevel] !== Logger.level.consoleonly) {
			this._configureAndInstallRaven(options, raven);
		} else {
			this.ravenClient = {
				captureException: function captureException() {},
				uninstall: function uninstall() {}
			};
		}
	
		document.addEventListener('oErrors.log', this._logEventHandler);
	
		this.initialised = true;
	
		this._flushBufferedErrors();
		return this;
	};
	
	Errors.prototype._configureAndInstallRaven = function (options, raven) {
	
		// To control the initialisation of the third party code (Raven)
		// we include it only at init time see "http://origami.ft.com/docs/syntax/js/#initialisation"
		//
		// It is optional so that it can be mocked in tests
		if (!(raven || this.ravenClient)) {
			raven = __webpack_require__(211);
		}
	
		this.ravenClient = raven;
	
		var sentryEndpoint = options.sentryEndpoint;
		var updatePayloadBeforeSend = this._updatePayloadBeforeSend.bind(this);
	
		var ravenOptions = {
			dataCallback: updatePayloadBeforeSend
		};
	
		if (options.siteVersion) {
			ravenOptions.release = options.siteVersion;
		}
	
		if (options.tags) {
			ravenOptions.tags = options.tags;
		}
	
		if (isFunction(options.transportFunction)) {
			ravenOptions.transport = options.transportFunction;
		}
	
		this.ravenClient.config(sentryEndpoint, ravenOptions);
		this.ravenClient.install();
	};
	
	/**
	 * Flush any errors that are buffered in `this._errorBuffer`.
	 * @private
	 *
	 * @returns {undefined} - undefined
	 */
	Errors.prototype._flushBufferedErrors = function () {
		if (!this.initialised) {
			return;
		}
	
		var errors = this;
		this._errorBuffer.forEach(function (bufferedError) {
			errors.report(bufferedError.error, bufferedError.context);
		});
	
		// Clear the buffer, deleting references we hold to any buffered errors
		this._errorBuffer = [];
	};
	
	/**
	 * Report an Error object to the error aggregator.
	
	 * @example
	 * // Reports a caught Error generated by the Promise
	 * fetch('example.com').then(doSomething).catch(oErrors.report);
	 *
	 * @example
	 * // Reports and re-throws the caught error
	 * try {
	 *   doSomething();
	 * } catch(e) {
	 *   throw oErrors.report(e);
	 * }
	 *
	 * @param {Error}  error    - The error object to report.
	 * @param {Object} context  - Optional context to attach to the Error in the
	 *                            aggregator
	 * @return {Error} - The passed in error
	 */
	Errors.prototype.report = function (error, context) {
		var _context = context || {};
		var reportObject = {
			error: error,
			context: {
				// The extra key tells Sentry to put this information
				// in the Additional Data section, otherwise, it doesn't
				// understand the context and ignores it
				extra: _context
			}
		};
	
		if (!this.initialised) {
			this._errorBuffer.push(reportObject);
			return error;
		}
	
		var transformedError = this._transformError(reportObject);
	
		// The _transformError may return a bad value, in order to protect against
		// this mistake and still report a valid object we test the return value
		// before continuing to use it
		if (transformedError && transformedError.error) {
			reportObject = transformedError;
		}
	
		if (!reportObject.context) {
			reportObject.context = {};
		}
	
		if (!this._filterError(reportObject)) {
			return error;
		}
	
		// Raven, for some reason completely ignores the contents of
		// error.message... to get around this, we attach the error message to the
		// context object.
		if (reportObject.error.message) {
			reportObject.context.errormessage = reportObject.error.message;
		}
	
		this.ravenClient.captureException(reportObject.error, reportObject.context);
		return error;
	};
	
	/**
	 * Log an 'ERROR' level log. Intended to have the same semantics as
	 * console.error.
	 *
	 * This.stores the log in memory and will attach the last `n` log lines to the
	 * context of any reported errors.  See {@link Errors#log} to log a log
	 * message.
	 *
	 *
	 * @param {String}  message - The message to log
	 * @returns {undefined} - undefined
	 */
	Errors.prototype.error = function () {
		this.logger.error.apply(this.logger, arguments);
	};
	
	/**
	 * Log a 'WARN' level log.  Intended to have the same semantics as
	 * console.warn.
	 * This stores the log in memory and will attach the last `n` log lines to the
	 * context of the error. See {@link Errors#log} to log a log message.
	 *
	 * @param {String} warnMessage  - The message to log.
	 * @returns {undefined} - undefined
	 */
	Errors.prototype.warn = function () {
		this.logger.warn.apply(this.logger, arguments);
	};
	
	/**
	 * Log a 'LOG' level log.  Intended to have the same semantics as console.log.
	 * This stores the log in memory and will attach the last `n` log lines to the
	 * context of the error.  See {@link Errors#warn} to log a warn message.
	 *
	 * @param {String} logMessage - The message to log.
	 * @returns {undefined} - undefined
	 */
	Errors.prototype.log = function () {
		this.logger.log.apply(this.logger, arguments);
	};
	
	/**
	 * Wrap a function so that any uncaught errors are caught and reported to the
	 * error aggregator.
	 *
	 * @example
	 * // Wraps function, any errors occurring within the function are caught, logged, and rethrown.
	 * let wrappedFunction = oErrors.wrap(function() {
	 *   throw new Error("My Error");
	 * });
	 *
	 * If you want to attach additional contextual information to the error, see
	 * {@link Errors#wrapWithContext}.
	 -
	 * @param {Function} fn     - The function to wrap.
	 * @return {Function} - Wrapped function
	 */
	Errors.prototype.wrap = function (fn) {
		return this.wrapWithContext({}, fn);
	};
	
	/**
	 * Wrap a function so that any uncaught errors are caught and reported to the error
	 * aggregator.
	 * This method allows additional context to be attached to the error if it
	 * occurs.
	 *
	 * @example
	 * // Wrap a function with some additional context to be reported in the event
	 * // `doSomethingCallback` throws an error.
	 * setTimeout(oErrors.wrapWithContext({ "context:url": "example.com" }, doSomethingCallback), 1000);
	 *
	 * @param {Object}   context     - Additional context to report along with the error
	 *                                 if the function `fn` throws an Error.
	 * @param {Function} fn          - The function to wrap
	 * @return {Function} - Wrapped function with context
	 */
	Errors.prototype.wrapWithContext = function (context, fn) {
		var errors = this;
		return function () {
			try {
				return fn.apply(undefined, arguments);
			} catch (e) {
				errors.report(e, context);
				throw e;
			}
		};
	};
	
	/**
	 * Remove the `oErrors.log` event listener and clean up as much of the Raven
	 * client as possible.
	 *
	 * Errors is unusable after a call to destroy and calling `init` subsequently
	 * will fail.
	 *
	 * @returns {undefined} - undefined
	 */
	Errors.prototype.destroy = function () {
		if (!this.initialised) {
			return;
		}
		document.removeEventListener('oErrors.log', this._logEventHandler);
		this.ravenClient.uninstall();
	};
	
	Errors.prototype.handleLogEvent = function (ev) {
		// If no event is passed here, return early
		if (!ev) {
			return;
		}
	
		// Tag the context with additional information about the DOM.
		var context = {
			info: ev.detail.info || {},
			extra: {
				"context:dom": this._getEventPath(ev).reduceRight(function (builder, el) {
					var classList = Array.prototype.slice.call(el.classList || []);
	
					if (!el.nodeName) {
						return builder + " - " + el.constructor.name + "\n";
					}
	
					var nodeName = el.nodeName.toLowerCase();
	
					if (nodeName.indexOf('#') === 0) {
						return builder + "<" + nodeName + ">\n";
					}
	
					return builder + "<" + el.nodeName.toLowerCase() + " class='" + classList.join(' ') + "' id='" + (el.id || '') + "'>\n";
				}, "")
			}
		};
		this.report(ev.detail.error, context);
	};
	
	/**
	 * Given a DOM event, return an ordered array of Elements that the event will propagate
	 * through.
	 *
	 * @private
	 * @param {Event} event - The event to get the path for.
	 * @returns {Array} - An array of Elements.
	 */
	Errors.prototype._getEventPath = function (event) {
		var path = [];
	
		// IE backwards compatibility (get the actual target). If IE, uses
		// `window.event.srcElement`
		var element = event.target || window.event.srcElement;
	
		while (element) {
			path.push(element);
			element = element.parentElement;
		}
	
		return path;
	};
	
	/**
	 * A hook to add additional data to the payload before sending.
	 *
	 * @private
	 * @param {Object} data - The data object from Raven
	 * @returns {Object} - Updated data
	 */
	Errors.prototype._updatePayloadBeforeSend = function (data) {
		if (this.logger.enabled) {
			data.extra["context:log"] = this.logger.logLines();
		}
		return data;
	};
	
	/**
	 * Get whether declarative configuration exists in the DOM.
	 *
	 * @private
	 * @returns {boolean} - Boolean value indicating if there's declarative config
	 */
	Errors.prototype._hasDeclarativeConfig = function () {
		return !!this._getDeclarativeConfig();
	};
	
	/**
	 * Get the configuration as a String.
	 *
	 * @private
	 * @returns {string} - Stringified configuration
	 */
	Errors.prototype._getDeclarativeConfig = function () {
		if (!this._declarativeConfigString) {
			var config = document.querySelector('script[data-o-errors-config]');
			if (config) {
				this._declarativeConfigString = config.textContent || config.innerText || config.innerHTML;
			} else {
				return false;
			}
		}
	
		return this._declarativeConfigString;
	};
	
	/**
	 * Initialises additional data using the <script type="application/json" data-o-errors-config> element in the DOM.
	 *
	 * @private
	 * @param {Object} options - A partially, or fully filled options object.  If
	 *                           an option is missing, this method will attempt to
	 *                           initialise it from the DOM.
	 * @returns {Object} - The options modified to include the options gathered
	 *                     from the DOM
	 */
	Errors.prototype._initialiseDeclaratively = function (options) {
	
		if (!this._hasDeclarativeConfig()) {
			return false;
		}
	
		var declarativeOptions = void 0;
	
		try {
			declarativeOptions = JSON.parse(this._getDeclarativeConfig());
		} catch (e) {
			throw new Error("Invalid JSON configuration syntax, check validity for o-errors configuration: '" + e.message + "'");
		}
	
		for (var property in declarativeOptions) {
			if (declarativeOptions.hasOwnProperty(property)) {
				options[property] = options[property] || declarativeOptions[property];
			}
		}
	
		// Release the reference to the config string
		this._declarativeConfigString = false;
		return options;
	};
	
	module.exports = Errors;

/***/ },
/* 210 */
/***/ function(module, exports) {

	"use strict";
	
	/* global console */
	
	/**
	 * Create a new Logger class. Used internally by {@link Errors}.
	 *
	 * @param {Number} logSize - The default, fixed size of the log buffer.
	 * @param {String} logLevel - The default log level, see the enumeration {@link Logger.level} for valid values, expects a String corresponding to a log level name.
	 * @class Logger
	 */
	function Logger(logSize, logLevel) {
		this._logBuffer = new Array(logSize);
		this._nextLogIndex = 0;
	
		// const
		this._logLevel = Logger.level[logLevel];
	
		this.enabled = this._logLevel !== Logger.level.off;
		if (!this.enabled) {
			this._consoleLog = noop;
		}
	
		var out = 'undefined' !== typeof console ? console : { log: noop, warn: noop, error: noop };
		this.out = out;
	}
	
	Logger.prototype.error = function () {
		this._consoleLog("ERROR", this.out.error, arguments);
	};
	
	Logger.prototype.log = function () {
		this._consoleLog("LOG", this.out.log, arguments);
	};
	
	Logger.prototype.warn = function () {
		this._consoleLog("WARN", this.out.warn, arguments);
	};
	
	Logger.prototype._consoleLog = function (name, consoleMethod, args) {
		var debug = this._logLevel === Logger.level.debug || this._logLevel === Logger.level.consoleonly;
	
		// Because 'arguments' is not a true array we call out to argsAsLogString
		// to efficiently concatenate the arguments as string types to create the
		// message.
		var message = argsAsLogString(name, args);
		this.append(message);
	
		if (debug && consoleMethod) {
			consoleMethod.apply(this.out, args);
		}
	};
	
	function argsAsLogString(logName, args) {
		var string = logName + ":";
	
		// TODO: Improve the logging of objects.  We could 'require('util')' and
		// use util.format (provided by browserify), but it adds 8K to the
		// minified output, it doesn't seem worth it. Kornel suggests
		// git.svc.ft.com/projects/LOG/repos/js-abbreviate/browse
		for (var index = 0; index < args.length; index++) {
			string += " " + args[index];
		}
	
		return string;
	}
	
	Logger.prototype.append = function (logLine) {
		this._logBuffer[this._nextLogIndex] = logLine;
	
		// Really simple Ring buffer implementation (keep track of next insertion
		// location)
		this._nextLogIndex++;
		if (this._nextLogIndex === this._logBuffer.length) {
			this._nextLogIndex = 0;
		}
	};
	
	/**
	 * Roll the log buffer into a new line delimited string starting.
	 * It, creates a chronological log based on the contents of the current
	 * buffer. Any log entries that are undefined are dropped.
	 *
	 * @private
	 * @returns {String} - Rolled up string
	 */
	Logger.prototype.logLines = function () {
		var index = this._nextLogIndex;
		var nextLogIndex = this._nextLogIndex;
		var rolledUpLogs = [];
	
		do {
			var logEntry = this._logBuffer[index];
	
			if (logEntry !== undefined) {
				rolledUpLogs.push(this._logBuffer[index]);
			}
	
			index++;
	
			if (index >= this._logBuffer.length) {
				index = 0;
			}
		} while (index !== nextLogIndex);
	
		return rolledUpLogs.join("\n");
	};
	
	/**
	 * Describes the logging levels available
	 * @enum {Number}
	 * @public
	 */
	Logger.level = {
		/**
	  * No logging at all occurs, each call to errors.log or errors.log are no-ops
	  */
		off: 0,
	
		/**
	  * Logs are stored in a buffer, by default the last 10 lines.  When an
	  *  error occurs, these log lines are attached to the error object.
	  */
		contextonly: 1,
	
		/**
	  * Logs are stored in the buffer as with `contextonly` however, they are
	  * also passed through to the relevant `console.*` API.
	  */
		debug: 2, // contextonly & debug
	
		/**
	  * Logging only occurs in the console. Raven client is not initialised.
	  */
		consoleonly: 3
	};
	
	function noop() {}
	
	module.exports = Logger;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(212);

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*! Raven.js 1.3.0 (768fdca) | github.com/getsentry/raven-js */
	
	/*
	 * Includes TraceKit
	 * https://github.com/getsentry/TraceKit
	 *
	 * Copyright 2015 Matt Robenolt and other contributors
	 * Released under the BSD license
	 * https://github.com/getsentry/raven-js/blob/master/LICENSE
	 *
	 */
	;(function (window, undefined) {
	    'use strict';
	
	    /*
	     TraceKit - Cross brower stack traces - github.com/occ/TraceKit
	     MIT license
	    */
	
	    var TraceKit = {
	        remoteFetching: false,
	        collectWindowErrors: true,
	        // 3 lines before, the offending line, 3 lines after
	        linesOfContext: 7,
	        debug: false
	    };
	
	    // global reference to slice
	    var _slice = [].slice;
	    var UNKNOWN_FUNCTION = '?';
	
	    function getLocationHref() {
	        if (typeof document === 'undefined') return '';
	
	        return document.location.href;
	    };
	
	    /**
	     * TraceKit.report: cross-browser processing of unhandled exceptions
	     *
	     * Syntax:
	     *   TraceKit.report.subscribe(function(stackInfo) { ... })
	     *   TraceKit.report.unsubscribe(function(stackInfo) { ... })
	     *   TraceKit.report(exception)
	     *   try { ...code... } catch(ex) { TraceKit.report(ex); }
	     *
	     * Supports:
	     *   - Firefox: full stack trace with line numbers, plus column number
	     *              on top frame; column number is not guaranteed
	     *   - Opera:   full stack trace with line and column numbers
	     *   - Chrome:  full stack trace with line and column numbers
	     *   - Safari:  line and column number for the top frame only; some frames
	     *              may be missing, and column number is not guaranteed
	     *   - IE:      line and column number for the top frame only; some frames
	     *              may be missing, and column number is not guaranteed
	     *
	     * In theory, TraceKit should work on all of the following versions:
	     *   - IE5.5+ (only 8.0 tested)
	     *   - Firefox 0.9+ (only 3.5+ tested)
	     *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require
	     *     Exceptions Have Stacktrace to be enabled in opera:config)
	     *   - Safari 3+ (only 4+ tested)
	     *   - Chrome 1+ (only 5+ tested)
	     *   - Konqueror 3.5+ (untested)
	     *
	     * Requires TraceKit.computeStackTrace.
	     *
	     * Tries to catch all unhandled exceptions and report them to the
	     * subscribed handlers. Please note that TraceKit.report will rethrow the
	     * exception. This is REQUIRED in order to get a useful stack trace in IE.
	     * If the exception does not reach the top of the browser, you will only
	     * get a stack trace from the point where TraceKit.report was called.
	     *
	     * Handlers receive a stackInfo object as described in the
	     * TraceKit.computeStackTrace docs.
	     */
	    TraceKit.report = function reportModuleWrapper() {
	        var handlers = [],
	            lastArgs = null,
	            lastException = null,
	            lastExceptionStack = null;
	
	        /**
	         * Add a crash handler.
	         * @param {Function} handler
	         */
	        function subscribe(handler) {
	            installGlobalHandler();
	            handlers.push(handler);
	        }
	
	        /**
	         * Remove a crash handler.
	         * @param {Function} handler
	         */
	        function unsubscribe(handler) {
	            for (var i = handlers.length - 1; i >= 0; --i) {
	                if (handlers[i] === handler) {
	                    handlers.splice(i, 1);
	                }
	            }
	        }
	
	        /**
	         * Remove all crash handlers.
	         */
	        function unsubscribeAll() {
	            uninstallGlobalHandler();
	            handlers = [];
	        }
	
	        /**
	         * Dispatch stack information to all handlers.
	         * @param {Object.<string, *>} stack
	         */
	        function notifyHandlers(stack, isWindowError) {
	            var exception = null;
	            if (isWindowError && !TraceKit.collectWindowErrors) {
	                return;
	            }
	            for (var i in handlers) {
	                if (hasKey(handlers, i)) {
	                    try {
	                        handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));
	                    } catch (inner) {
	                        exception = inner;
	                    }
	                }
	            }
	
	            if (exception) {
	                throw exception;
	            }
	        }
	
	        var _oldOnerrorHandler, _onErrorHandlerInstalled;
	
	        /**
	         * Ensures all global unhandled exceptions are recorded.
	         * Supported by Gecko and IE.
	         * @param {string} message Error message.
	         * @param {string} url URL of script that generated the exception.
	         * @param {(number|string)} lineNo The line number at which the error
	         * occurred.
	         * @param {?(number|string)} colNo The column number at which the error
	         * occurred.
	         * @param {?Error} ex The actual Error object.
	         */
	        function traceKitWindowOnError(message, url, lineNo, colNo, ex) {
	            var stack = null;
	
	            if (lastExceptionStack) {
	                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);
	                processLastException();
	            } else if (ex) {
	                // New chrome and blink send along a real error object
	                // Let's just report that like a normal error.
	                // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror
	                stack = TraceKit.computeStackTrace(ex);
	                notifyHandlers(stack, true);
	            } else {
	                var location = {
	                    'url': url,
	                    'line': lineNo,
	                    'column': colNo
	                };
	                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);
	                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);
	                stack = {
	                    'message': message,
	                    'url': getLocationHref(),
	                    'stack': [location]
	                };
	                notifyHandlers(stack, true);
	            }
	
	            if (_oldOnerrorHandler) {
	                return _oldOnerrorHandler.apply(this, arguments);
	            }
	
	            return false;
	        }
	
	        function installGlobalHandler() {
	            if (_onErrorHandlerInstalled) {
	                return;
	            }
	            _oldOnerrorHandler = window.onerror;
	            window.onerror = traceKitWindowOnError;
	            _onErrorHandlerInstalled = true;
	        }
	
	        function uninstallGlobalHandler() {
	            if (!_onErrorHandlerInstalled) {
	                return;
	            }
	            window.onerror = _oldOnerrorHandler;
	            _onErrorHandlerInstalled = false;
	            _oldOnerrorHandler = undefined;
	        }
	
	        function processLastException() {
	            var _lastExceptionStack = lastExceptionStack,
	                _lastArgs = lastArgs;
	            lastArgs = null;
	            lastExceptionStack = null;
	            lastException = null;
	            notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));
	        }
	
	        /**
	         * Reports an unhandled Error to TraceKit.
	         * @param {Error} ex
	         * @param {?boolean} rethrow If false, do not re-throw the exception.
	         * Only used for window.onerror to not cause an infinite loop of
	         * rethrowing.
	         */
	        function report(ex, rethrow) {
	            var args = _slice.call(arguments, 1);
	            if (lastExceptionStack) {
	                if (lastException === ex) {
	                    return; // already caught by an inner catch block, ignore
	                } else {
	                    processLastException();
	                }
	            }
	
	            var stack = TraceKit.computeStackTrace(ex);
	            lastExceptionStack = stack;
	            lastException = ex;
	            lastArgs = args;
	
	            // If the stack trace is incomplete, wait for 2 seconds for
	            // slow slow IE to see if onerror occurs or not before reporting
	            // this exception; otherwise, we will end up with an incomplete
	            // stack trace
	            window.setTimeout(function () {
	                if (lastException === ex) {
	                    processLastException();
	                }
	            }, stack.incomplete ? 2000 : 0);
	
	            if (rethrow !== false) {
	                throw ex; // re-throw to propagate to the top level (and cause window.onerror)
	            }
	        }
	
	        report.subscribe = subscribe;
	        report.unsubscribe = unsubscribe;
	        report.uninstall = unsubscribeAll;
	        return report;
	    }();
	
	    /**
	     * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript
	     *
	     * Syntax:
	     *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)
	     * Returns:
	     *   s.name              - exception name
	     *   s.message           - exception message
	     *   s.stack[i].url      - JavaScript or HTML file URL
	     *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)
	     *   s.stack[i].args     - arguments passed to the function, if known
	     *   s.stack[i].line     - line number, if known
	     *   s.stack[i].column   - column number, if known
	     *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#
	     *
	     * Supports:
	     *   - Firefox:  full stack trace with line numbers and unreliable column
	     *               number on top frame
	     *   - Opera 10: full stack trace with line and column numbers
	     *   - Opera 9-: full stack trace with line numbers
	     *   - Chrome:   full stack trace with line and column numbers
	     *   - Safari:   line and column number for the topmost stacktrace element
	     *               only
	     *   - IE:       no line numbers whatsoever
	     *
	     * Tries to guess names of anonymous functions by looking for assignments
	     * in the source code. In IE and Safari, we have to guess source file names
	     * by searching for function bodies inside all page scripts. This will not
	     * work for scripts that are loaded cross-domain.
	     * Here be dragons: some function names may be guessed incorrectly, and
	     * duplicate functions may be mismatched.
	     *
	     * TraceKit.computeStackTrace should only be used for tracing purposes.
	     * Logging of unhandled exceptions should be done with TraceKit.report,
	     * which builds on top of TraceKit.computeStackTrace and provides better
	     * IE support by utilizing the window.onerror event to retrieve information
	     * about the top of the stack.
	     *
	     * Note: In IE and Safari, no stack trace is recorded on the Error object,
	     * so computeStackTrace instead walks its *own* chain of callers.
	     * This means that:
	     *  * in Safari, some methods may be missing from the stack trace;
	     *  * in IE, the topmost function in the stack trace will always be the
	     *    caller of computeStackTrace.
	     *
	     * This is okay for tracing (because you are likely to be calling
	     * computeStackTrace from the function you want to be the topmost element
	     * of the stack trace anyway), but not okay for logging unhandled
	     * exceptions (because your catch block will likely be far away from the
	     * inner function that actually caused the exception).
	     *
	     */
	    TraceKit.computeStackTrace = function computeStackTraceWrapper() {
	        var sourceCache = {};
	
	        /**
	         * Attempts to retrieve source code via XMLHttpRequest, which is used
	         * to look up anonymous function names.
	         * @param {string} url URL of source code.
	         * @return {string} Source contents.
	         */
	        function loadSource(url) {
	            if (!TraceKit.remoteFetching) {
	                //Only attempt request if remoteFetching is on.
	                return '';
	            }
	            try {
	                var getXHR = function getXHR() {
	                    try {
	                        return new window.XMLHttpRequest();
	                    } catch (e) {
	                        // explicitly bubble up the exception if not found
	                        return new window.ActiveXObject('Microsoft.XMLHTTP');
	                    }
	                };
	
	                var request = getXHR();
	                request.open('GET', url, false);
	                request.send('');
	                return request.responseText;
	            } catch (e) {
	                return '';
	            }
	        }
	
	        /**
	         * Retrieves source code from the source code cache.
	         * @param {string} url URL of source code.
	         * @return {Array.<string>} Source contents.
	         */
	        function getSource(url) {
	            if (!isString(url)) return [];
	            if (!hasKey(sourceCache, url)) {
	                // URL needs to be able to fetched within the acceptable domain.  Otherwise,
	                // cross-domain errors will be triggered.
	                var source = '';
	                var domain = '';
	                try {
	                    domain = document.domain;
	                } catch (e) {}
	                if (url.indexOf(domain) !== -1) {
	                    source = loadSource(url);
	                }
	                sourceCache[url] = source ? source.split('\n') : [];
	            }
	
	            return sourceCache[url];
	        }
	
	        /**
	         * Tries to use an externally loaded copy of source code to determine
	         * the name of a function by looking at the name of the variable it was
	         * assigned to, if any.
	         * @param {string} url URL of source code.
	         * @param {(string|number)} lineNo Line number in source code.
	         * @return {string} The function name, if discoverable.
	         */
	        function guessFunctionName(url, lineNo) {
	            var reFunctionArgNames = /function ([^(]*)\(([^)]*)\)/,
	                reGuessFunction = /['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/,
	                line = '',
	                maxLines = 10,
	                source = getSource(url),
	                m;
	
	            if (!source.length) {
	                return UNKNOWN_FUNCTION;
	            }
	
	            // Walk backwards from the first line in the function until we find the line which
	            // matches the pattern above, which is the function definition
	            for (var i = 0; i < maxLines; ++i) {
	                line = source[lineNo - i] + line;
	
	                if (!isUndefined(line)) {
	                    if (m = reGuessFunction.exec(line)) {
	                        return m[1];
	                    } else if (m = reFunctionArgNames.exec(line)) {
	                        return m[1];
	                    }
	                }
	            }
	
	            return UNKNOWN_FUNCTION;
	        }
	
	        /**
	         * Retrieves the surrounding lines from where an exception occurred.
	         * @param {string} url URL of source code.
	         * @param {(string|number)} line Line number in source code to centre
	         * around for context.
	         * @return {?Array.<string>} Lines of source code.
	         */
	        function gatherContext(url, line) {
	            var source = getSource(url);
	
	            if (!source.length) {
	                return null;
	            }
	
	            var context = [],
	
	            // linesBefore & linesAfter are inclusive with the offending line.
	            // if linesOfContext is even, there will be one extra line
	            //   *before* the offending line.
	            linesBefore = Math.floor(TraceKit.linesOfContext / 2),
	
	            // Add one extra line if linesOfContext is odd
	            linesAfter = linesBefore + TraceKit.linesOfContext % 2,
	                start = Math.max(0, line - linesBefore - 1),
	                end = Math.min(source.length, line + linesAfter - 1);
	
	            line -= 1; // convert to 0-based index
	
	            for (var i = start; i < end; ++i) {
	                if (!isUndefined(source[i])) {
	                    context.push(source[i]);
	                }
	            }
	
	            return context.length > 0 ? context : null;
	        }
	
	        /**
	         * Escapes special characters, except for whitespace, in a string to be
	         * used inside a regular expression as a string literal.
	         * @param {string} text The string.
	         * @return {string} The escaped string literal.
	         */
	        function escapeRegExp(text) {
	            return text.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g, '\\$&');
	        }
	
	        /**
	         * Escapes special characters in a string to be used inside a regular
	         * expression as a string literal. Also ensures that HTML entities will
	         * be matched the same as their literal friends.
	         * @param {string} body The string.
	         * @return {string} The escaped string.
	         */
	        function escapeCodeAsRegExpForMatchingInsideHTML(body) {
	            return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('"', '(?:"|&quot;)').replace(/\s+/g, '\\s+');
	        }
	
	        /**
	         * Determines where a code fragment occurs in the source code.
	         * @param {RegExp} re The function definition.
	         * @param {Array.<string>} urls A list of URLs to search.
	         * @return {?Object.<string, (string|number)>} An object containing
	         * the url, line, and column number of the defined function.
	         */
	        function findSourceInUrls(re, urls) {
	            var source, m;
	            for (var i = 0, j = urls.length; i < j; ++i) {
	                // console.log('searching', urls[i]);
	                if ((source = getSource(urls[i])).length) {
	                    source = source.join('\n');
	                    if (m = re.exec(source)) {
	                        // console.log('Found function in ' + urls[i]);
	
	                        return {
	                            'url': urls[i],
	                            'line': source.substring(0, m.index).split('\n').length,
	                            'column': m.index - source.lastIndexOf('\n', m.index) - 1
	                        };
	                    }
	                }
	            }
	
	            // console.log('no match');
	
	            return null;
	        }
	
	        /**
	         * Determines at which column a code fragment occurs on a line of the
	         * source code.
	         * @param {string} fragment The code fragment.
	         * @param {string} url The URL to search.
	         * @param {(string|number)} line The line number to examine.
	         * @return {?number} The column number.
	         */
	        function findSourceInLine(fragment, url, line) {
	            var source = getSource(url),
	                re = new RegExp('\\b' + escapeRegExp(fragment) + '\\b'),
	                m;
	
	            line -= 1;
	
	            if (source && source.length > line && (m = re.exec(source[line]))) {
	                return m.index;
	            }
	
	            return null;
	        }
	
	        /**
	         * Determines where a function was defined within the source code.
	         * @param {(Function|string)} func A function reference or serialized
	         * function definition.
	         * @return {?Object.<string, (string|number)>} An object containing
	         * the url, line, and column number of the defined function.
	         */
	        function findSourceByFunctionBody(func) {
	            if (typeof document === 'undefined') return;
	
	            var urls = [window.location.href],
	                scripts = document.getElementsByTagName('script'),
	                body,
	                code = '' + func,
	                codeRE = /^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,
	                eventRE = /^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,
	                re,
	                parts,
	                result;
	
	            for (var i = 0; i < scripts.length; ++i) {
	                var script = scripts[i];
	                if (script.src) {
	                    urls.push(script.src);
	                }
	            }
	
	            if (!(parts = codeRE.exec(code))) {
	                re = new RegExp(escapeRegExp(code).replace(/\s+/g, '\\s+'));
	            }
	
	            // not sure if this is really necessary, but I don’t have a test
	            // corpus large enough to confirm that and it was in the original.
	            else {
	                    var name = parts[1] ? '\\s+' + parts[1] : '',
	                        args = parts[2].split(',').join('\\s*,\\s*');
	
	                    body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\s+/g, '\\s+');
	                    re = new RegExp('function' + name + '\\s*\\(\\s*' + args + '\\s*\\)\\s*{\\s*' + body + '\\s*}');
	                }
	
	            // look for a normal function definition
	            if (result = findSourceInUrls(re, urls)) {
	                return result;
	            }
	
	            // look for an old-school event handler function
	            if (parts = eventRE.exec(code)) {
	                var event = parts[1];
	                body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);
	
	                // look for a function defined in HTML as an onXXX handler
	                re = new RegExp('on' + event + '=[\\\'"]\\s*' + body + '\\s*[\\\'"]', 'i');
	
	                if (result = findSourceInUrls(re, urls[0])) {
	                    return result;
	                }
	
	                // look for ???
	                re = new RegExp(body);
	
	                if (result = findSourceInUrls(re, urls)) {
	                    return result;
	                }
	            }
	
	            return null;
	        }
	
	        // Contents of Exception in various browsers.
	        //
	        // SAFARI:
	        // ex.message = Can't find variable: qq
	        // ex.line = 59
	        // ex.sourceId = 580238192
	        // ex.sourceURL = http://...
	        // ex.expressionBeginOffset = 96
	        // ex.expressionCaretOffset = 98
	        // ex.expressionEndOffset = 98
	        // ex.name = ReferenceError
	        //
	        // FIREFOX:
	        // ex.message = qq is not defined
	        // ex.fileName = http://...
	        // ex.lineNumber = 59
	        // ex.columnNumber = 69
	        // ex.stack = ...stack trace... (see the example below)
	        // ex.name = ReferenceError
	        //
	        // CHROME:
	        // ex.message = qq is not defined
	        // ex.name = ReferenceError
	        // ex.type = not_defined
	        // ex.arguments = ['aa']
	        // ex.stack = ...stack trace...
	        //
	        // INTERNET EXPLORER:
	        // ex.message = ...
	        // ex.name = ReferenceError
	        //
	        // OPERA:
	        // ex.message = ...message... (see the example below)
	        // ex.name = ReferenceError
	        // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)
	        // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'
	
	        /**
	         * Computes stack trace information from the stack property.
	         * Chrome and Gecko use this property.
	         * @param {Error} ex
	         * @return {?Object.<string, *>} Stack trace information.
	         */
	        function computeStackTraceFromStackProp(ex) {
	            if (isUndefined(ex.stack) || !ex.stack) return;
	
	            var chrome = /^\s*at (.*?) ?\(?((?:(?:file|https?|chrome-extension):.*?)|<anonymous>):(\d+)(?::(\d+))?\)?\s*$/i,
	                gecko = /^\s*(.*?)(?:\((.*?)\))?@((?:file|https?|chrome).*?):(\d+)(?::(\d+))?\s*$/i,
	                winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
	                lines = ex.stack.split('\n'),
	                stack = [],
	                parts,
	                element,
	                reference = /^(.*) is undefined$/.exec(ex.message);
	
	            for (var i = 0, j = lines.length; i < j; ++i) {
	                if (parts = gecko.exec(lines[i])) {
	                    element = {
	                        'url': parts[3],
	                        'func': parts[1] || UNKNOWN_FUNCTION,
	                        'args': parts[2] ? parts[2].split(',') : '',
	                        'line': +parts[4],
	                        'column': parts[5] ? +parts[5] : null
	                    };
	                } else if (parts = chrome.exec(lines[i])) {
	                    element = {
	                        'url': parts[2],
	                        'func': parts[1] || UNKNOWN_FUNCTION,
	                        'line': +parts[3],
	                        'column': parts[4] ? +parts[4] : null
	                    };
	                } else if (parts = winjs.exec(lines[i])) {
	                    element = {
	                        'url': parts[2],
	                        'func': parts[1] || UNKNOWN_FUNCTION,
	                        'line': +parts[3],
	                        'column': parts[4] ? +parts[4] : null
	                    };
	                } else {
	                    continue;
	                }
	
	                if (!element.func && element.line) {
	                    element.func = guessFunctionName(element.url, element.line);
	                }
	
	                if (element.line) {
	                    element.context = gatherContext(element.url, element.line);
	                }
	
	                stack.push(element);
	            }
	
	            if (!stack.length) {
	                return null;
	            }
	
	            if (stack[0].line && !stack[0].column && reference) {
	                stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);
	            } else if (!stack[0].column && !isUndefined(ex.columnNumber)) {
	                // FireFox uses this awesome columnNumber property for its top frame
	                // Also note, Firefox's column number is 0-based and everything else expects 1-based,
	                // so adding 1
	                stack[0].column = ex.columnNumber + 1;
	            }
	
	            return {
	                'name': ex.name,
	                'message': ex.message,
	                'url': getLocationHref(),
	                'stack': stack
	            };
	        }
	
	        /**
	         * Computes stack trace information from the stacktrace property.
	         * Opera 10 uses this property.
	         * @param {Error} ex
	         * @return {?Object.<string, *>} Stack trace information.
	         */
	        function computeStackTraceFromStacktraceProp(ex) {
	            // Access and store the stacktrace property before doing ANYTHING
	            // else to it because Opera is not very good at providing it
	            // reliably in other circumstances.
	            var stacktrace = ex.stacktrace;
	            if (isUndefined(ex.stacktrace) || !ex.stacktrace) return;
	
	            var testRE = / line (\d+), column (\d+) in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\) in (.*):\s*$/i,
	                lines = stacktrace.split('\n'),
	                stack = [],
	                parts;
	
	            for (var i = 0, j = lines.length; i < j; i += 2) {
	                if (parts = testRE.exec(lines[i])) {
	                    var element = {
	                        'line': +parts[1],
	                        'column': +parts[2],
	                        'func': parts[3] || parts[4],
	                        'args': parts[5] ? parts[5].split(',') : [],
	                        'url': parts[6]
	                    };
	
	                    if (!element.func && element.line) {
	                        element.func = guessFunctionName(element.url, element.line);
	                    }
	                    if (element.line) {
	                        try {
	                            element.context = gatherContext(element.url, element.line);
	                        } catch (exc) {}
	                    }
	
	                    if (!element.context) {
	                        element.context = [lines[i + 1]];
	                    }
	
	                    stack.push(element);
	                }
	            }
	
	            if (!stack.length) {
	                return null;
	            }
	
	            return {
	                'name': ex.name,
	                'message': ex.message,
	                'url': getLocationHref(),
	                'stack': stack
	            };
	        }
	
	        /**
	         * NOT TESTED.
	         * Computes stack trace information from an error message that includes
	         * the stack trace.
	         * Opera 9 and earlier use this method if the option to show stack
	         * traces is turned on in opera:config.
	         * @param {Error} ex
	         * @return {?Object.<string, *>} Stack information.
	         */
	        function computeStackTraceFromOperaMultiLineMessage(ex) {
	            // Opera includes a stack trace into the exception message. An example is:
	            //
	            // Statement on line 3: Undefined variable: undefinedFunc
	            // Backtrace:
	            //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz
	            //         undefinedFunc(a);
	            //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy
	            //           zzz(x, y, z);
	            //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx
	            //           yyy(a, a, a);
	            //   Line 1 of function script
	            //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }
	            //   ...
	
	            var lines = ex.message.split('\n');
	            if (lines.length < 4) {
	                return null;
	            }
	
	            var lineRE1 = /^\s*Line (\d+) of linked script ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,
	                lineRE2 = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,
	                lineRE3 = /^\s*Line (\d+) of function script\s*$/i,
	                stack = [],
	                scripts = document.getElementsByTagName('script'),
	                inlineScriptBlocks = [],
	                parts,
	                i,
	                len,
	                source;
	
	            for (i in scripts) {
	                if (hasKey(scripts, i) && !scripts[i].src) {
	                    inlineScriptBlocks.push(scripts[i]);
	                }
	            }
	
	            for (i = 2, len = lines.length; i < len; i += 2) {
	                var item = null;
	                if (parts = lineRE1.exec(lines[i])) {
	                    item = {
	                        'url': parts[2],
	                        'func': parts[3],
	                        'line': +parts[1]
	                    };
	                } else if (parts = lineRE2.exec(lines[i])) {
	                    item = {
	                        'url': parts[3],
	                        'func': parts[4]
	                    };
	                    var relativeLine = +parts[1]; // relative to the start of the <SCRIPT> block
	                    var script = inlineScriptBlocks[parts[2] - 1];
	                    if (script) {
	                        source = getSource(item.url);
	                        if (source) {
	                            source = source.join('\n');
	                            var pos = source.indexOf(script.innerText);
	                            if (pos >= 0) {
	                                item.line = relativeLine + source.substring(0, pos).split('\n').length;
	                            }
	                        }
	                    }
	                } else if (parts = lineRE3.exec(lines[i])) {
	                    var url = window.location.href.replace(/#.*$/, ''),
	                        line = parts[1];
	                    var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));
	                    source = findSourceInUrls(re, [url]);
	                    item = {
	                        'url': url,
	                        'line': source ? source.line : line,
	                        'func': ''
	                    };
	                }
	
	                if (item) {
	                    if (!item.func) {
	                        item.func = guessFunctionName(item.url, item.line);
	                    }
	                    var context = gatherContext(item.url, item.line);
	                    var midline = context ? context[Math.floor(context.length / 2)] : null;
	                    if (context && midline.replace(/^\s*/, '') === lines[i + 1].replace(/^\s*/, '')) {
	                        item.context = context;
	                    } else {
	                        // if (context) alert("Context mismatch. Correct midline:\n" + lines[i+1] + "\n\nMidline:\n" + midline + "\n\nContext:\n" + context.join("\n") + "\n\nURL:\n" + item.url);
	                        item.context = [lines[i + 1]];
	                    }
	                    stack.push(item);
	                }
	            }
	            if (!stack.length) {
	                return null; // could not parse multiline exception message as Opera stack trace
	            }
	
	            return {
	                'name': ex.name,
	                'message': lines[0],
	                'url': getLocationHref(),
	                'stack': stack
	            };
	        }
	
	        /**
	         * Adds information about the first frame to incomplete stack traces.
	         * Safari and IE require this to get complete data on the first frame.
	         * @param {Object.<string, *>} stackInfo Stack trace information from
	         * one of the compute* methods.
	         * @param {string} url The URL of the script that caused an error.
	         * @param {(number|string)} lineNo The line number of the script that
	         * caused an error.
	         * @param {string=} message The error generated by the browser, which
	         * hopefully contains the name of the object that caused the error.
	         * @return {boolean} Whether or not the stack information was
	         * augmented.
	         */
	        function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {
	            var initial = {
	                'url': url,
	                'line': lineNo
	            };
	
	            if (initial.url && initial.line) {
	                stackInfo.incomplete = false;
	
	                if (!initial.func) {
	                    initial.func = guessFunctionName(initial.url, initial.line);
	                }
	
	                if (!initial.context) {
	                    initial.context = gatherContext(initial.url, initial.line);
	                }
	
	                var reference = / '([^']+)' /.exec(message);
	                if (reference) {
	                    initial.column = findSourceInLine(reference[1], initial.url, initial.line);
	                }
	
	                if (stackInfo.stack.length > 0) {
	                    if (stackInfo.stack[0].url === initial.url) {
	                        if (stackInfo.stack[0].line === initial.line) {
	                            return false; // already in stack trace
	                        } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {
	                            stackInfo.stack[0].line = initial.line;
	                            stackInfo.stack[0].context = initial.context;
	                            return false;
	                        }
	                    }
	                }
	
	                stackInfo.stack.unshift(initial);
	                stackInfo.partial = true;
	                return true;
	            } else {
	                stackInfo.incomplete = true;
	            }
	
	            return false;
	        }
	
	        /**
	         * Computes stack trace information by walking the arguments.caller
	         * chain at the time the exception occurred. This will cause earlier
	         * frames to be missed but is the only way to get any stack trace in
	         * Safari and IE. The top frame is restored by
	         * {@link augmentStackTraceWithInitialElement}.
	         * @param {Error} ex
	         * @return {?Object.<string, *>} Stack trace information.
	         */
	        function computeStackTraceByWalkingCallerChain(ex, depth) {
	            var functionName = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,
	                stack = [],
	                funcs = {},
	                recursion = false,
	                parts,
	                item,
	                source;
	
	            for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {
	                if (curr === computeStackTrace || curr === TraceKit.report) {
	                    // console.log('skipping internal function');
	                    continue;
	                }
	
	                item = {
	                    'url': null,
	                    'func': UNKNOWN_FUNCTION,
	                    'line': null,
	                    'column': null
	                };
	
	                if (curr.name) {
	                    item.func = curr.name;
	                } else if (parts = functionName.exec(curr.toString())) {
	                    item.func = parts[1];
	                }
	
	                if (typeof item.func === 'undefined') {
	                    try {
	                        item.func = parts.input.substring(0, parts.input.indexOf('{'));
	                    } catch (e) {}
	                }
	
	                if (source = findSourceByFunctionBody(curr)) {
	                    item.url = source.url;
	                    item.line = source.line;
	
	                    if (item.func === UNKNOWN_FUNCTION) {
	                        item.func = guessFunctionName(item.url, item.line);
	                    }
	
	                    var reference = / '([^']+)' /.exec(ex.message || ex.description);
	                    if (reference) {
	                        item.column = findSourceInLine(reference[1], source.url, source.line);
	                    }
	                }
	
	                if (funcs['' + curr]) {
	                    recursion = true;
	                } else {
	                    funcs['' + curr] = true;
	                }
	
	                stack.push(item);
	            }
	
	            if (depth) {
	                // console.log('depth is ' + depth);
	                // console.log('stack is ' + stack.length);
	                stack.splice(0, depth);
	            }
	
	            var result = {
	                'name': ex.name,
	                'message': ex.message,
	                'url': getLocationHref(),
	                'stack': stack
	            };
	            augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);
	            return result;
	        }
	
	        /**
	         * Computes a stack trace for an exception.
	         * @param {Error} ex
	         * @param {(string|number)=} depth
	         */
	        function computeStackTrace(ex, depth) {
	            var stack = null;
	            depth = depth == null ? 0 : +depth;
	
	            try {
	                // This must be tried first because Opera 10 *destroys*
	                // its stacktrace property if you try to access the stack
	                // property first!!
	                stack = computeStackTraceFromStacktraceProp(ex);
	                if (stack) {
	                    return stack;
	                }
	            } catch (e) {
	                if (TraceKit.debug) {
	                    throw e;
	                }
	            }
	
	            try {
	                stack = computeStackTraceFromStackProp(ex);
	                if (stack) {
	                    return stack;
	                }
	            } catch (e) {
	                if (TraceKit.debug) {
	                    throw e;
	                }
	            }
	
	            try {
	                stack = computeStackTraceFromOperaMultiLineMessage(ex);
	                if (stack) {
	                    return stack;
	                }
	            } catch (e) {
	                if (TraceKit.debug) {
	                    throw e;
	                }
	            }
	
	            try {
	                stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);
	                if (stack) {
	                    return stack;
	                }
	            } catch (e) {
	                if (TraceKit.debug) {
	                    throw e;
	                }
	            }
	
	            return {
	                'name': ex.name,
	                'message': ex.message,
	                'url': getLocationHref()
	            };
	        }
	
	        computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;
	        computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;
	        computeStackTrace.guessFunctionName = guessFunctionName;
	        computeStackTrace.gatherContext = gatherContext;
	
	        return computeStackTrace;
	    }();
	
	    'use strict';
	
	    // First, check for JSON support
	    // If there is no JSON, we no-op the core features of Raven
	    // since JSON is required to encode the payload
	    var _Raven = window.Raven,
	        hasJSON = !!((typeof JSON === 'undefined' ? 'undefined' : (0, _typeof3.default)(JSON)) === 'object' && _stringify2.default),
	
	    // Raven can run in contexts where there's no document (react-native)
	    hasDocument = typeof document !== 'undefined',
	        lastCapturedException,
	        _lastEventId,
	        globalServer,
	        globalKey,
	        globalProject,
	        globalContext = {},
	        globalOptions = {
	        logger: 'javascript',
	        ignoreErrors: [],
	        ignoreUrls: [],
	        whitelistUrls: [],
	        includePaths: [],
	        crossOrigin: 'anonymous',
	        collectWindowErrors: true,
	        maxMessageLength: 100
	    },
	        isRavenInstalled = false,
	        objectPrototype = Object.prototype,
	
	    // capture references to window.console *and* all its methods first
	    // before the console plugin has a chance to monkey patch
	    originalConsole = window.console || {},
	        originalConsoleMethods = {},
	        plugins = [],
	        startTime = now();
	
	    for (var method in originalConsole) {
	        originalConsoleMethods[method] = originalConsole[method];
	    }
	    /*
	     * The core Raven singleton
	     *
	     * @this {Raven}
	     */
	    var Raven = {
	        VERSION: '1.3.0',
	
	        debug: false,
	
	        /*
	         * Allow multiple versions of Raven to be installed.
	         * Strip Raven from the global context and returns the instance.
	         *
	         * @return {Raven}
	         */
	        noConflict: function noConflict() {
	            window.Raven = _Raven;
	            return Raven;
	        },
	
	        /*
	         * Configure Raven with a DSN and extra options
	         *
	         * @param {string} dsn The public Sentry DSN
	         * @param {object} options Optional set of of global options [optional]
	         * @return {Raven}
	         */
	        config: function config(dsn, options) {
	            if (globalServer) {
	                logDebug('error', 'Error: Raven has already been configured');
	                return Raven;
	            }
	            if (!dsn) return Raven;
	
	            var uri = parseDSN(dsn),
	                lastSlash = uri.path.lastIndexOf('/'),
	                path = uri.path.substr(1, lastSlash);
	
	            // merge in options
	            if (options) {
	                each(options, function (key, value) {
	                    // tags and extra are special and need to be put into context
	                    if (key == 'tags' || key == 'extra') {
	                        globalContext[key] = value;
	                    } else {
	                        globalOptions[key] = value;
	                    }
	                });
	            }
	
	            // "Script error." is hard coded into browsers for errors that it can't read.
	            // this is the result of a script being pulled in from an external domain and CORS.
	            globalOptions.ignoreErrors.push(/^Script error\.?$/);
	            globalOptions.ignoreErrors.push(/^Javascript error: Script error\.? on line 0$/);
	
	            // join regexp rules into one big rule
	            globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);
	            globalOptions.ignoreUrls = globalOptions.ignoreUrls.length ? joinRegExp(globalOptions.ignoreUrls) : false;
	            globalOptions.whitelistUrls = globalOptions.whitelistUrls.length ? joinRegExp(globalOptions.whitelistUrls) : false;
	            globalOptions.includePaths = joinRegExp(globalOptions.includePaths);
	
	            globalKey = uri.user;
	            globalProject = uri.path.substr(lastSlash + 1);
	
	            // assemble the endpoint from the uri pieces
	            globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '') + '/' + path + 'api/' + globalProject + '/store/';
	
	            if (uri.protocol) {
	                globalServer = uri.protocol + ':' + globalServer;
	            }
	
	            if (globalOptions.fetchContext) {
	                TraceKit.remoteFetching = true;
	            }
	
	            if (globalOptions.linesOfContext) {
	                TraceKit.linesOfContext = globalOptions.linesOfContext;
	            }
	
	            TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;
	
	            // return for chaining
	            return Raven;
	        },
	
	        /*
	         * Installs a global window.onerror error handler
	         * to capture and report uncaught exceptions.
	         * At this point, install() is required to be called due
	         * to the way TraceKit is set up.
	         *
	         * @return {Raven}
	         */
	        install: function install() {
	            if (_isSetup() && !isRavenInstalled) {
	                TraceKit.report.subscribe(handleStackInfo);
	
	                // Install all of the plugins
	                each(plugins, function (_, plugin) {
	                    plugin();
	                });
	
	                isRavenInstalled = true;
	            }
	
	            return Raven;
	        },
	
	        /*
	         * Wrap code within a context so Raven can capture errors
	         * reliably across domains that is executed immediately.
	         *
	         * @param {object} options A specific set of options for this context [optional]
	         * @param {function} func The callback to be immediately executed within the context
	         * @param {array} args An array of arguments to be called with the callback [optional]
	         */
	        context: function context(options, func, args) {
	            if (isFunction(options)) {
	                args = func || [];
	                func = options;
	                options = undefined;
	            }
	
	            return Raven.wrap(options, func).apply(this, args);
	        },
	
	        /*
	         * Wrap code within a context and returns back a new function to be executed
	         *
	         * @param {object} options A specific set of options for this context [optional]
	         * @param {function} func The function to be wrapped in a new context
	         * @return {function} The newly wrapped functions with a context
	         */
	        wrap: function wrap(options, func) {
	            // 1 argument has been passed, and it's not a function
	            // so just return it
	            if (isUndefined(func) && !isFunction(options)) {
	                return options;
	            }
	
	            // options is optional
	            if (isFunction(options)) {
	                func = options;
	                options = undefined;
	            }
	
	            // At this point, we've passed along 2 arguments, and the second one
	            // is not a function either, so we'll just return the second argument.
	            if (!isFunction(func)) {
	                return func;
	            }
	
	            // We don't wanna wrap it twice!
	            if (func.__raven__) {
	                return func;
	            }
	
	            function wrapped() {
	                var args = [],
	                    i = arguments.length,
	                    deep = !options || options && options.deep !== false;
	                // Recursively wrap all of a function's arguments that are
	                // functions themselves.
	
	                while (i--) {
	                    args[i] = deep ? Raven.wrap(options, arguments[i]) : arguments[i];
	                }try {
	                    /*jshint -W040*/
	                    return func.apply(this, args);
	                } catch (e) {
	                    Raven.captureException(e, options);
	                    throw e;
	                }
	            }
	
	            // copy over properties of the old function
	            for (var property in func) {
	                if (hasKey(func, property)) {
	                    wrapped[property] = func[property];
	                }
	            }
	            wrapped.prototype = func.prototype;
	
	            // Signal that this function has been wrapped already
	            // for both debugging and to prevent it to being wrapped twice
	            wrapped.__raven__ = true;
	            wrapped.__inner__ = func;
	
	            return wrapped;
	        },
	
	        /*
	         * Uninstalls the global error handler.
	         *
	         * @return {Raven}
	         */
	        uninstall: function uninstall() {
	            TraceKit.report.uninstall();
	            isRavenInstalled = false;
	
	            return Raven;
	        },
	
	        /*
	         * Manually capture an exception and send it over to Sentry
	         *
	         * @param {error} ex An exception to be logged
	         * @param {object} options A specific set of options for this error [optional]
	         * @return {Raven}
	         */
	        captureException: function captureException(ex, options) {
	            // If not an Error is passed through, recall as a message instead
	            if (!isError(ex)) return Raven.captureMessage(ex, options);
	
	            // Store the raw exception object for potential debugging and introspection
	            lastCapturedException = ex;
	
	            // TraceKit.report will re-raise any exception passed to it,
	            // which means you have to wrap it in try/catch. Instead, we
	            // can wrap it here and only re-raise if TraceKit.report
	            // raises an exception different from the one we asked to
	            // report on.
	            try {
	                var stack = TraceKit.computeStackTrace(ex);
	                handleStackInfo(stack, options);
	            } catch (ex1) {
	                if (ex !== ex1) {
	                    throw ex1;
	                }
	            }
	
	            return Raven;
	        },
	
	        /*
	         * Manually send a message to Sentry
	         *
	         * @param {string} msg A plain message to be captured in Sentry
	         * @param {object} options A specific set of options for this message [optional]
	         * @return {Raven}
	         */
	        captureMessage: function captureMessage(msg, options) {
	            // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an
	            // early call; we'll error on the side of logging anything called before configuration since it's
	            // probably something you should see:
	            if (!!globalOptions.ignoreErrors.test && globalOptions.ignoreErrors.test(msg)) {
	                return;
	            }
	
	            // Fire away!
	            send(objectMerge({
	                message: msg + '' // Make sure it's actually a string
	            }, options));
	
	            return Raven;
	        },
	
	        addPlugin: function addPlugin(plugin) {
	            plugins.push(plugin);
	            if (isRavenInstalled) plugin();
	            return Raven;
	        },
	
	        /*
	         * Set/clear a user to be sent along with the payload.
	         *
	         * @param {object} user An object representing user data [optional]
	         * @return {Raven}
	         */
	        setUserContext: function setUserContext(user) {
	            // Intentionally do not merge here since that's an unexpected behavior.
	            globalContext.user = user;
	
	            return Raven;
	        },
	
	        /*
	         * Merge extra attributes to be sent along with the payload.
	         *
	         * @param {object} extra An object representing extra data [optional]
	         * @return {Raven}
	         */
	        setExtraContext: function setExtraContext(extra) {
	            mergeContext('extra', extra);
	
	            return Raven;
	        },
	
	        /*
	         * Merge tags to be sent along with the payload.
	         *
	         * @param {object} tags An object representing tags [optional]
	         * @return {Raven}
	         */
	        setTagsContext: function setTagsContext(tags) {
	            mergeContext('tags', tags);
	
	            return Raven;
	        },
	
	        /*
	         * Clear all of the context.
	         *
	         * @return {Raven}
	         */
	        clearContext: function clearContext() {
	            globalContext = {};
	
	            return Raven;
	        },
	
	        /*
	         * Get a copy of the current context. This cannot be mutated.
	         *
	         * @return {object} copy of context
	         */
	        getContext: function getContext() {
	            // lol javascript
	            return JSON.parse((0, _stringify2.default)(globalContext));
	        },
	
	        /*
	         * Set release version of application
	         *
	         * @param {string} release Typically something like a git SHA to identify version
	         * @return {Raven}
	         */
	        setRelease: function setRelease(release) {
	            globalOptions.release = release;
	
	            return Raven;
	        },
	
	        /*
	         * Set the dataCallback option
	         *
	         * @param {function} callback The callback to run which allows the
	         *                            data blob to be mutated before sending
	         * @return {Raven}
	         */
	        setDataCallback: function setDataCallback(callback) {
	            globalOptions.dataCallback = callback;
	
	            return Raven;
	        },
	
	        /*
	         * Set the shouldSendCallback option
	         *
	         * @param {function} callback The callback to run which allows
	         *                            introspecting the blob before sending
	         * @return {Raven}
	         */
	        setShouldSendCallback: function setShouldSendCallback(callback) {
	            globalOptions.shouldSendCallback = callback;
	
	            return Raven;
	        },
	
	        /**
	         * Override the default HTTP transport mechanism that transmits data
	         * to the Sentry server.
	         *
	         * @param {function} transport Function invoked instead of the default
	         *                             `makeRequest` handler.
	         *
	         * @return {Raven}
	         */
	        setTransport: function setTransport(transport) {
	            globalOptions.transport = transport;
	
	            return Raven;
	        },
	
	        /*
	         * Get the latest raw exception that was captured by Raven.
	         *
	         * @return {error}
	         */
	        lastException: function lastException() {
	            return lastCapturedException;
	        },
	
	        /*
	         * Get the last event id
	         *
	         * @return {string}
	         */
	        lastEventId: function lastEventId() {
	            return _lastEventId;
	        },
	
	        /*
	         * Determine if Raven is setup and ready to go.
	         *
	         * @return {boolean}
	         */
	        isSetup: function isSetup() {
	            return _isSetup();
	        }
	    };
	
	    // Deprecations
	    Raven.setUser = Raven.setUserContext;
	    Raven.setReleaseContext = Raven.setRelease;
	
	    function triggerEvent(eventType, options) {
	        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it
	        var evt, key;
	
	        if (!hasDocument) return;
	
	        options = options || {};
	
	        eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);
	
	        if (document.createEvent) {
	            evt = document.createEvent('HTMLEvents');
	            evt.initEvent(eventType, true, true);
	        } else {
	            evt = document.createEventObject();
	            evt.eventType = eventType;
	        }
	
	        for (key in options) {
	            if (hasKey(options, key)) {
	                evt[key] = options[key];
	            }
	        }if (document.createEvent) {
	            // IE9 if standards
	            document.dispatchEvent(evt);
	        } else {
	            // IE8 regardless of Quirks or Standards
	            // IE9 if quirks
	            try {
	                document.fireEvent('on' + evt.eventType.toLowerCase(), evt);
	            } catch (e) {}
	        }
	    }
	
	    var dsnKeys = 'source protocol user pass host port path'.split(' '),
	        dsnPattern = /^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/;
	
	    function RavenConfigError(message) {
	        this.name = 'RavenConfigError';
	        this.message = message;
	    }
	    RavenConfigError.prototype = new Error();
	    RavenConfigError.prototype.constructor = RavenConfigError;
	
	    /**** Private functions ****/
	    function parseDSN(str) {
	        var m = dsnPattern.exec(str),
	            dsn = {},
	            i = 7;
	
	        try {
	            while (i--) {
	                dsn[dsnKeys[i]] = m[i] || '';
	            }
	        } catch (e) {
	            throw new RavenConfigError('Invalid DSN: ' + str);
	        }
	
	        if (dsn.pass) throw new RavenConfigError('Do not specify your private key in the DSN!');
	
	        return dsn;
	    }
	
	    function isUndefined(what) {
	        return what === void 0;
	    }
	
	    function isFunction(what) {
	        return typeof what === 'function';
	    }
	
	    function isString(what) {
	        return objectPrototype.toString.call(what) === '[object String]';
	    }
	
	    function isObject(what) {
	        return (typeof what === 'undefined' ? 'undefined' : (0, _typeof3.default)(what)) === 'object' && what !== null;
	    }
	
	    function isEmptyObject(what) {
	        for (var k in what) {
	            return false;
	        }return true;
	    }
	
	    // Sorta yanked from https://github.com/joyent/node/blob/aa3b4b4/lib/util.js#L560
	    // with some tiny modifications
	    function isError(what) {
	        return isObject(what) && objectPrototype.toString.call(what) === '[object Error]' || what instanceof Error;
	    }
	
	    /**
	     * hasKey, a better form of hasOwnProperty
	     * Example: hasKey(MainHostObject, property) === true/false
	     *
	     * @param {Object} host object to check property
	     * @param {string} key to check
	     */
	    function hasKey(object, key) {
	        return objectPrototype.hasOwnProperty.call(object, key);
	    }
	
	    function each(obj, callback) {
	        var i, j;
	
	        if (isUndefined(obj.length)) {
	            for (i in obj) {
	                if (hasKey(obj, i)) {
	                    callback.call(null, i, obj[i]);
	                }
	            }
	        } else {
	            j = obj.length;
	            if (j) {
	                for (i = 0; i < j; i++) {
	                    callback.call(null, i, obj[i]);
	                }
	            }
	        }
	    }
	
	    function handleStackInfo(stackInfo, options) {
	        var frames = [];
	
	        if (stackInfo.stack && stackInfo.stack.length) {
	            each(stackInfo.stack, function (i, stack) {
	                var frame = normalizeFrame(stack);
	                if (frame) {
	                    frames.push(frame);
	                }
	            });
	        }
	
	        triggerEvent('handle', {
	            stackInfo: stackInfo,
	            options: options
	        });
	
	        processException(stackInfo.name, stackInfo.message, stackInfo.url, stackInfo.lineno, frames, options);
	    }
	
	    function normalizeFrame(frame) {
	        if (!frame.url) return;
	
	        // normalize the frames data
	        var normalized = {
	            filename: frame.url,
	            lineno: frame.line,
	            colno: frame.column,
	            'function': frame.func || '?'
	        },
	            context = extractContextFromFrame(frame),
	            i;
	
	        if (context) {
	            var keys = ['pre_context', 'context_line', 'post_context'];
	            i = 3;
	            while (i--) {
	                normalized[keys[i]] = context[i];
	            }
	        }
	
	        normalized.in_app = !( // determine if an exception came from outside of our app
	        // first we check the global includePaths list.
	        !!globalOptions.includePaths.test && !globalOptions.includePaths.test(normalized.filename) ||
	        // Now we check for fun, if the function name is Raven or TraceKit
	        /(Raven|TraceKit)\./.test(normalized['function']) ||
	        // finally, we do a last ditch effort and check for raven.min.js
	        /raven\.(min\.)?js$/.test(normalized.filename));
	
	        return normalized;
	    }
	
	    function extractContextFromFrame(frame) {
	        // immediately check if we should even attempt to parse a context
	        if (!frame.context || !globalOptions.fetchContext) return;
	
	        var context = frame.context,
	            pivot = ~~(context.length / 2),
	            i = context.length,
	            isMinified = false;
	
	        while (i--) {
	            // We're making a guess to see if the source is minified or not.
	            // To do that, we make the assumption if *any* of the lines passed
	            // in are greater than 300 characters long, we bail.
	            // Sentry will see that there isn't a context
	            if (context[i].length > 300) {
	                isMinified = true;
	                break;
	            }
	        }
	
	        if (isMinified) {
	            // The source is minified and we don't know which column. Fuck it.
	            if (isUndefined(frame.column)) return;
	
	            // If the source is minified and has a frame column
	            // we take a chunk of the offending line to hopefully shed some light
	            return [[], // no pre_context
	            context[pivot].substr(frame.column, 50), // grab 50 characters, starting at the offending column
	            [] // no post_context
	            ];
	        }
	
	        return [context.slice(0, pivot), // pre_context
	        context[pivot], // context_line
	        context.slice(pivot + 1) // post_context
	        ];
	    }
	
	    function processException(type, message, fileurl, lineno, frames, options) {
	        var stacktrace, i, fullMessage;
	
	        if (!!globalOptions.ignoreErrors.test && globalOptions.ignoreErrors.test(message)) return;
	
	        message += '';
	        fullMessage = type + ': ' + message;
	
	        if (frames && frames.length) {
	            fileurl = frames[0].filename || fileurl;
	            // Sentry expects frames oldest to newest
	            // and JS sends them as newest to oldest
	            frames.reverse();
	            stacktrace = { frames: frames };
	        } else if (fileurl) {
	            stacktrace = {
	                frames: [{
	                    filename: fileurl,
	                    lineno: lineno,
	                    in_app: true
	                }]
	            };
	        }
	
	        if (!!globalOptions.ignoreUrls.test && globalOptions.ignoreUrls.test(fileurl)) return;
	        if (!!globalOptions.whitelistUrls.test && !globalOptions.whitelistUrls.test(fileurl)) return;
	
	        // Fire away!
	        send(objectMerge({
	            // sentry.interfaces.Exception
	            exception: {
	                values: [{
	                    type: type,
	                    value: message,
	                    stacktrace: stacktrace
	                }]
	            },
	            culprit: fileurl,
	            message: fullMessage
	        }, options));
	    }
	
	    function objectMerge(obj1, obj2) {
	        if (!obj2) {
	            return obj1;
	        }
	        each(obj2, function (key, value) {
	            obj1[key] = value;
	        });
	        return obj1;
	    }
	
	    function truncate(str, max) {
	        return str.length <= max ? str : str.substr(0, max) + '…';
	    }
	
	    function trimPacket(data) {
	        // For now, we only want to truncate the two different messages
	        // but this could/should be expanded to just trim everything
	        var max = globalOptions.maxMessageLength;
	        data.message = truncate(data.message, max);
	        if (data.exception) {
	            var exception = data.exception.values[0];
	            exception.value = truncate(exception.value, max);
	        }
	
	        return data;
	    }
	
	    function now() {
	        return +new Date();
	    }
	
	    function getHttpData() {
	        if (!hasDocument || !document.location || !document.location.href) {
	            return;
	        }
	
	        var httpData = {
	            headers: {
	                'User-Agent': navigator.userAgent
	            }
	        };
	
	        httpData.url = document.location.href;
	
	        if (document.referrer) {
	            httpData.headers.Referer = document.referrer;
	        }
	
	        return httpData;
	    }
	
	    function send(data) {
	        var baseData = {
	            project: globalProject,
	            logger: globalOptions.logger,
	            platform: 'javascript'
	        },
	            httpData = getHttpData();
	
	        if (httpData) {
	            baseData.request = httpData;
	        }
	
	        data = objectMerge(baseData, data);
	
	        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge
	        data.tags = objectMerge(objectMerge({}, globalContext.tags), data.tags);
	        data.extra = objectMerge(objectMerge({}, globalContext.extra), data.extra);
	
	        // Send along our own collected metadata with extra
	        data.extra['session:duration'] = now() - startTime;
	
	        // If there are no tags/extra, strip the key from the payload alltogther.
	        if (isEmptyObject(data.tags)) delete data.tags;
	
	        if (globalContext.user) {
	            // sentry.interfaces.User
	            data.user = globalContext.user;
	        }
	
	        // Include the release if it's defined in globalOptions
	        if (globalOptions.release) data.release = globalOptions.release;
	        // Include server_name if it's defined in globalOptions
	        if (globalOptions.serverName) data.server_name = globalOptions.serverName;
	
	        if (isFunction(globalOptions.dataCallback)) {
	            data = globalOptions.dataCallback(data) || data;
	        }
	
	        // Why??????????
	        if (!data || isEmptyObject(data)) {
	            return;
	        }
	
	        // Check if the request should be filtered or not
	        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {
	            return;
	        }
	
	        // Send along an event_id if not explicitly passed.
	        // This event_id can be used to reference the error within Sentry itself.
	        // Set lastEventId after we know the error should actually be sent
	        _lastEventId = data.event_id || (data.event_id = uuid4());
	
	        // Try and clean up the packet before sending by truncating long values
	        data = trimPacket(data);
	
	        logDebug('debug', 'Raven about to send:', data);
	
	        if (!_isSetup()) return;
	
	        (globalOptions.transport || makeRequest)({
	            url: globalServer,
	            auth: {
	                sentry_version: '7',
	                sentry_client: 'raven-js/' + Raven.VERSION,
	                sentry_key: globalKey
	            },
	            data: data,
	            options: globalOptions,
	            onSuccess: function success() {
	                triggerEvent('success', {
	                    data: data,
	                    src: globalServer
	                });
	            },
	            onError: function failure() {
	                triggerEvent('failure', {
	                    data: data,
	                    src: globalServer
	                });
	            }
	        });
	    }
	
	    function makeRequest(opts) {
	        // Tack on sentry_data to auth options, which get urlencoded
	        opts.auth.sentry_data = (0, _stringify2.default)(opts.data);
	
	        var img = newImage(),
	            src = opts.url + '?' + urlencode(opts.auth),
	            crossOrigin = opts.options.crossOrigin;
	
	        if (crossOrigin || crossOrigin === '') {
	            img.crossOrigin = crossOrigin;
	        }
	        img.onload = opts.onSuccess;
	        img.onerror = img.onabort = opts.onError;
	        img.src = src;
	    }
	
	    // Note: this is shitty, but I can't figure out how to get
	    // sinon to stub document.createElement without breaking everything
	    // so this wrapper is just so I can stub it for tests.
	    function newImage() {
	        return document.createElement('img');
	    }
	
	    var ravenNotConfiguredError;
	
	    function _isSetup() {
	        if (!hasJSON) return false; // needs JSON support
	        if (!globalServer) {
	            if (!ravenNotConfiguredError) logDebug('error', 'Error: Raven has not been configured.');
	            ravenNotConfiguredError = true;
	            return false;
	        }
	        return true;
	    }
	
	    function joinRegExp(patterns) {
	        // Combine an array of regular expressions and strings into one large regexp
	        // Be mad.
	        var sources = [],
	            i = 0,
	            len = patterns.length,
	            pattern;
	
	        for (; i < len; i++) {
	            pattern = patterns[i];
	            if (isString(pattern)) {
	                // If it's a string, we need to escape it
	                // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
	                sources.push(pattern.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"));
	            } else if (pattern && pattern.source) {
	                // If it's a regexp already, we want to extract the source
	                sources.push(pattern.source);
	            }
	            // Intentionally skip other cases
	        }
	        return new RegExp(sources.join('|'), 'i');
	    }
	
	    function uuid4() {
	        var crypto = window.crypto || window.msCrypto;
	
	        if (!isUndefined(crypto) && crypto.getRandomValues) {
	            // Use window.crypto API if available
	            var arr = new Uint16Array(8);
	            crypto.getRandomValues(arr);
	
	            // set 4 in byte 7
	            arr[3] = arr[3] & 0xFFF | 0x4000;
	            // set 2 most significant bits of byte 9 to '10'
	            arr[4] = arr[4] & 0x3FFF | 0x8000;
	
	            var pad = function pad(num) {
	                var v = num.toString(16);
	                while (v.length < 4) {
	                    v = '0' + v;
	                }
	                return v;
	            };
	
	            return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);
	        } else {
	            // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
	            return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
	                var r = Math.random() * 16 | 0,
	                    v = c == 'x' ? r : r & 0x3 | 0x8;
	                return v.toString(16);
	            });
	        }
	    }
	
	    function logDebug(level) {
	        if (originalConsoleMethods[level] && Raven.debug) {
	            // _slice is coming from vendor/TraceKit/tracekit.js
	            // so it's accessible globally
	            originalConsoleMethods[level].apply(originalConsole, _slice.call(arguments, 1));
	        }
	    }
	
	    function afterLoad() {
	        // Attempt to initialize Raven on load
	        var RavenConfig = window.RavenConfig;
	        if (RavenConfig) {
	            Raven.config(RavenConfig.dsn, RavenConfig.config).install();
	        }
	    }
	
	    function urlencode(o) {
	        var pairs = [];
	        each(o, function (key, value) {
	            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	        });
	        return pairs.join('&');
	    }
	
	    function mergeContext(key, context) {
	        if (isUndefined(context)) {
	            delete globalContext[key];
	        } else {
	            globalContext[key] = objectMerge(globalContext[key] || {}, context);
	        }
	    }
	
	    afterLoad();
	
	    // This is being exposed no matter what because there are too many weird
	    // usecases for how people use Raven. If this is really a problem, I'm sorry.
	    window.Raven = Raven;
	
	    // Expose Raven to the world
	    if (true) {
	        // AMD
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return Raven;
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if ((typeof module === 'undefined' ? 'undefined' : (0, _typeof3.default)(module)) === 'object') {
	        // browserify
	        module.exports = Raven;
	    } else if ((typeof exports === 'undefined' ? 'undefined' : (0, _typeof3.default)(exports)) === 'object') {
	        // CommonJS
	        exports = Raven;
	    }
	})(typeof window !== 'undefined' ? window : undefined);

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _utils = __webpack_require__(203);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var krux = __webpack_require__(214);
	var Ads = window.oAds = __webpack_require__(219);
	// TODO move to central shared utils
	var utils = __webpack_require__(237);
	var oAdsConfig = __webpack_require__(238);
	var Reporter = __webpack_require__(240);
	var sendMetrics = __webpack_require__(241);
	var Sticky = __webpack_require__(242);
	
	var slotCount = void 0;
	var slotsRendered = 0;
	var onAdsCompleteCallback = void 0;
	var customTimings = {};
	
	function initOAds(flags) {
		var initObj = oAdsConfig(flags);
		var containers = [].slice.call(document.querySelectorAll('.o-ads'));
	
		utils.log('dfp_targeting', initObj.dfp_targeting);
		onAdsCompleteCallback = onAdsComplete.bind(this, flags);
	
		document.addEventListener('oAds.complete', onAdsCompleteCallback);
	
		slotCount = containers.length;
	
		utils.log.info(slotCount + ' ad slots found on page');
		var ads = Ads.init(initObj);
		ads.then(function (res) {
			return containers.forEach(res.slots.initSlot.bind(res.slots));
		});
	}
	
	function onAdsComplete(flags, event) {
		var detail = event.detail;
		/* istanbul ignore else  */
		if (detail.type !== 'oop') {
			/* istanbul ignore else  */
	
			if (flags && flags.get('brokenAdReporter') && detail.slot && detail.slot.container) {
				if (detail.slot.reporter) {
					detail.slot.reporter.destroy();
				}
				detail.slot.reporter = new Reporter(detail.slot);
			}
	
			if (detail.slot.gpt && detail.slot.gpt.isEmpty === false) {
				utils.log.info('Ad loaded in slot', event);
				if (slotsRendered === 0) {
					(0, _utils.perfMark)('firstAdLoaded');
					if (/spoor-id=3/.test(document.cookie)) {
						(function () {
							customTimings.firstAdLoaded = new Date().getTime();
							var sendTimings = function sendTimings() {
								customTimings.adIframeLoaded = new Date().getTime();
								(0, _utils.perfMark)('adIframeLoaded');
								sendMetrics(customTimings, detail.slot);
								document.body.removeEventListener('oAds.adIframeLoaded', sendTimings);
							};
							document.body.addEventListener('oAds.adIframeLoaded', sendTimings);
						})();
					}
				}
			} else if (detail.slot.gpt && detail.slot.gpt.isEmpty === true) {
				utils.log.warn('Failed to load ad, details below');
				utils.log(event);
			}
			slotsRendered++;
		}
	
		/* istanbul ignore else  */
		if (slotsRendered === slotCount) {
			utils.log('Ads component finished');
		}
	}
	
	module.exports = {
		init: function init(flags) {
			return _promise2.default.resolve().then(function () {
				if (flags && flags.get('ads')) {
					if (/(BlackBerry|BBOS|PlayBook|BB10)/.test(navigator.userAgent)) {
						return;
					}
	
					if (flags && flags.get('stickyHeaderAd')) {
						var stickyAd = new Sticky(document.querySelector('.above-header-advert'), { 'sibling': '.header-ad-placeholder__top',
							'stickUntil': '#primary-nav .o-header__top'
						});
						stickyAd.init();
					}
					if (flags && flags.get('stickyRightAd')) {
						var stickyRight = new Sticky(document.querySelector('.sidebar-advert'), { 'topOffset': '70px',
							'stickUntil': 'footer'
						});
						stickyRight.init();
					}
	
					return _promise2.default.resolve().then(function () {
						// slotsRendered = 0; // Note - this is a global var for this module
						// TODO get appName from appInfo
						var appName = utils.getAppName();
						if (flags && flags.get('ads') && appName) {
							initOAds(flags);
						}
					}).then(function () {
						if (flags && flags.get('krux')) {
							//Though krux is activated through nextAdsComponent, we also need to load all the additional user matching scripts
							//that would have been loaded via their tag manager
							krux.init(flags);
						}
					});
				}
			});
		}
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Superstore = __webpack_require__(215);
	var store = new Superstore('session', 'next-krux');
	var oAds = __webpack_require__(219);
	
	var addPixel = function addPixel(src) {
		var img = new Image();
		img.src = src;
	};
	
	// None of the Krux scripts need to run all the time since they are just matching users between various systems
	// In Supertag they were (mostly) set to cap at 3 times a day. So roughly equating that to 2 times a session.
	
	var frequencyCap = function frequencyCap(name, limit, fn) {
		var key = 'scriptExecCount_' + name;
		store.get(key).then(function (val) {
			val = val || 0;
			if (parseInt(val) < limit) {
				fn();
				store.set(key, ++val).catch(function () {});
			}
		}).catch(function () {});
	};
	
	exports.init = function (flags) {
	
		document.body.addEventListener('oAds.kruxScriptLoaded', function () {
			//If local/sessionStorage unavailable, don't run any of these scripts.
			if (typeof window.Krux === 'undefined' || !Superstore.isPersisting()) {
				return;
			}
	
			var kuid = oAds.krux.retrieve('kuid');
	
			if (kuid && typeof kuid !== 'undefined') {
	
				// Rubicon handles programmatic advertising. This matches up the user ID formats so Krux can send segment populations to them.
				if (flags.get('kruxRubiconIntegration')) {
					frequencyCap('rubicon', 2, function () {
						addPixel('https://tap.rubiconproject.com/oz/feeds/krux/tokens?afu=' + kuid);
					});
				}
	
				// DoubleClick handles display advertising. This matches up the user ID formats so Krux can send segment populations to them.
				if (flags.get('kruxGoogleIntegration')) {
					frequencyCap('doubleclick', 2, function () {
						addPixel('https://apiservices.krxd.net/um?partner=google&r=https://cm.g.doubleclick.net/pixel');
					});
				}
	
				// The following four scripts are user matching scripts for Kruxdata partners
				// They provide 3rd party data on user Demographic (eg:	Males),	Intent	(eg:	Children's	Apparel	Buyers)
				if (flags.get('kruxAcxiomIntegration')) {
					frequencyCap('acxiom', 2, function () {
						addPixel('https://idsync.rlcdn.com/379708.gif?partner=' + kuid);
					});
				}
	
				if (flags.get('kruxDataLogixIntegration')) {
					frequencyCap('DataLogix', 1, function () {
						var kurlParams = encodeURIComponent('_kuid=' + kuid + '&_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&dlxid=<na_id>&dlxdata=<na_da>');
						var kurl = 'https://beacon.krxd.net/data.gif?' + kurlParams;
						addPixel('https://r.nexac.com/e/getdata.xgi?dt=br&pkey=gpwn29rvapq62&ru=' + kurl);
					});
				}
	
				if (flags.get('kruxIXIIntegration')) {
					frequencyCap('ixidigital', 2, function () {
						addPixel('https://kr.ixiaa.com/C726AB29-0470-440B-B8D2-D552CED3A3DC/a.gif');
					});
				}
	
				if (flags.get('kruxExelateIntegration')) {
					frequencyCap('exelate', 2, function () {
						addPixel('https://loadm.exelator.com/load?_kdpid=e4942ff0-4070-4896-a7ef-e6a5a30ce9f9&buid=' + kuid + '&p=204&g=270&j=0');
					});
				}
			}
	
			//AdAdvisor is another Krux data partner with 3rd party data points
			if (flags.get('kruxAdAdvisorIntegration')) {
				frequencyCap('AdAdvisor-S2S', 2, function () {
					addPixel('https://adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e');
				});
			}
		});
	};

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(216);

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Superstore
	 *
	 * @author Matt Andrews <matthew.andrews@ft.com>
	 * @copyright The Financial Times [All Rights Reserved]
	 */
	var sync = __webpack_require__(217);
	
	var keys = {};
	var store = {};
	
	function Superstore(type, namespace) {
	  if (!namespace) {
	    throw "Namespace required";
	  }
	  this.store = sync[type];
	  this.namespace = "_ss." + namespace + ".";
	}
	
	Superstore.prototype.get = function (key) {
	  return new _promise2.default(function (resolve) {
	    resolve(this.store.get(this.namespace + key));
	  }.bind(this));
	};
	
	Superstore.prototype.set = function (key, value) {
	  return new _promise2.default(function (resolve) {
	    resolve(this.store.set(this.namespace + key, value));
	  }.bind(this));
	};
	
	Superstore.prototype.unset = function (key) {
	  return new _promise2.default(function (resolve) {
	    resolve(this.store.unset(this.namespace + key));
	  }.bind(this));
	};
	
	/**
	 * #clear(true) and #clear() clear cache and persistent layer, #clear(false) only clears cache
	 *
	 */
	Superstore.prototype.clear = function () {
	  return new _promise2.default(function (resolve) {
	    resolve(this.store.clear(this.namespace));
	  }.bind(this));
	};
	
	Superstore.isPersisting = sync.isPersisting;
	
	module.exports = Superstore;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(218);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Superstore synchronous library
	 *
	 * @author Matt Andrews <matthew.andrews@ft.com>
	 * @copyright The Financial Times [All Rights Reserved]
	 */
	
	var escapeRegex = function escapeRegex(str) {
	  return String(str).replace(/([.*+?=^!:${}()|[\]\/\\])/g, '\\$1');
	};
	
	var keys = {};
	var store = {};
	var persist = true;
	
	// Watch for changes from other tabs
	
	
	function Superstore(type) {
	  this.storage = window[type];
	  this.keys = {};
	  this.store = {};
	  // TODO: check the storageArea so that we only refresh the key when we need to
	  window.addEventListener("storage", function (e) {
	    if (this.keys[e.key]) {
	      this.keys[e.key] = true;
	      this.store[e.key] = JSON.parse(e.newValue);
	    }
	  }.bind(this));
	}
	
	/**
	 * get localstorage value for key falling back to in memory for iOS private browsing bug
	 * <http://stackoverflow.com/questions/9077101/iphone-localstorage-quota-exceeded-err-issue>
	 * @param {String} key
	 * @return {*} data for supplied key
	 *
	 */
	Superstore.prototype.get = function (key) {
	  if (arguments.length !== 1) {
	    throw Error("get expects 1 argument, " + arguments.length + " given; " + key);
	  }
	  if (!this.keys[key] && persist) {
	    var data;
	    try {
	      data = this.storage[key];
	    } catch (e) {
	      persist = false; // Safari 8 with Cookies set to 'Never' throws on every read
	    }
	
	    // Slightly weird hack because JSON.parse of an undefined value throws
	    // a weird exception "SyntaxError: Unexpected token u"
	    if (data) data = JSON.parse(data);
	    this.store[key] = data;
	    this.keys[key] = true;
	  }
	  return this.store[key];
	};
	
	/**
	 * set localstorage key,value falling back to in memory for iOS private browsing bug
	 * <http://stackoverflow.com/questions/9077101/iphone-localstorage-quota-exceeded-err-issue>
	 * @param {String} key
	 * @param {*} value which will be passed via JSON.stringify
	 * @return {*} value
	 *
	 */
	Superstore.prototype.set = function (key, value) {
	  if (arguments.length !== 2) {
	    throw Error("set expects 2 arguments, " + arguments.length + " given; " + key);
	  }
	  if (persist) {
	    try {
	      this.storage[key] = (0, _stringify2.default)(value);
	    } catch (err) {
	
	      // Known iOS Private Browsing Bug - fall back to non-persistent storage
	      if (err.code === 22) {
	        persist = false;
	      } else {
	        throw err;
	      }
	    }
	  }
	
	  this.store[key] = value;
	  this.keys[key] = true;
	  return value;
	};
	
	/**
	 * unset value in store for key
	 * @param {String} key
	 */
	Superstore.prototype.unset = function (key) {
	  delete this.store[key];
	  delete this.keys[key];
	  this.storage.removeItem(key);
	};
	
	/**
	 * clear localstorage
	 * @param clearPrefix will clear keys starting with `clearPrefix`
	 * #clear(true) and #clear() clear cache and persistent layer, #clear(false) only clears cache
	 *
	 */
	Superstore.prototype.clear = function (clearPrefix) {
	  if (!clearPrefix) {
	    if (persist) {
	      this.storage.clear();
	    }
	    this.store = {};
	    this.keys = {};
	    return;
	  }
	
	  clearPrefix = escapeRegex(clearPrefix);
	  var clearKeyRegex = new RegExp("^" + clearPrefix);
	  for (var key in this.keys) {
	    if (key.match(clearKeyRegex)) {
	      this.unset(key);
	    }
	  }
	};
	
	module.exports.isPersisting = function () {
	  return persist;
	};
	
	module.exports.local = new Superstore('localStorage');
	module.exports.session = new Superstore('sessionStorage');

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(220);

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function Ads() {
		addDOMEventListener();
	}
	
	// bung all our modules on the protoype
	Ads.prototype.config = __webpack_require__(221);
	Ads.prototype.slots = __webpack_require__(230);
	Ads.prototype.gpt = __webpack_require__(232);
	Ads.prototype.krux = __webpack_require__(234);
	Ads.prototype.rubicon = __webpack_require__(235);
	Ads.prototype.admantx = __webpack_require__(236);
	Ads.prototype.targeting = __webpack_require__(233);
	Ads.prototype.utils = __webpack_require__(222);
	
	/**
	* Initialises the ads library and all sub modules
	* @param config {object} a JSON object containing configuration for the current page
	*/
	
	Ads.prototype.init = function (options) {
		var _this = this;
	
		this.config.init();
		this.config(options);
		var targetingApi = this.config().targetingApi;
		if (targetingApi) {
			return _promise2.default.all([fetchData(targetingApi.user), fetchData(targetingApi.page)]).then(function (response) {
	
				for (var i = 0; i < response.length; i++) {
					var responseObj = response[i];
					var keys = ['user', 'page'];
					var kruxObj = {};
	
					if (responseObj.krux && responseObj.krux.attributes) {
						kruxObj[keys[i]] = _this.utils.buildObjectFromArray(responseObj.krux.attributes);
						_this.krux.add(kruxObj);
					}
	
					if (responseObj.dfp && responseObj.dfp.targeting) {
						_this.targeting.add(_this.utils.buildObjectFromArray(responseObj.dfp.targeting));
					}
	
					if (targetingApi.usePageZone && responseObj.dfp && responseObj.dfp.adUnit) {
						var gpt = _this.config('gpt');
						/* istanbul ignore else  */
						if (gpt && gpt.zone) {
							gpt.zone = responseObj.dfp.adUnit.join('/');
						}
					}
				}
				return _this.initLibrary();
			}).catch(this.initLibrary);
		} else {
			return _promise2.default.resolve(this.initLibrary());
		}
	};
	
	var fetchData = function fetchData(target) {
		if (!target) {
			return _promise2.default.resolve({});
		};
		return fetch(target, {
			timeout: 2000,
			// temporary solution for [next.]ft.com > IE9
			useCorsProxy: true
		}).then(function (res) {
			return res.json();
		}).catch(function () {});
	};
	
	Ads.prototype.initLibrary = function () {
		this.slots.init();
		this.gpt.init();
		this.krux.init();
		this.rubicon.init();
		this.admantx.init();
		this.utils.on('debug', this.debug.bind(this));
		this.isInitialised = true;
		this.utils.broadcast('initialised', this);
		removeDOMEventListener();
		return this;
	};
	
	var initAll = function initAll() {
		var metas = (0, _from2.default)(document.getElementsByTagName('meta'));
		var stop = metas.filter(function (meta) {
			return meta.name === 'o-ads-stop';
		});
		/* istanbul ignore else  */
		if (!stop.length) {
	
			ads.init().then(function () {
				var slots = (0, _from2.default)(document.querySelectorAll('.o-ads, [data-o-ads-name]'));
				slots.forEach(ads.slots.initSlot.bind(ads.slots));
			});
		}
	};
	
	Ads.prototype.debug = function () {
		var remove = true;
		if (localStorage.getItem('oAds')) {
			remove = false;
		} else {
			localStorage.setItem('oAds', true);
		}
		this.admantx.debug();
		this.gpt.debug();
		this.krux.debug();
		this.slots.debug();
		this.targeting.debug();
	
		if (remove) {
			localStorage.removeItem('oAds');
		}
	};
	
	function addDOMEventListener() {
		document.addEventListener('o.DOMContentLoaded', initAll);
	}
	function removeDOMEventListener() {
		document.removeEventListener('o.DOMContentLoaded', initAll);
	}
	
	var ads = new Ads();
	module.exports = ads;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//TODO remove all ft.com specific stuff so we can remove this as a global
	// currently all FT specific stuff is wrapped in an if window.FT
	
	/**
	 * @fileOverview
	 * Third party library for use with google publisher tags.
	 *
	 * @author Robin Marr, robin.marr@ft.com
	 */
	
	/**
	 * The FT.ads.config object holds the confiuration properties for an FT.ads.gpt instance.
	 * There are four tiers of configuration; cookie level config, default config (set within the constructor), metatag config and global (env) config.
	 * Global config, (set in the page FT.env ojbect) takes priority over meta followed by default config with cookie config having the least priority.
	 * The FT.ads.config() function acts as an accessor method for the config; allowing getting and setting of configuration values.
	 * Calling config() with no parameters returns the entire configuration object.
	 * Calling config passing a valid property key will envoke the 'getter' and return the value for that property key.
	 * Calling config passing a valid property key and a value will envoke the setter and set the value of the key to the new value.
	 * Calling config passing an object of keys and values will envoke a setter that extends the store with the object provided.
	 * @name config
	 * @memberof FT.ads
	 * @function
	*/
	var utils = __webpack_require__(222);
	/**
	* Default configuration set in the constructor.
	*/
	var defaults = {
		formats: {
			MediumRectangle: { sizes: [300, 250] },
			Rectangle: { sizes: [180, 50] },
			WideSkyscraper: { sizes: [160, 600] },
			Leaderboard: { sizes: [728, 90] },
			SuperLeaderboard: { sizes: [[970, 90], [970, 66]] },
			HalfPage: { sizes: [300, 600] },
			Billboard: { sizes: [970, 250] },
			Portrait: { sizes: [300, 1050] },
			AdhesionBanner: { sizes: [320, 50] },
			MicroBar: { sizes: [88, 31] },
			Button2: { sizes: [120, 60] },
			Responsive: { sizes: [2, 2] }
		},
		responsive: {
			extra: [1025, 0], //Reasonable width to show a Billboard (desktop)
			large: [1000, 0], //reasonable width to show SuperLeaderboard (tablet landscape)
			medium: [760, 0], //reasonable width to show a leaderboard (tablet portrait)
			small: [0, 0] //Mobile
		},
		flags: {
			refresh: true,
			inview: true
		}
	};
	
	/**
	* @private
	* @function
	* fetchMetaConfig pulls out metatag key value pairs into an object returns the object
	*/
	function fetchMetaConfig() {
		var results = {};
		var metas = (0, _from2.default)(document.getElementsByTagName('meta'));
		metas.forEach(function (meta) {
			if (meta.name) {
				if (meta.getAttribute('data-contenttype') === 'json') {
					results[meta.name] = window.JSON ? JSON.parse(meta.content) : 'UNSUPPORTED';
				} else {
					results[meta.name] = meta.content;
				}
			}
		});
	
		return results;
	}
	
	function fetchDeclaritiveConfig() {
		var results = {};
		var scripts = (0, _from2.default)(document.querySelectorAll('script[data-o-ads-config]'));
		scripts.forEach(function (script) {
			results = window.JSON ? utils.extend(results, JSON.parse(script.innerHTML)) : 'UNSUPPORTED';
		});
	
		return results;
	}
	
	/**
	* @private
	* @function
	* fetchCanonicalURL Grabs the canonical URL from the page meta if it exists.
	*/
	function fetchCanonicalURL() {
		var canonical = void 0;
		var canonicalTag = document.querySelector('link[rel="canonical"]');
		if (canonicalTag) {
			canonical = canonicalTag.href;
		}
	
		return { canonical: canonical };
	}
	
	/**
	* Defines a store for configuration information and returns a getter/setter method for access.
	* @class
	* @constructor
	*/
	function Config() {
		this.store = {};
	}
	
	Config.prototype.access = function (k, v) {
		var result = void 0;
		if (utils.isPlainObject(k)) {
			utils.extend(true, this.store, k);
			result = this.store;
		} else if (typeof v === 'undefined') {
			if (typeof k === 'undefined') {
				result = this.store;
			} else {
				result = this.store[k];
			}
		} else {
			this.store[k] = v;
			result = v;
		}
	
		return result;
	};
	
	Config.prototype.clear = function (key) {
		if (key) {
			delete this.store[key];
		} else {
			this.store = {};
		}
	};
	
	Config.prototype.init = function () {
		this.store = utils.extend(true, {}, defaults, fetchMetaConfig(), fetchCanonicalURL(), fetchDeclaritiveConfig());
		return this.store;
	};
	
	var config = new Config();
	module.exports = config.access.bind(config);
	module.exports.init = config.init.bind(config);
	module.exports.clear = config.clear.bind(config);

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Utility methods for the advertising library.
	 * @author Origami Advertising, origami.advertising@ft.com
	 * @module utils
	 */
	var hop = Object.prototype.hasOwnProperty;
	
	var utils = module.exports;
	/**
	 * Uses object prototype toString method to get at the type of object we are dealing,
	 * IE returns [object Object] for null and undefined so we need to filter those
	 * http://es5.github.com/#x15.2.4.2
	 * @private
	 * @param {object} Any javascript object
	 * @returns The type of the object e.g Array, String, Object
	 */
	function is(object) {
		var type = Object.prototype.toString.call(object).match(/^\[object\s(.*)\]$/)[1];
	
		if (object === null) {
			return "Null";
		} else if (object === undefined) {
			return "Undefined";
		} else {
			return type;
		}
	}
	
	/**
	 * Creates a method for testing the type of an Object
	 * @private
	 * @param {string} The name of the object type to be tested e.g. Array
	 * @returns a method that takes any javascript object and tests if it is of
	 * the supplied className
	 */
	function createIsTest(className) {
		return function (obj) {
			return is(obj) === className;
		};
	}
	
	/**
	 * Curries some useful is{ClassName} methods into the supplied Object
	 * @private
	 * @param {object} The object to add the methods too
	 * @param {array} A list of types to create methods for defaults to "Array", "Object", "String", "Function"
	 * @returns The object supplied in the first param with is{ClassName} Methods Added
	 */
	function curryIsMethods(obj, classNames) {
		classNames = classNames || ['Array', 'Object', 'String', 'Function', 'Storage'];
	
		while (!!classNames.length) {
			var className = classNames.pop();
			obj["is" + className] = createIsTest(className);
		}
	
		return obj;
	}
	
	/**
	 * Test if an object is the global window object
	 * @param {object} obj The object to be tested
	 * @returns {boolean} true if the object is the window obj, otherwise false
	 */
	module.exports.isWindow = function (obj) {
		return obj && obj !== null && obj === window;
	};
	
	/**
	 * Test if an object inherits from any other objects, used in extend
	 * to protect against deep copies running out of memory and constructors
	 * losing there prototypes when cloned
	 * @param {object} obj The object to be tested
	 * @returns {boolean} true if the object is plain false otherwise
	 */
	module.exports.isPlainObject = function (obj) {
		var hop = Object.prototype.hasOwnProperty;
	
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if (!obj || !utils.isObject(obj) || obj.nodeType || utils.isWindow(obj)) {
			return false;
		}
	
		try {
			// Not own constructor property must be Object
			if (obj.constructor && !hop.call(obj, 'constructor') && !hop.call(obj.constructor.prototype, 'isPrototypeOf')) {
				return false;
			}
		} catch (e) {
			/* istanbul ignore next  */
			// IE8,9 Will throw exceptions on certain host objects
			return false;
		}
	
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key = void 0;
		for (key in obj) {}
	
		return key === undefined || hop.call(obj, key);
	};
	
	/**
	 * Test if an object is a string with a length
	 * @param {object} str The object to be tested
	 * @returns {boolean} true if the object is a string with a length greater than 0
	 */
	module.exports.isNonEmptyString = function (str) {
		return utils.isString(str) && !!str.length;
	};
	
	module.exports.isElement = function (element) {
		return element && element.nodeType === 1 && element.tagName || false;
	};
	
	/**
	 * Test if an object is a finite number
	 * @param {object} The object to be tested
	 * @returns {boolean} true if the object is a finite number, can be a float or int but not NaN or Infinity
	 */
	module.exports.isNumeric = function (num) {
		return !isNaN(parseFloat(num)) && isFinite(num);
	};
	
	/**
	 * Merge or clone objects
	 * @function
	 * @param {boolean/object} deep/target If boolean specifies if this should be a deep copy or not, otherwise is the target object for the copy
	 * @param {object} target If deep copy is true will be the target object of the copy
	 * @param {object} objects All other params are objects to be merged into the target
	 * @returns {object} The target object extended with the other params
	 */
	module.exports.extend = extend;
	
	function extend() {
		/* jshint forin: false */
		/* when doing a deep copy we want to copy prototype properties */
		var options = void 0;
		var src = void 0;
		var copy = void 0;
		var copyIsArray = void 0;
		var clone = void 0;
		var target = arguments[0] || {};
		var length = arguments.length;
		var deep = false;
		var i = 1;
	
		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
	
			// skip the boolean and the target
			i = 2;
		}
	
		// Handle case when target is a string or something (possible in deep copy)
		/* istanbul ignore else  */
		if ((typeof target === "undefined" ? "undefined" : (0, _typeof3.default)(target)) !== "object" && !utils.isFunction(target)) {
			target = {};
		}
	
		// do nothing if only one argument is passed (or 2 for a deep copy)
		/* istanbul ignore else  */
		if (length === i) {
			return target;
		}
	
		for (; i < length; i++) {
			// Only deal with non-null/undefined values
			if ((options = arguments[i]) !== null) {
				// Extend the base object
				for (var name in options) {
					/* istanbul ignore next */
					if (!options.hasOwnProperty(name)) {
						return;
					}
					src = target[name];
					copy = options[name];
	
					// Prevent never-ending loop
					if (target === copy) {
						continue;
					}
	
					// Recurse if we're merging arrays
					if (deep && copy && (utils.isPlainObject(copy) || utils.isArray(copy))) {
						copyIsArray = utils.isArray(copy);
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && utils.isArray(src) ? src : [];
						} else {
							clone = src && utils.isObject(src) ? src : {};
						}
	
						// Never move original objects, clone them
						target[name] = extend(deep, clone, copy);
	
						// Don't bring in undefined values
					} else if (copy !== undefined) {
						target[name] = copy;
					}
				}
			}
		}
	
		// Return the modified object
		return target;
	}
	
	/**
	 * Create an object hash from a delimited string
	 * Beware all properties on the resulting object will have string values.
	 * @param {string}        str       The string to transform
	 * @param {string|regexp} delimiter The character that delimits each name/value pair
	 * @param {string}        pairing   The character that separates the name from the value
	 * @return {object}
	 *
	 */
	module.exports.hash = function (str, delimiter, pairing) {
		var pair = void 0;
		var value = void 0;
		var hash = {};
		if (str && str.split) {
			str = str.split(delimiter);
	
			for (var idx = 0, l = str.length; idx < l; idx += 1) {
				value = str[idx];
				pair = value.split(pairing);
				if (pair.length > 1) {
					hash[pair[0].trim()] = pair.slice(1).join(pairing);
				}
			}
		}
	
		return hash;
	};
	
	/**
	* Takes a script URL as a string value, creates a new script element, sets the src and attaches to the page
	* The async value of the script can be set by the seccond parameter, which is a boolean
	* Note, we should use protocol-relative URL paths to ensure we don't run into http/https issues
	* @param {string} scriptUrl The url to the script file to be added
	* @param {boolean} async Set the async attribute on the script tag
	* @param {function} callback A function to run when the script loads
	* @param {function} errorcb A function to run if the script fails to load
	* @returns {HTMLElement} the created script tag
	*/
	module.exports.attach = function (scriptUrl, async, callback, errorcb, autoRemove) {
		var tag = document.createElement('script');
		var node = document.getElementsByTagName('script')[0];
		var hasRun = false;
	
		function processCallback(callback) {
			/* istanbul ignore else  */
			if (!hasRun) {
				callback.call();
				hasRun = true;
				/* istanbul ignore else  */
				if (autoRemove) {
					tag.parentElement.removeChild(tag);
				}
			}
		}
	
		tag.setAttribute('src', scriptUrl);
		tag.setAttribute('o-ads', '');
		/* istanbul ignore else */
		if (async) {
			tag.async = 'true';
		}
		/* istanbul ignore else  */
		if (utils.isFunction(callback)) {
			/* istanbul ignore if - legacy IE code, won't test */
			if (hop.call(tag, 'onreadystatechange')) {
				tag.onreadystatechange = function () {
					if (tag.readyState === "loaded") {
						processCallback(callback);
					}
				};
			} else {
				tag.onload = function () {
					processCallback(callback);
				};
			}
		}
	
		/* istanbul ignore else  */
		if (utils.isFunction(errorcb)) {
			tag.onerror = function () {
				processCallback(errorcb);
			};
		}
		// Use insert before, append child has issues with script tags in some browsers.
		node.parentNode.insertBefore(tag, node);
		return tag;
	};
	
	/*
	* Test to see if a script file is already referenced from the dom
	* @param {string} url The URL to look for
	* @return {boolean} true if the file is already referenced else false
	*/
	module.exports.isScriptAlreadyLoaded = function (url) {
		var scripts = document.getElementsByTagName('script');
		for (var i = scripts.length; i--;) {
			if (scripts[i].src === url) return true;
		}
	
		return false;
	};
	
	/*
	* Make a cross domain XHR request
	* @param {string} The url to request
	* @param {string} THe method of the request (GET, POST).
	* @param {function} callback A function to run when the request succeeds
	* @param {function} A function to run if the request fails
	* @returns {HTMLElement} the created XHR object
	*/
	module.exports.createCORSRequest = function (url, method, callback, errorcb, timeout) {
		var xhr = new XMLHttpRequest();
		/* istanbul ignore else - legacy IE code, won't test */
		if ('withCredentials' in xhr) {
			xhr.open(method, url, true);
			xhr.responseType = 'json';
		} else if (typeof XDomainRequest !== "undefined") {
			xhr = new XDomainRequest();
			xhr.open(method, url, true);
		} else {
			xhr = null;
			errorcb();
		}
	
		/* istanbul ignore else */
		if (typeof timeout === "number") {
			xhr.timeout = timeout;
		}
	
		xhr.onload = function (xhrEvent) {
			callback.call(this, this.response || this.responseText, xhrEvent);
		};
	
		if (utils.isFunction(errorcb)) {
			xhr.onerror = errorcb;
			xhr.ontimeout = errorcb;
		}
	
		xhr.send();
		return xhr;
	};
	
	/**
	* return the current documents referrer or an empty string if non exists
	* This method enables us to mock the referrer in our tests reliably and doesn't really serve any other purpose
	* @returns {string} document.referrer
	*/
	/* istanbul ignore next - cannot reliably test value of referer */
	module.exports.getReferrer = function () {
		return document.referrer || '';
	};
	
	/**
	* Capitalise a string
	* @param {string} string the string to capitalise
	* @returns {string}
	*/
	module.exports.capitalise = function (string) {
		return string.replace(/(^[a-z])/, function (match, letter) {
			return letter.toUpperCase();
		});
	};
	
	/**
	* Remove hyphens from a string and upper case the following letter
	* @param {string} string the string to parse
	* @returns {string}
	*/
	module.exports.dehyphenise = function (string) {
		return string.replace(/(-)([a-z])/g, function (match, hyphen, letter) {
			return letter.toUpperCase();
		});
	};
	
	/**
	* Find uppercase characters in a string, lower case them and add a preceding hyphen
	* @param {string} string the string to parse
	* @returns {string}
	*/
	module.exports.hyphenise = function (string) {
		return string.replace(/([A-Z])/g, function (match, letter) {
			return "-" + letter.toLowerCase();
		});
	};
	
	/**
	* remove prefixes from o-ads data attributes and dehyphenise the name
	* @param {string|} name the name of the attribute to parse
	* @returns {string}
	*/
	module.exports.parseAttributeName = function (attribute) {
		var name = utils.isString(attribute) ? attribute : attribute.name;
		return utils.dehyphenise(name.replace(/(data-)?o-ads-/, ''));
	};
	
	/**
	* return the current documents url or an empty string if non exists
	* This method enables us to mock the document location string in our tests reliably and doesn't really serve any other purpose
	* @returns {string}
	*/
	/* istanbul ignore next - cannot reliably test value of location */
	module.exports.getLocation = function () {
		return document.location.href || '';
	};
	
	/**
	* return the current documents search or an empty string if non exists
	* also strips the initial ? from the search string for easier parsing
	* This method enables us to mock the search string in our tests reliably and doesn't really serve any other purpose
	* @returns {string}
	*/
	module.exports.getQueryString = function () {
		return document.location.search.substring(1) || '';
	};
	
	/**
	* returns a timestamp of the current date/time in the format YYYYMMDDHHMMSS
	* @returns {string}
	*/
	module.exports.getTimestamp = function () {
		var now = new Date();
		return [now.getFullYear(), ("0" + (now.getMonth() + 1)).slice(-2), ("0" + now.getDate()).slice(-2), ("0" + now.getHours()).slice(-2), ("0" + now.getMinutes()).slice(-2), ("0" + now.getSeconds()).slice(-2)].join("");
	};
	
	// capture all iframes in the page in a live node list
	var iframes = document.getElementsByTagName('iframe');
	
	/**
	* Given the window object of an iframe this method returns the o-ads slot name
	* that rendered the iframe, if the iframe was not rendered by o-ads this will
	* return false
	* @param {window}  a window object
	* @returns {String|Boolean}
	*/
	module.exports.iframeToSlotName = function (iframeWindow) {
		var slotName = void 0;
		var node = void 0;
		var i = iframes.length;
	
		// Figure out which iframe DOM node we have the window for
		while (i--) {
			/* istanbul ignore else  */
			if (iframes[i].contentWindow === iframeWindow) {
				node = iframes[i];
				break;
			}
		}
		/* istanbul ignore else  */
		if (node) {
			// find the closest parent with a data-o-ads-name attribute, that's our slot name
			while (node.parentNode) {
				slotName = node.getAttribute('data-o-ads-name');
				/* istanbul ignore else  */
				if (slotName) {
					return slotName;
				}
	
				node = node.parentNode;
			}
		}
	
		return false;
	};
	
	module.exports.buildObjectFromArray = function buildObjectFromArray(targetObject) {
		return targetObject.reduce(function (prev, data) {
			prev[data.key] = data.value;
			return prev;
		}, {});
	};
	
	extend(module.exports, __webpack_require__(223));
	extend(module.exports, __webpack_require__(224));
	extend(module.exports, __webpack_require__(225));
	module.exports.responsive = __webpack_require__(226);
	module.exports.timers = __webpack_require__(227)();
	module.exports.queue = __webpack_require__(228);
	module.exports.log = __webpack_require__(229);
	curryIsMethods(module.exports);

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Utility methods for reading.writing cookie. Inspired by the jQuery Cookie plugin (https://github.com/carhartl/jquery-cookie).
	 * @author Origami Advertising, origami.advertising@ft.com
	 * @module utils/cookie
	 * @see utils
	 */
	
	var utils = __webpack_require__(222);
	var pluses = /\+/g;
	var today = new Date();
	
	function raw(s) {
		return s;
	}
	
	function decoded(s) {
		return decodeURIComponent(s.replace(pluses, ' '));
	}
	
	/*
	*	Read or write a cookie
	* @exports utils/cookie
	* @param {string} key the name of the cookie to be read/written
	* @param {string} value The value to set to the written cookie (if param is missing the cookie will be read)
	* @param {object} options Expires,
	*/
	var config = module.exports.cookie = function (key, value, options) {
		// write
		if (value !== undefined) {
			options = utils.extend({}, config.defaults, options);
	
			if (value === null) {
				options.expires = -1;
			}
	
			if (typeof options.expires === 'number') {
				var days = options.expires;
				var t = options.expires = new Date();
				t.setDate(t.getDate() + days);
			}
	
			value = config.json ? (0, _stringify2.default)(value) : String(value);
			value = config.raw ? value : encodeURIComponent(value);
			if (!!options.expires && options.expires.valueOf() - today.valueOf() < 0) {
				delete utils.cookies[encodeURIComponent(key)];
			} else {
				utils.cookies[encodeURIComponent(key)] = value;
			}
	
			return document.cookie = [encodeURIComponent(key), '=', value, options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
			options.path ? '; path=' + options.path : '', options.domain ? '; domain=' + options.domain : '', options.secure ? '; secure' : ''].join('');
		}
	
		// read
		var decode = config.raw ? raw : decoded;
		var cookie = utils.cookies[encodeURIComponent(key)];
		if (!!cookie || cookie === '') {
			return config.json ? JSON.parse(decode(cookie)) : decode(cookie);
		}
	
		return null;
	};
	
	config.defaults = {};
	
	/*
	* Delete a cookie
	* @exports utils/cookie/removeCookie
	* @param {string} name The cookie's name
	* @param {object} options see options above
	*/
	module.exports.removeCookie = function (key, options) {
		if (module.exports.cookie(key) !== null) {
			module.exports.cookie(key, null, options);
			return true;
		}
	
		return false;
	};
	
	/*
	* Get the regex required to parse values from a cookie
	* @private
	* @param {string} name The cookie's name
	* @param {string} param The parameter's name
	* @return {string|undefined}
	*/
	function getRegExp(name, param) {
		var re = void 0;
	
		var formats = {
			"AYSC": "underscore",
			"FT_U": "underscoreEquals",
			"FT_Remember": "colonEquals",
			"FT_User": "colonEquals",
			"FTQA": "commaEquals"
		};
	
		switch (formats[name]) {
			case "underscore":
				re = '_' + param + '([^_]*)_';
				break;
			case "underscoreEquals":
				re = '_' + param + '=([^_]*)_';
				break;
			case "colonEquals":
				re = ':' + param + '=([^:]*)';
				break;
			case "commaEquals":
				re = param + '=([^,]*)';
				break;
			default:
				re = /((.|\n)*)/; // match everything
				break;
		}
		return new RegExp(re);
	}
	
	/*
	* Get a parameter from a named cookie
	* @exports utils/cookie/getCookieParam
	* @param {string} name The cookie's name
	* @param {string} param The parameter's name
	* @return {string|undefined}
	*/
	module.exports.getCookieParam = function (name, param) {
		var matches = void 0;
	
		var wholeValue = module.exports.cookie(name) || "";
		/* istanbul ignore else  */
		if (param) {
			matches = wholeValue.match(getRegExp(name, param));
		}
	
		return matches && matches.length ? matches[1] : undefined;
	};
	
	/*
	* Parse document.cookie into an object for easier reading
	* @name cookies
	* @member cookie
	*/
	module.exports.cookies = utils.hash(document.cookie, ';', '=');

/***/ },
/* 224 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Utility methods for o-ads events. Methods defined here are added to the utils object not the utils.event object.
	 * @author Origami Advertising, origami.advertising@ft.com
	 * @module utils/events
	 * @see utils
	 */
	
	/**
	* Broadscasts an o-ads event
	* @param {string} name The name of the cookie to be read/written
	* @param {object} data The value to set to the written cookie (if param is missing the cookie will be read)
	* @param {HTMLElement} target The element to attach the event listener to
	*/
	module.exports.broadcast = broadcast;
	function broadcast(name, data, target) {
		/* istanbul ignore next: ignore the final fallback as hard trigger */
		target = target || document.body || document.documentElement;
		name = "oAds." + name;
		var opts = {
			bubbles: true,
			cancelable: true,
			detail: data
		};
		target.dispatchEvent(new CustomEvent(name, opts));
	}
	
	/**
	* Sets an event listener for an oAds event
	* @param {string} name The name of the cookie to be read/written
	* @param {function} callback The value to set to the written cookie (if param is missing the cookie will be read)
	* @param {HTMLElement} target The element to attach the event listener to
	*/
	
	module.exports.on = on;
	function on(name, callback, target) {
		name = "oAds." + name;
		/* istanbul ignore next: ignore the final fallback as hard trigger */
		target = target || document.body || document.documentElement;
		target.addEventListener(name, callback);
	}
	
	/**
	* Sets a one time event listener for an oAds event
	* @param {string} name The name of the cookie to be read/written
	* @param {function} callback The value to set to the written cookie (if param is missing the cookie will be read)
	* @param {HTMLElement} target The element to attach the event listener to
	*/
	module.exports.once = once;
	function once(name, callback, target) {
		var handler = function handler(event) {
			/* istanbul ignore next: ignore the final fallback as hard trigger */
			var targ = event.target || event.srcElement;
			targ.removeEventListener(name = "oAds." + name, callback);
			if (callback) {
				callback(event);
	
				// we set callback to null so if for some reason the listener isn't removed the callback will still only be called once
				callback = null;
			}
		};
		on(name, handler, target);
	}

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Utility methods for postMessage api.
	 * @author Origami Advertising, origami.advertising@ft.com
	 * @module utils
	 */
	
	module.exports.messenger = {
		post: function post(message, source) {
			message = typeof message === 'string' ? message : (0, _stringify2.default)(message);
			source = arguments[1] || window.top;
			source.postMessage(message, '*');
		},
		parse: function parse(message) {
	
			// Check whether the message looks like an object before trying to parse it
			if (typeof message !== 'string' || message[0] !== '{') {
				return message;
			}
	
			// try returning the parsed object
			try {
				return JSON.parse(message);
			}
			// return the original message
			catch (e) {
				return message;
			}
		}
	};

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var callback = void 0;
	var breakpoints = void 0;
	var current = void 0;
	var utils = __webpack_require__(222);
	var oViewport = __webpack_require__(143);
	
	function getNearestBreakpoint() {
		var winner = void 0;
		var dims = oViewport.getSize(true);
		function findCurrentBreakpoint(breakpoint) {
			var breakpointDims = breakpoints[breakpoint];
			if (dims.width >= breakpointDims[0] && dims.height >= breakpointDims[1]) {
				if (!winner || breakpointDims[0] >= breakpoints[winner][0]) {
					winner = breakpoint;
				}
			}
		}
	
		(0, _keys2.default)(breakpoints).forEach(findCurrentBreakpoint);
	
		return winner;
	}
	
	function fire() {
		var winner = getNearestBreakpoint();
	
		if (current !== winner) {
			setCurrent(winner);
			callback(winner);
		}
	}
	
	function setCurrent(name) {
		current = name;
	}
	
	function getCurrent() {
		return current;
	}
	
	function init(brps, cb) {
	
		if (!utils.isFunction(cb)) {
			// must have a call back function
			return false;
		}
	
		breakpoints = brps;
		callback = cb;
	
		setCurrent(getNearestBreakpoint());
		document.body.addEventListener('oViewport.orientation', fire);
		document.body.addEventListener('oViewport.resize', fire);
		oViewport.listenTo('orientation');
		oViewport.listenTo('resize');
	
		return getCurrent();
	}
	
	module.exports = init;
	module.exports.getCurrent = getCurrent;
	module.exports.setThrottleInterval = oViewport.setThrottleInterval;

/***/ },
/* 227 */
/***/ function(module, exports) {

	'use strict';
	
	function now() {
		return new Date().valueOf();
	}
	
	function Timer(interval, fn, maxTicks, opts) {
		this.interval = (parseFloat(interval) || 1) * 1000;
		this.maxTicks = parseInt(maxTicks, 10) || 0;
		this.fn = fn;
		this.ticks = 0;
		this.opts = opts || {};
		this.start();
		return this;
	}
	
	Timer.prototype.tick = function () {
		var Timer = this;
		return function () {
			Timer.ticks++;
			Timer.fn.apply(Timer);
			Timer.lastTick = now();
	
			if (Timer.ticks === Timer.maxTicks) {
				Timer.stop();
			}
		};
	};
	
	Timer.prototype.start = function () {
		this.startTime = this.lastTick = now();
		this.id = setInterval(this.tick(), this.interval);
		return true;
	};
	
	Timer.prototype.resume = function () {
		if (this.timeLeft) {
			this.id = setInterval(this.tick(), this.timeLeft);
			delete this.timeLeft;
			return true;
		}
	
		return false;
	};
	
	Timer.prototype.pause = function () {
		if (this.id) {
			this.timeLeft = this.interval - (now() - this.lastTick);
			this.kill();
			return true;
		}
	
		return false;
	};
	
	Timer.prototype.reset = function () {
		if (!!this.startTime) {
			this.startTime = now();
			this.ticks = 1; // ticks are set to 1 because we're about to execute the first tick again
			return true;
		} else {
			return false;
		}
	};
	
	Timer.prototype.kill = function () {
		if (this.id) {
			clearInterval(this.id);
			delete this.id;
			return true;
		}
	
		return false;
	};
	
	Timer.prototype.stop = function () {
		if (this.id || this.timeLeft) {
			this.ticks = 0;
			this.kill();
			delete this.timeLeft;
			return true;
		}
	
		return false;
	};
	
	function Timers() {
		if (!(this instanceof Timers)) {
			return new Timers();
		}
	
		var scope = this;
		this.timers = [];
	
		function all(method) {
			return function () {
				var j = scope.timers.length;
	
				for (var i = 0; i < j; i++) {
					scope.timers[i][method]();
				}
			};
		}
	
		function hasExecutionPaused(fn) {
			return function () {
				var Timer = this;
				var time = now() - Timer.lastTick - Timer.interval;
				var threshold = Timer.interval * 1.5;
	
				if (threshold < time) {
					Timer.reset();
				}
	
				fn.apply(Timer);
			};
		}
	
		function create(interval, fn, maxTicks, opts) {
			if (opts && opts.reset) {
				fn = hasExecutionPaused(fn);
			}
	
			var timer = new Timer(interval, fn, maxTicks, opts);
			scope.timers.push(timer);
			return timer;
		}
	
		return {
			create: create,
			resumeall: all('resume'),
			pauseall: all('pause'),
			stopall: all('stop')
		};
	}
	
	module.exports = Timers;

/***/ },
/* 228 */
/***/ function(module, exports) {

	"use strict";
	
	function Queue(processor) {
		if (!(this instanceof Queue)) {
			return new Queue(processor);
		}
	
		this.items = [];
		this.processed = false;
		this.processor = processor || function () {};
	}
	
	Queue.prototype.setProcessor = function (processor) {
		this.processor = processor;
		return this;
	};
	
	Queue.prototype.process = function () {
		var _this = this;
	
		this.processed = true;
		this.items.forEach(function (item) {
			_this.processor(item);
		});
	
		return this;
	};
	
	Queue.prototype.add = function (item) {
		if (this.processed === true) {
			this.processor(item);
		} else {
			this.items.push(item);
		}
	
		return this;
	};
	
	module.exports = Queue;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Utility methods for logging.
	 * @author Origami Advertising, origami.advertising@ft.com
	 * @module utils/log
	 * @see utils
	 */
	
	/* jshint devel: true */
	
	module.exports = log;
	
	/**
	 * Safe logger for the browser
	 * @exports utils/log
	 * @param {string} type Sets the type of log message log, warn, error or info, if not set to one of these values log will be used
	 * @param {any} args the arguments to be passed to console[type]
	 */
	function log() {
		var type = void 0;
		var args = void 0;
		var argsIndex = void 0;
		if ('log warn error info'.indexOf(arguments[0]) === -1) {
			type = 'log';
			argsIndex = 0;
		} else {
			type = arguments[0];
			argsIndex = 1;
		}
	
		args = [].slice.call(arguments, argsIndex);
	
		if (log.isOn(type)) {
			window.console[type].apply(window.console, args);
		}
	}
	
	/**
	 * Determine if debug logging is on and if the type if supported
	 * @param {string} type
	 */
	module.exports.isOn = function (type) {
		/* istanbul ignore else  */
		var debug = localStorage.getItem('oAds') || location.search.indexOf('DEBUG=OADS') !== -1;
		return debug && window.console && window.console[type];
	};
	
	/**
	 * Log a warning message
	 */
	module.exports.warn = function () {
		var args = ['warn'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	/**
	 * Log an error message
	 */
	module.exports.error = function () {
		var args = ['error'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	/**
	 * Log an info message
	 */
	module.exports.info = function () {
		var args = ['info'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	/**
	 * Start a collapsed group
	 * @param {string} group the name of the group, defaults to o-ads
	 */
	module.exports.start = function (group) {
		if (!log.isOn('groupCollapsed')) {
			return;
		}
	
		window.console.groupCollapsed(group || 'o-ads');
	};
	
	/**
	 * End a collapsed group
	 */
	module.exports.end = function () {
		if (!log.isOn('groupEnd')) {
			return;
		}
	
		window.console.groupEnd();
	};
	
	module.exports.table = function (data, columns) {
		if (log.isOn('log') && window.console) {
			if (console.table) {
				console.table(data, columns);
			} else {
				console.log(data);
			}
		}
	};
	
	module.exports.attributeTable = function (object, columns) {
		var utils = __webpack_require__(222);
		if (log.isOn('log') && window.console) {
			if (object && console.table) {
				var data = (0, _keys2.default)(object).map(function (item) {
					var val = void 0;
					if (utils.isArray(object[item]) || utils.isObject(object[item])) {
						val = (0, _stringify2.default)(object[item]);
					} else {
						val = object[item];
					}
					return {
						key: item,
						value: val
					};
				});
				console.table(data, columns);
			} else {
				console.log(object);
			}
		}
	};

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var utils = __webpack_require__(222);
	var config = __webpack_require__(221);
	var Slot = __webpack_require__(231);
	
	var screensize = null;
	
	/**
	* The Slots instance tracks all ad slots on the page
	* configures global page events used by a slot and
	* provides utlity methods that act on all slots
	* @constructor
	*/
	function Slots() {}
	
	function invokeMethodOnSlots(names, method, callback) {
		var slots = [];
		names = names || (0, _keys2.default)(this);
	
		/* istanbul ignore else	*/
		if (utils.isNonEmptyString(names)) {
			slots.push(names);
		} else if (utils.isArray(names)) {
			slots = names;
		}
	
		slots.forEach(run.bind(null, this, method));
	
		if (utils.isFunction(callback)) {
			callback.call(this, slots);
		}
	
		return this;
	}
	
	/*
	* Either run a method or fire an event on the named slot.
	* @private
	* @param slots the slots object
	*/
	function run(slots, action, name) {
		var slot = slots[name];
		if (slot) {
			if (utils.isFunction(slot[action])) {
				slot[action]();
			} else {
				if (utils.isFunction(slot.fire)) {
					slot.fire(action);
				} else {
					utils.log.warn('Attempted to %s on a non-slot %s', action, name);
				}
			}
		} else {
			utils.log.warn('Attempted to %s non-existant slot %s', action, name);
		}
	}
	
	function findFormatBySize(size) {
		if (!size) {
			return false;
		}
		var formats = config('formats');
		for (var prop in formats) {
			/* istanbul ignore else	*/
			if (formats.hasOwnProperty(prop)) {
	
				var sizes = formats[prop].sizes;
				sizes = utils.isArray(sizes[0]) ? sizes : [sizes];
				var match = sizes.filter(function (s) {
					return s[0] === parseInt(size[0]) && s[1] === parseInt(size[1]);
				});
				if (match.length) {
					return prop;
				}
			}
		}
	}
	/**
	* Given a slot name or an array of slot names will collapse the slots using the collapse method on the slot
	*/
	Slots.prototype.collapse = function (names) {
		return invokeMethodOnSlots.call(this, names, 'collapse');
	};
	
	/**
	* Given a slot name or an array of slot names will uncollapse the slots using the uncollapse method on the slot
	*/
	Slots.prototype.uncollapse = function (names) {
		return invokeMethodOnSlots.call(this, names, 'uncollapse');
	};
	
	/**
	* Given a slot name or an array of slot names of slotnames will refresh the slots using the refresh method on the slot
	*/
	Slots.prototype.refresh = function (names) {
		return invokeMethodOnSlots.call(this, names, 'refresh');
	};
	
	/**
	* Given a slot name or an array of slot names will clear the slots using the clear method on the slot
	*/
	Slots.prototype.clear = function (names) {
		return invokeMethodOnSlots.call(this, names, 'clear');
	};
	
	/**
	* Given a slot name or an array of slot names will clear the slots using the clear method on the slot and remove the reference to the slot
	*/
	Slots.prototype.destroy = function (names) {
		return invokeMethodOnSlots.call(this, names, 'clear', function (names) {
			var _this = this;
	
			names.forEach(function (name) {
				_this[name] = null;
				delete _this[name];
			});
		});
	};
	
	/**
	* Given a slot name will submit a delayed impression for the slot
	*/
	Slots.prototype.submitImpression = function (name) {
		return invokeMethodOnSlots.call(this, name, 'submitImpression');
	};
	
	/**
	* Confirms a container in the page exists and creates a Slot object
	*/
	Slots.prototype.initSlot = function (container) {
		// if container is a string this is a legacy implementation using ids
		// find the element and remove the ID in favour of a data attribute
		if (utils.isString(container)) {
			container = document.getElementById(container) || document.querySelector('[data-o-ads-name="' + container + '"]');
			if (container && container.id) {
				container.setAttribute('data-o-ads-name', container.id);
				container.removeAttribute('id');
			}
		}
	
		// if not an element or we can't find it in the DOM exit
		if (!utils.isElement(container)) {
			utils.log.error('slot container must be an element!', container);
			return false;
		}
	
		// add the aria hidden attribute
		container.setAttribute('aria-hidden', 'true');
		// pass the method to retrieve or create the single IntersectionObserver instance
		var slot = new Slot(container, screensize, this.initLazyLoading.bind(this));
		/* istanbul ignore else	*/
		if (slot && !this[slot.name]) {
			this[slot.name] = slot;
			slot.fire('ready');
		} else if (this[slot.name]) {
			utils.log.error('slot %s is already defined!', slot.name);
		}
	
		return slot;
	};
	
	Slots.prototype.initRefresh = function () {
		if (config('flags').refresh && config('refresh')) {
			var data = config('refresh');
			/* istanbul ignore else	*/
			if (data.time && !data.inview) {
				this.timers.refresh = utils.timers.create(data.time, this.refresh.bind(this), data.max || 0);
			}
		}
	
		return this;
	};
	
	/*
	*	listens for the rendered event from a slot and fires the complete event,
	* after extending the slot with information from the server.
	*/
	Slots.prototype.initRendered = function () {
		utils.on('rendered', function (slots, event) {
			var slot = slots[event.detail.name];
			/* istanbul ignore else	*/
			if (slot) {
				utils.extend(slot[slot.server], event.detail[slot.server]);
				var size = event.detail.gpt.size;
				var format = findFormatBySize(size);
				slot.setFormatLoaded(format);
				slot.maximise(size);
				slot.fire('complete', event.detail);
			}
		}.bind(null, this));
		return this;
	};
	
	/*
	* if responsive configuration exists listen for breakpoint changes
	*/
	Slots.prototype.initResponsive = function () {
		var breakpoints = config('responsive');
		/* istanbul ignore else	*/
		if (utils.isObject(breakpoints)) {
			screensize = utils.responsive(breakpoints, onBreakpointChange.bind(null, this));
		}
	
		return this;
	};
	
	/*
	* called when a responsive breakpoint is crossed though window resizing or orientation change.
	*/
	function onBreakpointChange(slots, screensize) {
		slots.forEach(function (slot) {
			/* istanbul ignore else	*/
			if (slot) {
				// ADS-766 if format name is Responsive then we have requested a responsive creative and do not want to request new ads at different breakpoints
				/* istanbul ignore else	*/
				var isCurrentlyResponsive = slot.container && slot.container.getAttribute('data-o-ads-loaded') === 'Responsive';
				var stillWantsResponsive = slot.sizes[screensize] && slot.sizes[screensize].filter(function (size) {
					return findFormatBySize(size) === 'Responsive';
				}).length > 0;
	
				if (isCurrentlyResponsive && stillWantsResponsive) {
					return false;
				}
				slot.screensize = screensize;
				slot.fire('breakpoint', { screensize: screensize });
			}
		});
	}
	
	/*
	* Initialise the postMessage API
	*/
	Slots.prototype.initPostMessage = function () {
		// Listen for messages coming from ads
		window.addEventListener('message', pmHandler.bind(null, this), false);
	
		function pmHandler(slots, event) {
			var data = utils.messenger.parse(event.data);
			/* istanbul ignore else	don't process messages with a non oAds type*/
			if (data.type && (/^oAds\./.test(data.type) || /^touch/.test(data.type))) {
				var _ret = function () {
					var type = data.type.replace('oAds\.', '');
					var slot = data.name ? slots[data.name] : false;
					if (type === 'whoami' && event.source) {
	
						document.body.dispatchEvent(new CustomEvent('oAds.adIframeLoaded'));
	
						var messageToSend = { type: 'oAds.youare' };
						var slotName = utils.iframeToSlotName(event.source.window);
						slot = slots[slotName] || false;
	
						if (slot) {
							if (data.collapse) {
								slot.collapse();
							}
	
							if (data.mastercompanion) {
								(function () {
									var size = slot.gpt.size;
									var format = findFormatBySize(size);
									slots.forEach(function (s) {
										if (s.companion && s.name !== slot.name) {
											s.fire('masterLoaded', slot);
											s.container.setAttribute('data-o-ads-master-loaded', format);
										}
									});
								})();
							}
							if (data.customMessages && (0, _typeof3.default)(data.customMessages) === "object") {
								slot.fire('customMessages', data.customMessages);
							}
							if (slot.disableSwipeDefault) {
								messageToSend.disableDefaultSwipeHandler = true;
							}
	
							messageToSend.name = slotName;
							messageToSend.sizes = slot.sizes;
	
							utils.messenger.post(messageToSend, event.source);
						} else {
							utils.log.error('Message received from unidentified slot');
							utils.messenger.post(messageToSend, event.source);
						}
					} else {
						if (!slot) {
							utils.log.error('Message received from unidentified slot');
							return {
								v: void 0
							};
						}
	
						if (type === 'responsive') {
							slot.setResponsiveCreative(true);
						} else if (utils.isFunction(slot[type])) {
							slot[type]();
						} else if (/^touch/.test(data.type)) {
							slot.fire('touch', data);
						} else {
							delete data.type;
							delete data.name;
							slot.fire(type, data);
						}
					}
				}();
	
				if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
			}
		}
	};
	
	Slots.prototype.initLazyLoading = function (slotConfig) {
		var lazyLoadingConfig = config('lazyLoad') || slotConfig;
		// If we don't already have an instance of the observer, and it is enabled globally or on a slot (force), then create one.
		/* istanbul ignore else	*/
		if ('IntersectionObserver' in window && !this.lazyLoadObserver && !!lazyLoadingConfig) {
			var onChange = function onChange(changes) {
				var _this2 = this;
	
				//Execute the changes in the order they appear on the page. This is because the top slot often determines what the lower slots display.
				/* istanbul ignore next */
				changes.filter(function (a) {
					return a.intersectionRect.height || a.intersectionRect.width || a.intersectionRect.top || a.intersectionRect.left;
				}).sort(function (a, b) {
					return a.intersectionRect.top - b.intersectionRect.top;
				}).forEach(function (change) {
					var slotName = change.target.getAttribute('data-o-ads-name');
					/* istanbul ignore else */
					if (slotName) {
						invokeMethodOnSlots.call(_this2, slotName, 'render');
					}
				});
			};
			/* istanbul ignore else	*/
	
	
			var options = {};
	
			if ((typeof lazyLoadingConfig === 'undefined' ? 'undefined' : (0, _typeof3.default)(lazyLoadingConfig)) === 'object') {
				/* istanbul ignore else	*/
				if (lazyLoadingConfig.viewportMargin) {
					options.rootMargin = lazyLoadingConfig.viewportMargin;
				}
				/* istanbul ignore else	*/
				if (lazyLoadingConfig.threshold) {
					options.threshold = lazyLoadingConfig.threshold;
				}
			}
			this.lazyLoadObserver = new IntersectionObserver(onChange.bind(this), options);
		}
	
		return this.lazyLoadObserver;
	};
	
	Slots.prototype.forEach = function (fn) {
		var _this3 = this;
	
		(0, _keys2.default)(this).forEach(function (name) {
			var slot = _this3[name];
			/* istanbul ignore else	*/
			if (slot instanceof Slot) {
				fn.call(_this3, slot);
			}
		});
		return this;
	};
	
	/*
	* Initialise slots
	*/
	Slots.prototype.init = function () {
		this.initRefresh();
		this.initRendered();
		this.initResponsive();
		this.initPostMessage();
		this.initLazyLoading();
	};
	
	Slots.prototype.timers = {};
	
	Slots.prototype.debug = function () {
		var log = utils.log;
		var data = [];
	
		this.forEach(function (slot) {
			var row = {
				name: slot.name,
				'unit name': slot.gpt.unitName,
				'creative id': slot.gpt.creativeId || 'N/A',
				'line item id': slot.gpt.lineItemId || 'N/A',
				size: utils.isArray(slot.gpt.size) && slot.gpt.size.join('×') || slot.gpt.isEmpty && 'empty' || 'N/A',
				sizes: utils.isArray(slot.sizes) && slot.sizes.map(function (item) {
					return item.join('×');
				}).join(', ') || 'responsive slot',
				targeting: (0, _keys2.default)(slot.targeting).map(function (param) {
					return param + '=' + slot.targeting[param];
				}).join(', ')
			};
			data.push(row);
		});
	
		log.start('Creatives');
		log.table(data);
		log.end();
	};
	
	module.exports = new Slots();

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var utils = __webpack_require__(222);
	var config = __webpack_require__(221);
	
	var VALID_SIZE_STRINGS = ['fluid'];
	
	var attributeParsers = {
		sizes: function sizes(value, _sizes) {
			if (value === false || value === 'false') {
				return false;
			}
			/* istanbul ignore else  */
			else if (utils.isArray(_sizes)) {
					(function () {
						var regex = /(\d+)x(\d+)/;
						value.split(',').filter(function (size) {
							return size.length;
						}).forEach(function (size) {
							if (regex.test(size)) {
								size.replace(regex, function (match, width, height) {
									_sizes.push([parseInt(width, 10), parseInt(height, 10)]);
								});
							} else if (VALID_SIZE_STRINGS.indexOf(size) >= 0) {
								_sizes.push(size);
							}
						});
					})();
				}
			return _sizes;
		},
	
		formats: function formats(value, sizes) {
			if (value === false || value === 'false') {
				sizes = false;
			} else {
				(function () {
					var mapping = config().formats;
					var formats = utils.isArray(value) ? value : value.split(',');
					formats.forEach(function (format) {
						if (mapping && mapping[format]) {
							format = mapping[format];
							if (utils.isArray(format.sizes[0]) || VALID_SIZE_STRINGS.indexOf(format.sizes[0]) >= 0) {
								format.sizes.forEach(function (size) {
									sizes.push(size);
								});
							} else {
								sizes.push(format.sizes);
							}
						} else {
							utils.log.error('Slot configured with unknown format ' + format);
						}
					});
				})();
			}
	
			return sizes;
		},
	
		responsiveSizes: function responsiveSizes(name, value, sizes) {
			var screenName = name.replace(/^sizes/, '').toLowerCase();
			/* istanbul ignore else	*/
			if (!utils.isPlainObject(sizes)) {
				sizes = {};
			}
	
			sizes[screenName] = attributeParsers.sizes(value, sizes[screenName] || []);
			return sizes;
		},
	
		responsiveFormats: function responsiveFormats(name, value, sizes) {
			var screenName = name.replace(/^formats/, '').toLowerCase();
			/* istanbul ignore else	*/
			if (!utils.isPlainObject(sizes)) {
				sizes = {};
			}
	
			sizes[screenName] = attributeParsers.formats(value, []);
			return sizes;
		},
	
		lazyLoadThreshold: function lazyLoadThreshold(value) {
			return value.split(',').map(Number);
		},
	
		targeting: function targeting(value, _targeting) {
			value = utils.hash(value, ';', '=');
			utils.extend(_targeting, value);
			return _targeting;
		},
	
		base: function base(value) {
			/* istanbul ignore else	*/
			if (value === '' || value === 'true') {
				value = true;
			} else if (value === 'false') {
				value = false;
			}
	
			return value;
		}
	};
	
	var convertLazyLoadBooleanToObject = function convertLazyLoadBooleanToObject(obj) {
		if (obj.lazyLoad === true) {
			obj.lazyLoad = {};
		}
	};
	
	/**
	 * The Slot class.
	 * @class
	 * @constructor
	 */
	function Slot(container, screensize, initLazyLoading) {
		var _this = this;
	
		var slotConfig = config('slots') || {};
		var disableSwipeDefault = config('disableSwipeDefault') || false;
	
		// store the container
		this.container = container;
		// the current responsive screensize
	
		/* istanbul ignore else	*/
		if (screensize) {
			this.screensize = screensize;
		}
	
		// init slot dom structure
		this.outer = this.addContainer(container, {
			'class': 'o-ads__outer'
		});
		this.inner = this.addContainer(this.outer, {
			'class': 'o-ads__inner'
		});
	
		// make sure the slot has a name
		this.setName();
		this.setResponsiveCreative(false);
		slotConfig = slotConfig[this.name] || {};
	
		// default configuration properties
		this.server = 'gpt';
		this.defer = false;
	
		// global slots configuration
		this.targeting = slotConfig.targeting || {};
		this.sizes = slotConfig.sizes || [];
		this.center = slotConfig.center || false;
		this.label = slotConfig.label || false;
		this.outOfPage = slotConfig.outOfPage || false;
	
		this.disableSwipeDefault = slotConfig.disableSwipeDefault || disableSwipeDefault;
		this.companion = slotConfig.companion === false ? false : true;
		this.collapseEmpty = slotConfig.collapseEmpty;
		/* istanbul ignore else */
		if (utils.isArray(slotConfig.formats)) {
			attributeParsers.formats(slotConfig.formats, this.sizes);
		} else if (utils.isPlainObject(slotConfig.formats)) {
			this.sizes = {};
			(0, _keys2.default)(slotConfig.formats).forEach(function (screenName) {
				_this.sizes[screenName] = attributeParsers.formats(slotConfig.formats[screenName], []);
			});
		}
	
		if (typeof slotConfig.lazyLoad !== 'undefined') {
			this.lazyLoad = slotConfig.lazyLoad;
		} else {
			this.lazyLoad = config('lazyLoad') || false;
		}
	
		// extend with imperative configuration options
		this.parseAttributeConfig();
		/* istanbul ignore else	*/
		if (!this.sizes.length && !utils.isPlainObject(this.sizes)) {
			utils.log.error('slot %s has no configured sizes!', this.name);
			return false;
		}
	
		// Either retrieve the existing IntersectionObserver, or tell slots.js to create a new one.
		this.lazyLoadObserver = initLazyLoading(this.lazyLoad);
		this.initLazyLoad();
	
		this.centerContainer();
		this.labelContainer();
	
		this.initResponsive();
	}
	
	/**
	 * parse slot attribute config
	 */
	Slot.prototype.parseAttributeConfig = function () {
		var _this2 = this;
	
		(0, _from2.default)(this.container.attributes).forEach(function (attribute) {
			var name = utils.parseAttributeName(attribute.name);
			var value = attribute.value;
			if (name === 'formats') {
				_this2[name] = attributeParsers[name](value, _this2.sizes);
			} else if (name === 'lazyLoadThreshold' && _this2.lazyLoad) {
				convertLazyLoadBooleanToObject(_this2);
				_this2.lazyLoad.threshold = attributeParsers.lazyLoadThreshold(value);
			} else if (name === 'lazyLoadViewportMargin' && _this2.lazyLoad) {
				convertLazyLoadBooleanToObject(_this2);
				_this2.lazyLoad.viewportMargin = attributeParsers.base(value);
			} else if (attributeParsers[name]) {
				_this2[name] = attributeParsers[name](value, _this2[name]);
			} else if (/^formats\w*/.test(name)) {
				_this2.sizes = attributeParsers.responsiveFormats(name, value, _this2.sizes);
			} else if (/^sizes\w*/.test(name)) {
				_this2.sizes = attributeParsers.responsiveSizes(name, value, _this2.sizes);
			} else if (_this2.hasOwnProperty(name)) {
				_this2[name] = attributeParsers.base(value);
			}
		});
	};
	
	Slot.prototype.getAttributes = function () {
		var attributes = {};
		(0, _from2.default)(this.container.attributes).forEach(function (attribute) {
			attributes[utils.parseAttributeName(attribute)] = attribute.value;
		});
		this.attributes = attributes;
		return this;
	};
	
	/**
	 *	Load a slot when it appears in the viewport
	 */
	Slot.prototype.initLazyLoad = function () {
		var _this3 = this;
	
		/* istanbul ignore else  */
		if (this.lazyLoadObserver && this.lazyLoad) {
			this.defer = true;
			this.lazyLoadObserver.observe(this.container);
	
			//Master/Companion ads don't work with lazy loading, so if a master ad loads trigger
			/* istanbul ignore else */
			if (this.companion) {
				utils.once('masterLoaded', function () {
					if (_this3.hasValidSize()) {
						_this3.render();
					}
				}, this.container);
			}
		}
		return this;
	};
	
	Slot.prototype.render = function () {
		this.fire('render');
		/* istanbul ignore else  */
		if (this.lazyLoadObserver) {
			this.lazyLoadObserver.unobserve(this.container);
		}
	};
	
	/**
	 *	Listen to responsive breakpoints and collapse slots
	 * where the configured size is set to false
	 */
	Slot.prototype.initResponsive = function () {
		/* istanbul ignore else */
		if (utils.isPlainObject(this.sizes)) {
			/* istanbul ignore else */
			if (!this.hasValidSize()) {
				this.collapse();
			}
	
			utils.on('breakpoint', function (event) {
				var slot = event.detail.slot;
				slot.screensize = event.detail.screensize;
	
				if (slot.hasValidSize()) {
					slot.uncollapse();
				} else {
					slot.collapse();
					slot.clear();
				}
			}, this.container);
		}
	
		return this;
	};
	
	/**
	 * Maximise the slot when size is 100x100
	 */
	Slot.prototype.maximise = function (size) {
		if (size && +size[0] === 100 && +size[1] === 100) {
			this.fire('resize', {
				size: ['100%', '100%']
			});
		}
	};
	
	/**
	 *	If the slot doesn't have a name give it one
	 */
	Slot.prototype.setName = function () {
		this.name = this.container.getAttribute('data-o-ads-name') || this.container.getAttribute('o-ads-name');
		if (!this.name) {
			this.name = 'o-ads-slot-' + Math.floor(Math.random() * 10000);
			this.container.setAttribute('data-o-ads-name', this.name);
		}
		return this;
	};
	
	/**
	 *	If the slot doesn't have a name give it one
	 */
	Slot.prototype.setResponsiveCreative = function (value) {
		this.responsiveCreative = value;
		return this;
	};
	
	/**
	 * add the empty class to the slot
	 */
	Slot.prototype.collapse = function () {
		this.container.classList.add('o-ads--empty');
		this.setFormatLoaded(false);
		document.body.classList.add('o-ads-no-' + this.name);
		return this;
	};
	
	/**
	 * sets a classname of the format
	 */
	Slot.prototype.setFormatLoaded = function (format) {
		this.container.setAttribute('data-o-ads-loaded', format);
		return this;
	};
	
	/**
	 * remove the empty class from the slot
	 */
	Slot.prototype.uncollapse = function () {
		this.container.classList.remove('o-ads--empty');
		document.body.classList.remove('o-ads-no-' + this.name);
		return this;
	};
	
	/**
	 * call the ad server clear method on the slot if one exists
	 */
	Slot.prototype.clear = function () {
		/* istanbul ignore else  */
		if (utils.isFunction(this['clearSlot'])) {
			this.clearSlot();
		}
		return this;
	};
	
	/**
	 * call the ad server impression URL for an out of page slot if it has been configured correctly for delayed impressions
	 */
	Slot.prototype.submitImpression = function () {
		/* istanbul ignore else  */
		if (utils.isFunction(this['submitGptImpression'])) {
			this.submitGptImpression();
		}
		return this;
	};
	
	/**
	 *	fire an event on the slot
	 */
	Slot.prototype.fire = function (name, data) {
		var details = {
			name: this.name,
			slot: this
		};
	
		if (utils.isPlainObject(data)) {
			utils.extend(details, data);
		}
	
		utils.broadcast(name, details, this.container);
		return this;
	};
	
	/**
	 *	add a div tag into the current slot container
	 **/
	Slot.prototype.addContainer = function (node, attrs) {
		var container = '<div ';
		/* istanbul ignore else  */
		if (attrs) {
			(0, _keys2.default)(attrs).forEach(function (attr) {
				var value = attrs[attr];
				container += attr + '=' + value + ' ';
			});
		}
		container += '></div>';
		node.insertAdjacentHTML('beforeend', container);
		return node.lastChild;
	};
	
	Slot.prototype.hasValidSize = function (screensize) {
		screensize = screensize || this.screensize;
		if (screensize && utils.isPlainObject(this.sizes)) {
			return this.sizes[screensize] !== false;
		}
	
		return true;
	};
	
	/**
	 * Add a center class to the main container
	 */
	Slot.prototype.centerContainer = function () {
		if (this.center) {
			this.container.classList.add('o-ads--center');
		}
	
		return this;
	};
	
	/**
	 * Add a label class to the main container
	 */
	Slot.prototype.labelContainer = function () {
		var className = void 0;
		if (this.label === true || this.label === 'left') {
			className = 'label-left';
		} else if (this.label === 'right') {
			className = 'label-right';
		}
	
		if (className) {
			this.container.classList.add('o-ads--' + className);
		}
		return this;
	};
	
	module.exports = Slot;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*globals googletag: true */
	
	/**
	* @fileOverview
	* ad server modukes for o-ads implementing Google publisher tags ad requests.
	*
	* @author Robin Marr, robin.marr@ft.com
	*/
	
	var config = __webpack_require__(221);
	var utils = __webpack_require__(222);
	var targeting = __webpack_require__(233);
	var breakpoints = false;
	/*
	//###########################
	// Initialisation handlers ##
	//###########################
	*/
	
	/*
	* Initialise Google publisher tags functionality
	*/
	function init() {
		var gptConfig = config('gpt') || {};
		breakpoints = config('responsive');
		initGoogleTag();
		utils.on('ready', onReady.bind(null, slotMethods));
		utils.on('render', onRender);
		utils.on('refresh', onRefresh);
		utils.on('resize', onResize);
		googletag.cmd.push(setup.bind(null, gptConfig));
	}
	
	/*
	* initalise the googletag global namespace and add the google publish tags library to the page
	*/
	function initGoogleTag() {
		if (!window.googletag) {
			// set up a place holder for the gpt code downloaded from google
			window.googletag = {};
	
			// this is a command queue used by GPT any methods added to it will be
			// executed when GPT code is available, if GPT is already available they
			// will be executed immediately
			window.googletag.cmd = [];
		}
	
		utils.attach('//www.googletagservices.com/tag/js/gpt.js', true, null, function (err) {
			utils.broadcast('adServerLoadError', err);
		});
	}
	
	/*
	//#################################
	// Global configuration handlers ##
	//#################################
	*/
	
	/*
	* Configure the GPT library for the current page
	* this method is pushed onto the googletag command queue and run
	* when the library is available
	*/
	function setup(gptConfig) {
		googletag.pubads().addEventListener('slotRenderEnded', onRenderEnded);
		enableCompanions(gptConfig);
		setRenderingMode(gptConfig);
		setPageTargeting(targeting.get());
		setPageCollapseEmpty(gptConfig);
		googletag.enableServices();
		return true;
	}
	
	/*
	* set the gpt rendering mode to either sync or async
	* default is async
	*/
	
	function setRenderingMode(gptConfig) {
		var rendering = gptConfig.rendering;
		if (rendering === 'sync') {
			googletag.pubads().enableSyncRendering();
		} else if (rendering === 'sra') {
			googletag.pubads().enableSingleRequest();
		} else {
			googletag.pubads().enableAsyncRendering();
		}
	}
	
	/**
	* Adds page targeting to GPT ad calls
	* @name setPageTargeting
	* @memberof GPT
	* @lends GPT
	*/
	function setPageTargeting(targeting) {
	
		function setTargeting(key, value) {
			googletag.pubads().setTargeting(key, value);
		}
	
		if (utils.isPlainObject(targeting)) {
			(0, _keys2.default)(targeting).forEach(function (param) {
				googletag.cmd.push(setTargeting.bind(null, param, targeting[param]));
			});
		} else {
			utils.log.warn('invalid targeting object passed', targeting);
		}
	
		return targeting;
	}
	
	/**
	* Sets behaviour of empty slots can be 'after', 'before' or 'never'
	* * after collapse slots that return an empty ad
	* * before collapses all slots and only displays them on
	* true is synonymous with before
	* false is synonymous with never
	*/
	function setPageCollapseEmpty(gptConfig) {
		var mode = gptConfig.collapseEmpty;
	
		if (mode === 'before' || mode === true) {
			googletag.pubads().collapseEmptyDivs(true, true);
		} else if (mode === 'never' || mode === false) {
			googletag.pubads().collapseEmptyDivs(false);
		} else {
			//default is after
			googletag.pubads().collapseEmptyDivs(true);
		}
	}
	
	/**
	* When companions are enabled we delay the rendering of ad slots until
	* either a master is returned or all slots are returned without a master
	*/
	function enableCompanions(gptConfig) {
		if (gptConfig.companions) {
			googletag.pubads().disableInitialLoad();
			googletag.companionAds().setRefreshUnfilledSlots(true);
		}
	}
	
	/*
	//##################
	// Event handlers ##
	//##################
	*/
	
	/*
	* Event handler for when a slot is ready for an ad to rendered
	*/
	function onReady(slotMethods, event) {
		var slot = event.detail.slot;
		/* istanbul ignore else  */
		if (slot.server === 'gpt') {
			slot.gpt = {};
	
			// extend the slot with gpt methods
			utils.extend(slot, slotMethods);
	
			// setup the gpt configuration the ad
			googletag.cmd.push(function () {
				slot.defineSlot().addServices().setCollapseEmpty().setTargeting().setURL();
	
				if (!slot.defer && slot.hasValidSize()) {
					slot.display();
				}
			});
		}
	}
	/*
	* Render is called when a slot is not rendered when the ready event fires
	*/
	function onRender(event) {
		var slot = event.detail.slot;
		/* istanbul ignore else  */
		if (utils.isFunction(slot.display)) {
			slot.display();
		}
	}
	
	/*
	* refresh is called when a slot requests the ad be flipped
	*/
	function onRefresh(event) {
		window.googletag.cmd.push(function () {
			var targeting = event.detail.targeting;
			if (utils.isPlainObject(targeting)) {
				(0, _keys2.default)(targeting).forEach(function (name) {
					event.detail.slot.gpt.slot.setTargeting(name, targeting[name]);
				});
			}
			googletag.pubads().refresh([event.detail.slot.gpt.slot]);
		});
		return this;
	}
	
	function onResize(event) {
		var iframe = event.detail.slot.gpt.iframe;
		var size = event.detail.size;
		iframe.width = size[0];
		iframe.height = size[1];
	}
	
	/*
	* function passed to the gpt library that is run when an ad completes rendering
	*/
	function onRenderEnded(event) {
		var data = {
			gpt: {}
		};
	
		var gptSlotId = event.slot.getSlotId();
		var domId = gptSlotId.getDomId().split('-');
		var iframeId = 'google_ads_iframe_' + gptSlotId.getId();
		data.type = domId.pop();
		data.name = domId.join('-');
		var detail = data.gpt;
		detail.isEmpty = event.isEmpty;
		detail.size = event.size;
		detail.creativeId = event.creativeId;
		detail.lineItemId = event.lineItemId;
		detail.serviceName = event.serviceName;
		detail.iframe = document.getElementById(iframeId);
		utils.broadcast('rendered', data);
	}
	
	/*
	//################
	// Slot methods ##
	//################
	* Set of methods extended on to the slot constructor for GPT served slots
	*/
	var slotMethods = {
		/**
	 * define a GPT slot
	 */
		defineSlot: function defineSlot() {
			var _this = this;
	
			window.googletag.cmd.push(function () {
				_this.gpt.id = _this.name + '-gpt';
				_this.inner.setAttribute('id', _this.gpt.id);
				_this.setUnitName();
				if (!_this.outOfPage) {
					if (breakpoints && utils.isObject(_this.sizes)) {
						_this.initResponsive();
						_this.gpt.slot = googletag.defineSlot(_this.gpt.unitName, [], _this.gpt.id).defineSizeMapping(_this.gpt.sizes);
					} else {
						_this.gpt.slot = googletag.defineSlot(_this.gpt.unitName, _this.sizes, _this.gpt.id);
					}
				} else {
					_this.gpt.slot = googletag.defineOutOfPageSlot(_this.gpt.unitName, _this.gpt.id);
				}
			});
			return this;
		},
		clearSlot: function clearSlot(gptSlot) {
			if (window.googletag.pubadsReady && window.googletag.pubads) {
				gptSlot = gptSlot || this.gpt.slot;
				return googletag.pubads().clear([gptSlot]);
			} else {
				return false;
			}
		},
		initResponsive: function initResponsive() {
			var _this2 = this;
	
			window.googletag.cmd.push(function () {
				utils.on('breakpoint', function (event) {
					var slot = event.detail.slot;
					var screensize = event.detail.screensize;
	
					updatePageTargeting({ res: screensize });
	
					if (slot.hasValidSize(screensize) && !slot.responsiveCreative) {
						/* istanbul ignore else  */
						if (slot.gpt.iframe) {
							slot.fire('refresh');
						} else if (!_this2.defer) {
							slot.display();
						}
					}
				}, _this2.container);
	
				var mapping = googletag.sizeMapping();
				(0, _keys2.default)(breakpoints).forEach(function (breakpoint) {
					if (_this2.sizes[breakpoint]) {
						mapping.addSize(breakpoints[breakpoint], _this2.sizes[breakpoint]);
					}
				});
	
				_this2.gpt.sizes = mapping.build();
			});
			return this;
		},
		/*
	 *	Tell gpt to request an ad
	 */
		display: function display() {
			var _this3 = this;
	
			window.googletag.cmd.push(function () {
				googletag.display(_this3.gpt.id);
			});
			return this;
		},
		/**
	 * Set the DFP unit name for the slot.
	 */
		setUnitName: function setUnitName() {
			var _this4 = this;
	
			window.googletag.cmd.push(function () {
				var unitName = void 0;
				var gpt = config('gpt') || {};
				var attr = _this4.container.getAttribute('data-o-ads-gpt-unit-name');
	
				if (utils.isNonEmptyString(attr)) {
					unitName = attr;
				} else if (utils.isNonEmptyString(gpt.unitName)) {
					unitName = gpt.unitName;
				} else {
					var network = gpt.network;
					var site = gpt.site;
					var zone = gpt.zone;
					unitName = '/' + network;
					unitName += utils.isNonEmptyString(site) ? '/' + site : '';
					unitName += utils.isNonEmptyString(zone) ? '/' + zone : '';
				}
				_this4.gpt.unitName = unitName;
			});
			return this;
		},
		/**
	 * Add the slot to the pub ads service and add a companion service if configured
	 */
		addServices: function addServices(gptSlot) {
			var _this5 = this;
	
			window.googletag.cmd.push(function () {
				var gpt = config('gpt') || {};
				gptSlot = gptSlot || _this5.gpt.slot;
				gptSlot.addService(googletag.pubads());
				if (gpt.companions && _this5.companion !== false) {
					gptSlot.addService(googletag.companionAds());
				}
			});
			return this;
		},
	
		/**
	 * Sets the GPT collapse empty mode for a given slot
	 * values can be 'after', 'before', 'never'
	 * after as in after ads have rendered is the default
	 * true is synonymous with before
	 * false is synonymous with never
	 */
		setCollapseEmpty: function setCollapseEmpty() {
			var _this6 = this;
	
			window.googletag.cmd.push(function () {
				var mode = _this6.collapseEmpty || config('collapseEmpty');
	
				if (mode === true || mode === 'after') {
					_this6.gpt.slot.setCollapseEmptyDiv(true);
				} else if (mode === 'before') {
					_this6.gpt.slot.setCollapseEmptyDiv(true, true);
				} else if (mode === false || mode === 'never') {
					_this6.gpt.slot.setCollapseEmptyDiv(false);
				}
			});
			return this;
		},
		submitGptImpression: function submitGptImpression() {
			if (this.outOfPage && this.gpt.iframe) {
				var getImpressionURL = function getImpressionURL(iframe) {
					var trackingUrlElement = iframe.contentWindow.document.querySelector('[data-o-ads-impression-url]');
					if (trackingUrlElement) {
						return trackingUrlElement.dataset.oAdsImpressionUrl;
					} else {
						utils.log.warn('Impression URL not found, this is set via a creative template.');
						return false;
					}
				};
	
				;
				var impressionURL = getImpressionURL(this.gpt.iframe);
				/* istanbul ignore else  */
				if (impressionURL) {
					utils.attach(impressionURL, true, function () {
						utils.log.info('Impression Url requested');
					}, function () {
						utils.log.info('CORS request to submit an impression failed');
					}, true);
				}
			} else {
				utils.log.warn('Attempting to call submitImpression on a non-oop slot');
			}
		},
		/**
	 * Sets page url to be sent to google
	 * prevents later url changes via javascript from breaking the ads
	 */
		setURL: function setURL(gptSlot) {
			var _this7 = this;
	
			window.googletag.cmd.push(function () {
				gptSlot = gptSlot || _this7.gpt.slot;
				var canonical = config('canonical');
				gptSlot.set('page_url', canonical ? canonical : utils.getLocation());
			});
			return this;
		},
	
		/**
	 * Adds key values from a given object to the slot targeting
	 */
		setTargeting: function setTargeting(gptSlot) {
			var _this8 = this;
	
			window.googletag.cmd.push(function () {
				gptSlot = gptSlot || _this8.gpt.slot;
				/* istanbul ignore else  */
				if (utils.isPlainObject(_this8.targeting)) {
					(0, _keys2.default)(_this8.targeting).forEach(function (param) {
						gptSlot.setTargeting(param, _this8.targeting[param]);
					});
				}
			});
			return this;
		}
	};
	
	/*
	//####################
	// External methods ##
	//####################
	*/
	
	/**
	* The correlator is a random number added to ad calls.
	* It is used by the ad server to determine which impressions where served to the same page
	* Updating is used to tell the ad server to treat subsequent ad calls as being on a new page
	*/
	function updateCorrelator() {
		googletag.cmd.push(function () {
			googletag.pubads().updateCorrelator();
		});
	}
	
	function updatePageTargeting(override) {
		if (window.googletag) {
			var params = utils.isPlainObject(override) ? override : targeting.get();
			setPageTargeting(params);
		} else {
			utils.log.warn('Attempting to set page targeting before the GPT library has initialized');
		}
	}
	
	module.exports.init = init;
	module.exports.updateCorrelator = updateCorrelator;
	module.exports.updatePageTargeting = updatePageTargeting;
	
	module.exports.debug = function () {
		var log = utils.log;
		var conf = config('gpt');
		if (!conf) {
			return;
		}
	
		log.start('gpt');
		log.attributeTable(conf);
		log.end();
	};

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var config = __webpack_require__(221);
	var utils = __webpack_require__(222);
	var parameters = {};
	
	function Targeting() {}
	
	Targeting.prototype.get = function () {
		var methods = {
			socialReferrer: this.getSocialReferrer,
			pageReferrer: this.getPageReferrer,
			timestamp: this.timestamp,
			responsive: this.responsive
		};
	
		utils.extend(parameters, this.getFromConfig(), this.searchTerm());
	
		for (var item in methods) {
			/* istanbul ignore else  */
			if (methods.hasOwnProperty(item)) {
				utils.extend(parameters, methods[item]());
			}
		}
	
		return parameters;
	};
	
	Targeting.prototype.add = function (obj) {
		/* istanbul ignore else  */
		if (utils.isPlainObject(obj)) {
			utils.extend(parameters, obj);
		}
	};
	
	Targeting.prototype.clear = function () {
		parameters = {};
	};
	
	/**
	* getFromConfig returns an object containing all the key values pairs specified in the dfp_targeting
	* config.
	*/
	Targeting.prototype.getFromConfig = function () {
		var targeting = config('dfp_targeting') || {};
		if (!utils.isPlainObject(targeting)) {
			/* istanbul ignore else  */
			if (utils.isString(targeting)) {
				targeting = utils.hash(targeting, ';', '=');
			}
		}
	
		return targeting;
	};
	
	Targeting.prototype.getPageReferrer = function () {
		var hostRegex = void 0;
		var match = null;
		var referrer = utils.getReferrer();
	
		//referrer is not article
		if (referrer !== '') {
			hostRegex = /^.*?:\/\/.*?(\/.*)$/;
	
			//remove hostname from results
			match = hostRegex.exec(referrer)[1];
			/* istanbul ignore else  */
			if (match !== null) {
				match.substring(1);
			}
		}
	
		return match && { rf: match.substring(1) } || {};
	};
	
	Targeting.prototype.getSocialReferrer = function () {
		var codedValue = void 0;
		var refUrl = void 0;
		var referrer = utils.getReferrer();
		var refererRegexTemplate = '^http(|s)://(www.)*(SUBSTITUTION)/|_i_referer=http(|s)(:|%3A)(\/|%2F){2}(www.)*(SUBSTITUTION)(\/|%2F)';
		var lookup = {
			't.co': 'twi',
			'facebook.com': 'fac',
			'linkedin.com': 'lin',
			'drudgereport.com': 'dru'
		};
	
		/* istanbul ignore else  */
		if (utils.isString(referrer)) {
			for (refUrl in lookup) {
				/* istanbul ignore else  */
				if (lookup.hasOwnProperty(refUrl)) {
					var refererRegex = new RegExp(refererRegexTemplate.replace(/SUBSTITUTION/g, refUrl));
					/* istanbul ignore else  */
					if (refUrl !== undefined && refererRegex.test(referrer)) {
						codedValue = lookup[refUrl];
						break;
					}
				}
			}
		}
	
		return codedValue && { socref: codedValue } || {};
	};
	
	Targeting.prototype.searchTerm = function () {
		var qs = utils.hash(utils.getQueryString(), /\&|\;/, '=');
		var keywords = qs.q || qs.s || qs.query || qs.queryText || qs.searchField || undefined;
	
		/* istanbul ignore else	*/
		if (keywords && keywords !== '') {
			keywords = unescape(keywords).toLowerCase().replace(/[';\^\+]/g, ' ').replace(/\s+/g, ' ').trim();
		}
	
		return { kw: keywords };
	};
	
	Targeting.prototype.timestamp = function () {
		return { ts: utils.getTimestamp() };
	};
	
	Targeting.prototype.responsive = function () {
		return config('responsive') ? { res: utils.responsive.getCurrent() } : {};
	};
	
	Targeting.prototype.debug = function () {
		var log = utils.log;
		var parameters = this.get();
		/* istanbul ignore else  */
		if ((0, _keys2.default)(parameters).length !== 0) {
			log.start('Targeting');
			log.attributeTable(this.get());
			log.end();
		}
	};
	
	module.exports = new Targeting();

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var utils = __webpack_require__(222);
	var config = __webpack_require__(221);
	var Delegate = __webpack_require__(141);
	var targeting = __webpack_require__(233);
	
	/**
	 * The Krux class defines an FT.ads.krux instance
	 * @class
	 * @constructor
	*/
	function Krux() {
		this.customAttributes = {};
	}
	
	Krux.prototype.add = function (target) {
		utils.extend(true, this.customAttributes, target);
	};
	
	Krux.prototype.init = function () {
		var _this = this;
	
		this.config = config('krux');
		if (this.config && this.config.id) {
			(function () {
	
				/* istanbul ignore else  */
				if (!window.Krux) {
					(window.Krux = function () {
						window.Krux.q.push(arguments);
					}).q = [];
				}
	
				_this.api = window.Krux;
				/* istanbul ignore else  */
				if (_this.config.attributes) {
					_this.add(_this.config.attributes);
					_this.setAttributes('page_attr_', _this.customAttributes.page || {});
					_this.setAttributes('user_attr_', _this.customAttributes.user || {});
					_this.setAttributes('', _this.customAttributes.custom || {});
				}
	
				var src = void 0;
				var m = utils.getLocation().match(/\bkxsrc=([^&]+)/);
				if (m) {
					src = decodeURIComponent(m[1]);
				}
	
				var finalSrc = /^https?:\/\/([^\/]+\.)?krxd\.net(:\d{1,5})?\//i.test(src) ? src : src === "disable" ? "" : '//cdn.krxd.net/controltag/' + _this.config.id + '.js';
	
				var loadKruxScript = function loadKruxScript() {
					utils.attach(finalSrc, true, function () {
						utils.broadcast('kruxScriptLoaded');
					});
					_this.events.init();
				};
				setTimeout(function () {
					if ('requestIdleCallback' in window) {
						requestIdleCallback(loadKruxScript);
					} else {
						loadKruxScript();
					}
				}, 1000);
	
				targeting.add(_this.targeting());
			})();
		} else {
			// can't initialize Krux because no Krux ID is configured, please add it as key id in krux config.
		}
	};
	
	/**
	* retrieve Krux values from localstorage or cookies in older browsers.
	* @name retrieve
	* @memberof Krux
	* @lends Krux
	*/
	Krux.prototype.retrieve = function (name) {
		var value = void 0;
		name = 'kx' + name;
		/* istanbul ignore else  */
		if (window.localStorage && localStorage.getItem(name)) {
			value = localStorage.getItem(name);
		} else if (utils.cookie(name)) {
			value = utils.cookie(name);
		}
	
		return value;
	};
	
	/**
	* retrieve Krux segments
	* @name segments
	* @memberof Krux
	* @lends Krux
	*/
	Krux.prototype.segments = function () {
		return this.retrieve('segs');
	};
	
	/**
	* Retrieve all Krux values used in targeting and return them in an object
	* Also limit the number of segments going into the ad calls via krux.limit config
	* @name targeting
	* @memberof Krux
	* @lends Krux
	*/
	Krux.prototype.targeting = function () {
		var segs = this.segments();
		/* istanbul ignore else  */
		if (segs) {
			segs = segs.split(',');
			/* istanbul ignore else  */
			if (config('krux').limit) {
				segs = segs.slice(0, config('krux').limit);
			}
		}
	
		return {
			"kuid": this.retrieve('user'),
			"ksg": segs,
			"khost": encodeURIComponent(location.hostname),
			"bht": segs && segs.length > 0 ? 'true' : 'false'
		};
	};
	
	/**
	* An object holding methods used by krux event pixels
	* @name events
	* @memberof Krux
	* @lends Krux
	*/
	Krux.prototype.events = {
		dwell_time: function dwell_time(config) {
			var _this2 = this;
	
			/* istanbul ignore else  */
			if (config) {
				(function () {
					var fire = _this2.fire;
					var interval = config.interval || 5;
					var max = config.total / interval || 120;
					var uid = config.id;
					utils.timers.create(interval, function () {
						return function () {
							fire(uid, { dwell_time: this.interval * this.ticks / 1000 });
						};
					}(), max, { reset: true });
				})();
			}
		},
		delegated: function delegated(config) {
			var _this3 = this;
	
			/* istanbul ignore else  */
			if (window.addEventListener) {
				/* istanbul ignore else  */
				if (config) {
					(function () {
						var fire = _this3.fire;
						var eventScope = function eventScope(kEvnt) {
							return function () {
								fire(config[kEvnt].id);
							};
						};
	
						window.addEventListener('load', function () {
							var delEvnt = new Delegate(document.body);
							for (var kEvnt in config) {
								/* istanbul ignore else  */
								if (config.hasOwnProperty(kEvnt)) {
									delEvnt.on(config[kEvnt].eType, config[kEvnt].selector, eventScope(kEvnt));
								}
							}
						}, false);
					})();
				}
			}
		}
	};
	
	Krux.prototype.events.fire = function (id, attrs) {
		/* istanbul ignore else  */
		if (id) {
			attrs = utils.isPlainObject(attrs) ? attrs : {};
			return window.Krux('admEvent', id, attrs); // eslint-disable-line new-cap
		}
	
		return false;
	};
	
	Krux.prototype.events.init = function () {
		var event = void 0;
		var configured = config('krux') && config('krux').events;
		/* istanbul ignore else  */
		if (utils.isPlainObject(configured)) {
			for (event in configured) {
				/* istanbul ignore else  */
				if (utils.isFunction(this[event])) {
					this[event](configured[event]);
				} else if (utils.isFunction(configured[event].fn)) {
					configured[event].fn(configured[event]);
				}
			}
		}
	};
	
	Krux.prototype.setAttributes = function (prefix, attributes) {
		var _this4 = this;
	
		/* istanbul ignore else  */
		if (attributes) {
			(0, _keys2.default)(attributes).forEach(function (item) {
				_this4.api('set', prefix + item, attributes[item]);
			});
		}
	};
	
	Krux.prototype.debug = function () {
		var log = utils.log;
		if (!this.config) {
			return;
		}
		log.start('Krux©');
		log('%c id:', 'font-weight: bold', this.config.id);
	
		if (this.config.limit) {
			log('%c segment limit:', 'font-weight: bold', this.config.limit);
		}
	
		if (this.config.attributes) {
			var attributes = this.config.attributes;
			log.start('Attributes');
			log.start('Page');
			log.attributeTable(attributes.page);
			log.end();
	
			log.start('User');
			log.attributeTable(attributes.user);
			log.end();
	
			log.start('Custom');
			log.attributeTable(attributes.custom);
			log.end();
			log.end();
		}
		if (this.config.events) {
			var events = this.config.events;
			log.start('Events');
			if (events.dwell_time) {
				log.start('Dwell Time');
				log('%c interval:', 'font-weight: bold', events.dwell_time.interval);
				log('%c id:', 'font-weight: bold', events.dwell_time.id);
				log('%c total:', 'font-weight: bold', events.dwell_time.total);
				log.end();
			}
			log.start('Delegated');
			log.table(events.delegated);
			log.end();
			log.end();
		}
	
		var targeting = this.targeting();
		log.start('Targeting');
		log.attributeTable(targeting);
		log.end();
	
		var tags = (0, _from2.default)(document.querySelectorAll(".kxinvisible"));
		if (tags.length) {
			log.start(tags.length + ' Supertag© scripts');
			tags.forEach(function (tag) {
				log(tag.dataset.alias, tag.querySelector("script"));
			});
			log.end();
		}
		log.end();
	};
	
	module.exports = new Krux();

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * @fileOverview
	 * Third party library for use with google publisher tags.
	 *
	 * @author Robin Marr, robin.marr@com
	 */
	/**
	 * ads.rubicon provides rubicon real time pricing integration for the FT advertising library
	 * @name targeting
	 * @memberof ads
	*/
	var utils = __webpack_require__(222);
	var config = __webpack_require__(221);
	
	function Rubicon() {}
	
	Rubicon.prototype.init = function () {
		var _this = this;
	
		this.queue = utils.queue(this.initValuation.bind(this));
		this.config = config('rubicon') || {};
		if (this.config.id && this.config.site) {
			var api = this.config.api || '//tap-cdn.rubiconproject.com/partner/scripts/rubicon/dorothy.js?pc=';
			api += this.config.id + '/' + this.config.site;
			utils.attach(api, true, function () {
				_this.queue.process();
			}, function () {
				_this.queue.setProcessor(function (slot) {
					utils.log.error('%s rtp valuation call failed', slot.name);
				}).process();
			});
	
			utils.on('ready', function (event) {
				_this.queue.add(event.detail.slot);
			});
		}
	};
	
	/**
	 * initialise rubicon valuation for a slot
	 * @name initValuation
	 * @memberof Rubicon
	 * @lends Rubicon
	*/
	Rubicon.prototype.initValuation = function (slot) {
		var config = this.config;
		var zone = config.zones ? config.zones[slot.name] : false;
		var size = config.formats ? config.formats[slot.name] : false;
	
		if (zone && size) {
			// rubicon loves globals
			window.oz_api = 'valuation';
			window.oz_callback = this.valuationCallbackFactory.bind(null, slot, config.target);
			window.oz_ad_server = 'gpt';
			window.oz_async = true;
			window.oz_cached_only = config.cached || true;
			window.oz_site = config.id + '/' + config.site;
			window.oz_ad_slot_size = size;
			window.oz_zone = zone;
			window.oz_insight();
		}
	};
	
	/**
	 * Valuation request callback factory
	 * This generates the callback that receives the data from a valution request, it keeps the slotname in a closure.
	 * @name init
	 * @memberof Rubicon
	 * @lends Rubicon
	*/
	Rubicon.prototype.valuationCallbackFactory = function (slot, target, results) {
		slot.container.setAttribute('data-o-ads-rtp', results.estimate.tier);
		if (target) {
			slot.targeting.rtp = results.estimate.tier;
		}
	};
	
	module.exports = new Rubicon();

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var utils = __webpack_require__(222);
	var config = __webpack_require__(221);
	var targeting = __webpack_require__(233);
	
	function Admantx() {}
	
	Admantx.prototype.init = function () {
		this.config = config('admantx') || {};
		if (this.config.id) {
			this.collections = this.config.collections || { admants: true };
			this.api = this.config.url || 'http://usasync01.admantx.com/admantx/service?request=';
			this.makeAPIRequest();
		}
	};
	
	Admantx.prototype.makeAPIRequest = function () {
		var requestData = {
			"key": this.config.id,
			"method": "descriptor",
			"mode": "async",
			"decorator": "template.ft",
			"filter": ["default"],
			"type": "URL",
			"body": encodeURIComponent(utils.getLocation())
		};
		var url = this.api + encodeURIComponent((0, _stringify2.default)(requestData));
		this.xhr = utils.createCORSRequest(url, 'GET', this.resolve.bind(this), this.resolve.bind(this));
	};
	
	Admantx.prototype.processCollection = function (collection, max) {
		var names = [];
		var j = utils.isNumeric(max) ? Math.min(max, collection.length) : collection.length;
		for (var i = 0; i < j; i++) {
			names.push(collection[i].name || collection[i]);
		}
	
		return names;
	};
	
	Admantx.prototype.resolve = function (response) {
		var collections = this.collections;
		var targetingObj = {};
		var collection = void 0;
		var shortName = void 0;
		/* istanbul ignore else  */
		if (utils.isString(response)) {
			try {
				response = JSON.parse(response);
			} catch (e) {
				/* istanbul ignore next  */
				// if the response is not valid JSON;
				response = false;
			}
		}
	
		//parse required targetting data from the response
		/* istanbul ignore else  */
		if (response) {
			for (collection in collections) {
				/* istanbul ignore else  */
				if (collections.hasOwnProperty(collection) && collections[collection] && response[collection]) {
					shortName = collection.substr(0, 2);
					targetingObj[shortName] = this.processCollection(response[collection], collections[collection]);
				}
			}
	
			targeting.add(targetingObj);
		}
	};
	
	Admantx.prototype.debug = function () {
		var log = utils.log;
	
		if (!this.config) {
			return;
		}
	
		log.start('Admantx');
		log('%c id:', 'font-weight: bold', this.config.id);
		log('%c api:', 'font-weight: bold', this.api);
	
		if (this.config.collections) {
			log.start('Collections');
			log('%c admants:', 'font-weight: bold', this.config.collections.admants);
			log('%c categories:', 'font-weight: bold', this.config.collections.categories);
			log.end();
		}
	
		if (this.xhr && this.xhr.response) {
			log.start('Response');
			log.start('Admants');
			log.attributeTable(this.xhr.response.admants, ['value']);
			log.end();
			log.start('Categories');
			log.attributeTable(this.xhr.response.categories, ['value']);
			log.end();
			log.end();
		}
		log.end();
	};
	
	module.exports = new Admantx();

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*istanbul ignore next*/
	function debounce(func, wait, immediate) {
		var timeout = void 0;
		return function () {
			var context = this;
			var args = arguments;
			var later = function later() {
				timeout = null;
				if (!immediate) func.apply(context, args);
			};
			var callNow = immediate && !timeout;
			clearTimeout(timeout);
			timeout = setTimeout(later, wait);
			if (callNow) {
				func.apply(context, args);
			}
		};
	};
	
	function getAppName() {
		var element = document.querySelector('[data-next-app]');
		if (element) {
			return element.getAttribute('data-next-app');
		}
		return 'unknown';
	}
	
	function getLayoutName() {
		var layout = 'default';
		var abStateEl = document.querySelector('[data-ab-state]');
		if (window.location.search.indexOf('adsLayout') === 1) {
			var regex = new RegExp('(adsLayout=([^&#]*)|&|#|$)');
			layout = regex.exec(window.location.search.substring(1))[2];
		} else if (document.querySelector('[data-ads-layout]')) {
			layout = document.querySelector('[data-ads-layout]').getAttribute('data-ads-layout');
		}
		if (abStateEl) {
			var abState = abStateEl.getAttribute('data-ab-state');
			var adsLayoutAB = abState && abState.match(/adsLazyLoadPosition:(control|50pc|100pc|onload)/);
			if (adsLayoutAB && adsLayoutAB.length > 1) {
				layout = 'lazyload-' + adsLayoutAB[1];
			}
		}
	
		return layout;
	}
	
	function getMetaData(name) {
		var meta = document.querySelector('meta[name="' + name + '"]');
		if (meta) {
			return meta.getAttribute('content');
		}
		return false;
	}
	
	function keyValueString(obj) {
		return (0, _keys2.default)(obj).map(function (key) {
			return key + '=' + obj[key];
		}).join(';');
	}
	
	function getReferrer() {
		return document.referrer;
	}
	
	function isEmpty(htmlNode) {
		return htmlNode.firstChild === null || htmlNode.firstChild.nodeType !== 1 || htmlNode.firstChild.style.display === 'none';
	}
	
	function log() {
		var type = void 0;
		var args = void 0;
		var argsIndex = void 0;
		if ('log warn error info'.indexOf(arguments[0]) === -1) {
			type = 'log';
			argsIndex = 0;
		} else {
			type = arguments[0];
			argsIndex = 1;
		}
	
		args = [].slice.call(arguments, argsIndex);
	
		if (!log.isOn() || !window.console || !window.console[type]) {
			return;
		}
	
		window.console[type].apply(window.console, args);
	}
	
	log.warn = function () {
		var args = ['warn'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	log.error = function () {
		var args = ['error'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	log.info = function () {
		var args = ['info'].concat([].slice.call(arguments, 0));
		log.apply(null, args);
	};
	
	log.start = function () {
		if (!log.isOn() || !window.console || !window.console.groupCollapsed) {
			return;
		}
	
		window.console.groupCollapsed('next-ads-component');
	};
	
	log.end = function () {
		if (!log.isOn() || !window.console || !window.console.groupEnd) {
			return;
		}
	
		window.console.groupEnd();
	};
	
	log.isOn = function () {
		return location.search.indexOf('DEBUG=ADS') > -1;
	};
	
	module.exports = {
		debounce: debounce,
		getAppName: getAppName,
		getLayoutName: getLayoutName,
		getMetaData: getMetaData,
		getReferrer: getReferrer,
		keyValueString: keyValueString,
		isEmpty: isEmpty,
		log: log
	};

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(237);
	var sandbox = __webpack_require__(239);
	var extend = __webpack_require__(219).utils.extend;
	var apiUrlRoot = 'https://ads-api.ft.com/v1/';
	
	function getLazyLoadConfig(flags) {
		switch (flags.adsLazyLoadPosition) {
			case 'onload':
				return false;
			case '50pc':
				return { viewportMargin: '50% 0%' };
			case '100pc':
				return { viewportMargin: '100% 0%' };
			default:
				return { viewportMargin: '0%' };
		}
	}
	
	module.exports = function (flags) {
		var pageType = utils.getAppName();
		var eidMatch = document.cookie.match(/EID=(\d+)/);
	
		//Temporarily get EID from FT_U cookie until all ad systems stop using it
		var userCookieMetadata = {
			eid: eidMatch && eidMatch.length > 1 ? eidMatch[1] : null
		};
	
		var targeting = extend({
			pt: pageType.toLowerCase().substr(0, 3),
			nlayout: utils.getLayoutName()
		}, userCookieMetadata);
	
		var kruxConfig = flags.get('krux') && {
			id: 'KHUSeE3x',
			attributes: {
				user: userCookieMetadata,
				page: {}
			}
		};
	
		function getContextualTargeting(appName) {
			var uuid = void 0;
			var url = void 0;
			var apiUrlRoot = 'https://ads-api.ft.com/v1/';
			if (appName === 'article') {
				uuid = document.querySelector('[data-content-id]').getAttribute('data-content-id');
	
				var referrer = utils.getReferrer();
				url = apiUrlRoot + 'content/' + uuid;
				if (referrer) {
					url += '?referrer=' + encodeURIComponent(referrer.split(/[?#]/)[0]);
				}
			} else if (appName === 'stream-page') {
				uuid = document.querySelector('[data-concept-id]').getAttribute('data-concept-id');
				url = apiUrlRoot + 'concept/' + uuid;
			}
	
			return url;
		};
	
		function getZone() {
			var zone = [utils.getMetaData('dfp_site'), utils.getMetaData('dfp_zone')].filter(function (a) {
				return a;
			});
			if (!zone.length) {
				zone = ['unclassified'];
			}
			return zone.join('/');
		}
	
		return {
			gpt: {
				network: '5887',
				site: sandbox.isActive() ? 'sandbox.next.ft' : 'ft.com',
				zone: getZone()
			},
			formats: {
				PaidPost: {
					sizes: 'fluid'
				}
			},
			krux: kruxConfig,
			collapseEmpty: 'before',
			dfp_targeting: utils.keyValueString(targeting),
			lazyLoad: getLazyLoadConfig(flags),
			targetingApi: {
				user: apiUrlRoot + 'user',
				page: getContextualTargeting(pageType),
				usePageZone: true
			}
		};
	};

/***/ },
/* 239 */
/***/ function(module, exports) {

	'use strict';
	
	function sandbox() {
		return location.hash.indexOf('adsandbox') > -1;
	}
	
	module.exports.isActive = sandbox;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	* The Reporter instance adds a "Report broken Ad"
	* link to a container (Slot) and provides methods
	* to report the loaded advert to a given endpoint
	* @constructor
	*/
	function Reporter(slot) {
		this.config = {
			endpoint: '/broken-ad-reporter/report/', // endpoint that handles POST report
			slackChannel: 'https://financialtimes.slack.com/messages/advertising-dev', // slack channel for reporting broken ads
			defaultText: 'Report broken Ad', // default text on the link
			cssClass: 'advert__report-link' // link css class
		};
	
		this.adData = {
			gpt: {
				creativeId: slot.gpt.creativeId,
				lineItemId: slot.gpt.lineItemId,
				size: slot.gpt.size,
				serviceName: slot.gpt.serviceName,
				unitName: slot.gpt.unitName
			},
			targeting: slot.targeting
		};
		this.container = slot.container; // store ref to container
		this.link = this.addLinkToContainer(); // add link and store ref
		this.onClickHandler = this.addEvent('click', this.onClick, this); // store ref to handler for use within promise
		this.hasReported = false;
	}
	
	/**
	* Given an event type, a handler and a caller, will addEventListener on link
	* done in this way so we store a reference to the handler for later use (i.e removal)
	* @returns event handler
	*/
	Reporter.prototype.addEvent = function (event, handler, caller) {
		var _handler = void 0;
		this.link.addEventListener(event, _handler = function _handler(e) {
			handler.call(caller, e);
		});
		return _handler;
	};
	
	/**
	* Given an event type and a ref to the handler function to remove, will removeEventListener on link
	*/
	Reporter.prototype.removeEvent = function (event, handler) {
		this.link.removeEventListener(event, handler);
	};
	
	Reporter.prototype.destroy = function () {
		this.removeEvent('click', this.onClickHandler);
		if (this.link) {
			this.link.parentElement.removeChild(this.link);
		}
	};
	
	/**
	* Adds the link to the container
	* by default it simply links to the config.slack_channel
	* @returns link
	*/
	Reporter.prototype.addLinkToContainer = function () {
		var btn = document.createElement('button');
		btn.classList.add(this.config.cssClass);
		btn.innerHTML = this.config.defaultText;
		// attatch the link
		this.container.appendChild(btn);
		return this.container.lastChild;
	};
	
	/**
	* Changes the innerHTML of the link
	* @returns this
	*/
	Reporter.prototype.updateLink = function (html) {
		this.link.innerHTML = html;
		return this;
	};
	
	/**
	* Click event handler for the link
	* will replace the default href behaviour (going to config.slack_channel)
	*/
	Reporter.prototype.onClick = function (e) {
		e.preventDefault();
		if (this.hasReported) {
			window.open(this.config.slackChannel, '_blank');
		} else {
			this.dispatch(this.adData);
		}
	};
	
	/**
	* Given data, POST to config.next_ads_reporter_url and handle response
	*/
	Reporter.prototype.dispatch = function (data) {
		var _this = this;
	
		// remove the event listener, we dont want to trigger dispatch again
		// will revert to href link whether success or fail
		this.hasReported = true;
	
		if (!this.adData) {
			this.updateLink('Insufficient Ad data, try #slack');
			return;
		}
	
		var opts = {
			method: 'POST',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json'
			},
			credentials: 'include',
			body: (0, _stringify2.default)(data)
		};
	
		fetch(this.config.endpoint, opts).then(function (response) {
			if (response.status !== 200) {
				throw Error(response.statusText || response.status);
			}
			return response.text(); // read and pass on the response.text()
		}).then(function (response) {
			_this.updateLink('&#10004; ' + response + ', follow up on #slack');
		}).catch(function (err) {
			_this.updateLink('&#10008; Failed to report Ad, try #slack');
			return console.error('Failed to report Ad: ' + err); //eslint-disable-line
		});
	};
	
	module.exports = Reporter;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _utils = __webpack_require__(203);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = function (timingsObject, slotDetails) {
		var performance = window.performance || window.msPerformance || window.webkitPerformance || window.mozPerformance;
		if (performance && performance.mark && timingsObject) {
			var offsets = _calculateOffsets(performance, timingsObject);
			var marks = _calculateMarks(performance, timingsObject);
	
			(0, _utils.broadcast)('oTracking.event', {
				category: 'ads',
				action: 'first-load',
				timings: { offsets: offsets, marks: marks },
				creative: {
					id: slotDetails.gpt.creativeId,
					serviceName: slotDetails.gpt.serviceName,
					size: slotDetails.container.getAttribute('data-o-ads-loaded')
				}
	
			});
		}
	};
	
	var _calculateOffsets = function _calculateOffsets(performance, timings) {
		var offsets = {};
		(0, _keys2.default)(timings).forEach(function (timingName) {
			offsets[timingName] = {
				domContentLoadedEventEnd: timings[timingName] - performance.timing['domContentLoadedEventEnd'],
				loadEventEnd: timings[timingName] - performance.timing['loadEventEnd'],
				domInteractive: timings[timingName] - performance.timing['domInteractive']
			};
		});
		return offsets;
	};
	
	var _calculateMarks = function _calculateMarks(performance, timings) {
		var marks = {};
		if (performance.getEntriesByName) {
			(0, _keys2.default)(timings).forEach(function (timingName) {
				performance.getEntriesByName(timingName).forEach(function (mark) {
					marks[mark.name] = Math.round(mark.startTime);
				});
			});
		}
		return marks;
	};

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var debounce = __webpack_require__(237).debounce;
	
	function Sticky(el, opts) {
		this.el = el;
		this.opts = opts || {};
		this.sibling = opts.sibling ? document.querySelector(opts.sibling) : null;
		this.stickUntil = opts.stickUntil ? document.querySelector(opts.stickUntil) : null;
		if (typeof el === 'undefined') return;
		this.opts.stickAfter = this.el.getBoundingClientRect().top;
	}
	
	Sticky.prototype.stick = function () {
		this.el.style.position = 'fixed';
		this.el.style.top = this.opts.topOffset || '0';
		if (this.sibling) {
			this.sibling.style.marginTop = this.el.offsetHeight + 'px';
		}
	};
	
	Sticky.prototype.onScroll = function () {
		if (this.stickyUntilPoint > window.pageYOffset && window.pageYOffset > this.opts.stickAfter) {
			requestAnimationFrame(this.stick.bind(this));
		} else if (this.stickyUntilPoint < window.pageYOffset) {
			requestAnimationFrame(this.unstick.bind(this));
		} else if (window.pageYOffset < this.opts.stickAfter) {
			this.el.style.position = 'static';
		}
	};
	
	Sticky.prototype.bindScroll = function () {
		this.onScrollListener = debounce(this.onScroll).bind(this);
		window.addEventListener('scroll', this.onScrollListener);
	};
	
	Sticky.prototype.unstick = function () {
	
		this.el.style.position = 'absolute';
		this.el.style.top = this.stickyUntilPoint - this.el.offsetHeight + 'px';
		//this.sibling.style.marginTop = this.el.offsetHeight + 'px';
	};
	
	Sticky.prototype.init = function () {
		if (!this.el || window.pageYOffset > 0) {
			return;
		};
		this.stickyUntilPoint = this.stickUntil.offsetTop + this.stickUntil.offsetHeight - this.el.offsetHeight;
		this.el.style.zIndex = '23';
		this.bindScroll();
	};
	
	module.exports = Sticky;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
		init: function init(flags, appInfo) {
			__webpack_require__(244).init(flags, appInfo);
		},
		lazyInit: function lazyInit(flags) {
			window.addEventListener('ftNextLoaded', function () {
				__webpack_require__(274)(flags);
				__webpack_require__(275)(flags);
				__webpack_require__(276)(flags);
				__webpack_require__(277)(flags);
			});
		},
		scrollDepthComponents: __webpack_require__(278)
	
	};

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _utils = __webpack_require__(203);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var oTracking = __webpack_require__(245);
	var oGrid = __webpack_require__(263);
	var oViewport = __webpack_require__(143);
	var nextEvents = __webpack_require__(265);
	
	function nodesToArray(nodelist) {
		return [].slice.call(nodelist);
	}
	
	function getRootData(name) {
		return document.documentElement.getAttribute('data-' + name);
	}
	
	var oTrackingWrapper = {
		init: function init(flags, appInfo) {
	
			if (!flags || !flags.get('oTracking')) {
				return;
			}
	
			// oTracking sometimes errors - this makes sure that if it does it won't bring the whole bootstrap process down with it
			try {
				var userData = {
					layout: oGrid.getCurrentLayout(),
					orientation: oViewport.getOrientation()
				};
	
				var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
	
				if (connection && connection.type) {
					userData.connectionType = connection.type;
				}
	
				var context = {
					product: 'next',
					app: appInfo && appInfo.name,
					appVersion: appInfo && appInfo.version
				};
	
				var contentId = getRootData('content-id');
				if (contentId) {
					context.rootContentId = contentId;
				}
	
				var conceptId = getRootData('concept-id');
				if (conceptId) {
					context.rootConceptId = conceptId;
					context.rootTaxonomy = getRootData('taxonomy');
				}
	
				var errorStatus = (/nextErrorStatus=(\d{3})/.exec(window.location.search) || [])[1];
				var pageViewConf = { context: {} };
	
				if (errorStatus) {
					// TODO after https://github.com/Financial-Times/o-tracking/issues/122#issuecomment-194970465
					// this should be redundant as context woudl propagate down to each event in its entirety
					context.url = pageViewConf.context.url = window.parent.location.toString();
					context.referrer = pageViewConf.context.referrer = window.parent.document.referrer;
					context.errorStatus = pageViewConf.context.errorStatus = errorStatus;
				}
	
				var edition = document.querySelector('[data-next-edition]') ? document.querySelector('[data-next-edition]').getAttribute('data-next-edition') : null;
				context.edition = edition;
				var segmentId = String(window.location.search).match(/[?&]segmentId=([^?&])/) || [];
				if (segmentId[1]) {
					context['marketing_segment_id'] = segmentId[1];
				}
				var pageMeta = window.FT && window.FT.pageMeta;
				if (pageMeta && pageMeta === Object(pageMeta)) {
					for (var key in pageMeta) {
						if (pageMeta.hasOwnProperty(key)) {
							context[key] = pageMeta[key];
						}
					}
				}
	
				oTracking.init({
					server: 'https://spoor-api.ft.com/ingest',
					context: context,
					user: userData,
					useSendBeacon: flags.get('sendBeacon')
				});
	
				// barriers
				var barrierType = document.querySelector('[data-barrier]');
				var productSelectorFlag = document.querySelector('[data-barrier-is-product-selector]');
	
				if (barrierType) {
					pageViewConf.context.barrier = true;
					pageViewConf.context.barrierType = barrierType.getAttribute('data-barrier');
				};
	
				// FIXME - should not fire on barriers, but needs to be around for a while data analytics fix their SQL
				oTracking.page(pageViewConf.context);
	
				if (barrierType) {
	
					var isProductSelector = productSelectorFlag ? productSelectorFlag.getAttribute('data-barrier-is-product-selector') === 'true' : false;
	
					// https://docs.google.com/document/d/18_yV2s813XCrBF7w6196FLhLJzWXK4hXT2sIpDZVvhQ/edit?ts=575e9368#
					var opportunity = {
						type: isProductSelector ? 'products' : 'barrier',
						subtype: barrierType.getAttribute('data-barrier')
					};
	
					var offers = document.querySelectorAll('[data-offer-id]');
					var acquisitionContext = document.querySelectorAll('[data-acquisition-context]');
	
					(0, _utils.broadcast)('oTracking.event', (0, _assign2.default)({
						category: 'barrier',
						action: 'view',
						opportunity: opportunity,
						type: barrierType.getAttribute('data-barrier'),
						acquisitionContext: nodesToArray(acquisitionContext).map(function (e) {
							return e.getAttribute('data-acquisition-context');
						}),
						offers: nodesToArray(offers).map(function (e) {
							return e.getAttribute('data-offer-id');
						})
					}, context));
				}
			} catch (err) {
				(0, _utils.broadcast)('oErrors.log', {
					error: err,
					info: {
						message: 'Failed to init o-tracking'
					}
				});
			}
	
			nextEvents.init();
		}
	};
	
	module.exports = oTrackingWrapper;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(246);

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/*global require, module */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var settings = __webpack_require__(247);
	var user = __webpack_require__(248);
	var session = __webpack_require__(252);
	var send = __webpack_require__(253);
	
	/**
	 * The version of the tracking module.
	 * @type {string}
	 */
	var version = '1.1.11';
	/**
	 * The source of this event.
	 * @type {string}
	 */
	var source = 'o-tracking';
	/**
	 * The API key.
	 * @type {string}
	 */
	var api_key = 'qUb9maKfKbtpRsdp0p2J7uWxRPGJEP';
	
	/**
	 * @class Tracking
	 */
	function Tracking() {
		this.version = version;
		this.source = source;
		this.api_key = api_key;
	
		/**
	  * The initialised state of the object.
	  * @type {boolean}
	  */
		this.initialised = false;
	}
	
	/**
	 * Turn on/off developer mode. (Can also be activated on init.)
	 * @param {boolean} level - Turn on or off, defaults to false if omitted.
	 * @return {undefined}
	 */
	Tracking.prototype.developer = function (level) {
		if (level) {
			settings.set('developer', true);
		} else {
			settings.destroy('developer', null);
			settings.destroy('no_send', null);
		}
	};
	
	/**
	 * Clean up the tracking module.
	 * @return {undefined}
	 */
	Tracking.prototype.destroy = function () {
		this.developer(false);
		this.initialised = false;
	
		settings.destroy('config');
		settings.destroy('page_sent');
	};
	
	/**
	 * Overload toString method to show the version.
	 * @return {string} The module's version.
	 */
	Tracking.prototype.toString = function () {
		return 'oTracking version ' + version;
	};
	
	Tracking.prototype.page = __webpack_require__(259);
	
	Tracking.prototype.event = __webpack_require__(261);
	
	Tracking.prototype.link = __webpack_require__(262);
	
	Tracking.prototype.utils = __webpack_require__(249);
	
	/**
	 * Initialises the Tracking object.
	 *
	 * All options are optional, if a configuration option is missing, the module
	 * will try to initialise using any configuration found in the DOM using the
	 * script config tag.
	 *
	 * @example
	 * <!-- DOM configuration settings -->
	 * <script type='application/json' data-o-tracking-config>
	 * page: {
	 * 	 product: 'desktop'
	 * },
	 * user: {
	 *   user_id: '023ur9jfokwenvcklwnfiwhfoi324'
	 * }
	 * </script>
	 *
	 * @param {Object} config 					- See {@link Tracking} for the configuration options.
	 * @param {boolean} config.developer        - Optional, if `true`, logs certain actions.
	 * @param {boolean} config.noSend           - Optional, if `true`, won't send events.
	 * @param {string} config.configId          - Optional
	 * @param {string} config.session           - Optional
	 *
	 * @return {Tracking} - Returns the tracking object
	 */
	Tracking.prototype.init = function (config) {
		if (this.initialised) {
			return this;
		}
	
		var hasDeclarativeConfig = !!this._getDeclarativeConfigElement();
	
		if (!(hasDeclarativeConfig || config)) {
			return this;
		}
	
		config = config || {};
		if (hasDeclarativeConfig) {
			config = this._getDeclarativeConfig(config);
		}
	
		settings.set('config', config);
		settings.set('version', this.version);
		settings.set('source', this.source);
		settings.set('api_key', this.api_key);
	
		settings.set('page_sent', false);
	
		// Developer mode
		if (config.developer) {
			this.developer(config.developer);
	
			if (config.noSend) {
				settings.set('no_send', true);
			}
		}
	
		// User identifier
		user.init(config.user ? config.user.user_id : null);
	
		// Session
		session.init(config.session);
	
		// Initialize the sending queue.
		send.init();
	
		this.event.init();
		this.page.init();
		this.initialised = true;
		return this;
	};
	
	/**
	 * Checks if the <script type='application/json' data-o-tracking-config> element is in the DOM
	 * @private
	 * @return {HTMLElement} - Returns the <script> element if found
	 */
	Tracking.prototype._getDeclarativeConfigElement = function () {
		return document.querySelector('script[data-o-tracking-config]');
	};
	
	/**
	 * Initialises additional data using the <script type='application/json' data-o-tracking-config> element in the DOM.
	 * @private
	 * @param {Object} options - A partially, or fully filled options object.  If
	 *                           an option is missing, this method will attempt to
	 *                           initialise it from the DOM.
	 * @return {Object} - The options modified to include the options gathered from the DOM
	 */
	Tracking.prototype._getDeclarativeConfig = function (options) {
		var configEl = this._getDeclarativeConfigElement();
		var declarativeConfigString = void 0;
		if (configEl) {
			declarativeConfigString = configEl.textContent || configEl.innerText || configEl.innerHTML;
		} else {
			return false;
		}
	
		var declarativeOptions = void 0;
	
		try {
			declarativeOptions = JSON.parse(declarativeConfigString);
		} catch (e) {
			var configError = new Error('Invalid JSON configuration syntax, check validity for o-tracking configuration: "' + e.message + '"');
			this.utils.broadcast('oErrors', 'log', {
				error: configError.message,
				info: { module: 'o-tracking' }
			});
			throw configError;
		}
	
		for (var property in declarativeOptions) {
			if (declarativeOptions.hasOwnProperty(property)) {
				options[property] = options[property] || declarativeOptions[property];
			}
		}
	
		return options;
	};
	
	var tracking = new Tracking();
	
	function initialise() {
		tracking.init();
		document.removeEventListener('o.DOMContentLoaded', initialise);
	}
	
	// Try and initialise on o.DOMContentLoaded. If it fails, defer to the
	// consumer of the library.
	document.addEventListener('o.DOMContentLoaded', initialise);
	
	/**
	 * A constructed object, this module is a Singleton as we only want one
	 * instance sending events. See {@link Tracking} for the publicly available
	 * interface.
	 * @type {Tracking}
	 */
	module.exports = tracking;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/*global module */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var settings = {};
	
	/**
	 * Very basic implementation of deep clone, and only supports simple POJO objects and
	 * native arrays.
	 * @param  {*} value Any value
	 * @return {*}       Copy of value
	 * @private
	 */
	function clone(value) {
	  if (value === undefined) {
	    return value;
	  }
	  switch (Object.prototype.toString.call(value)) {
	    case '[object Object]':
	      return JSON.parse((0, _stringify2.default)(value));
	    case '[object Array]':
	      return [].slice.call(value);
	    default:
	      return value;
	  }
	}
	
	/**
	 * Saves a value. Stores a copy rather than a reference, to avoid mutations leaking.
	 *
	 * @param {string} key - The key to use to store the object
	 * @param {*} value - The value
	 * @return {undefined}
	 */
	function setValue(key, value) {
	  settings[key] = clone(value);
	}
	
	/**
	 * Retrieves a value from the settings object. Returns a copy rather than reference, to
	 * avoid mutations leaking.
	 *
	 * @param {string} key - The key to get
	 * @return {*} - The setting.
	 */
	function getValue(key) {
	  return clone(settings[key]);
	}
	
	/**
	 * Deletes a value
	 *
	 * @param  {string} key - The key to delete
	 * @return {undefined}
	 */
	function destroy(key) {
	  delete settings[key];
	}
	
	module.exports = {
	  'set': setValue,
	  'get': getValue,
	  'destroy': destroy
	};

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var _userID = void 0;
	var store = void 0;
	var defaultUserConfig = {
		storage: 'cookie',
		name: 'spoor-id',
		value: null,
		domain: document.URL.match(/^https?\:\/\/([^\/?#]+)(?:[\/?#]|$)/i)[1].indexOf('ft.com') > -1 ? 'ft.com' : null
	};
	
	var utils = __webpack_require__(249);
	var Store = __webpack_require__(251);
	
	/**
	 * migrate_across_domains
	 * Clean up after forgetting to write cookies to the 'root' ft.com domain.
	 * - Check local storage for the 'proper' value.
	 * - If it exists, use it.
	 * - If not, set current user id as the 'proper' value.
	 * - If this value and the cookie match, then we've already fixed it.
	 * - If not, drop the cookie and it will be reset it on the root domain.
	 *
	 * @param {Store} store - The storage instance used for storing the ID.
	 * @param {String} user_id - The user ID to check against storage.
	 * @return {String} - The real user ID.
	 */
	function migrate_across_domains(store, user_id) {
		var ls_name = 'o-tracking-proper-id';
		var proper_id = void 0;
	
		try {
			// This isn't consistent in at least Firefox, maybe more, localstorage seems secured at subdomian level.
			proper_id = utils.getValueFromCookie(ls_name + '=([^;]+)');
	
			if (!proper_id) {
				var d = new Date();
				d.setTime(d.getTime() + 10 * 365 * 24 * 60 * 60 * 1000);
				var expires = 'expires=' + d.toGMTString() + ';';
	
				window.document.cookie = ls_name + '=' + utils.encode(user_id) + ';' + expires + 'path=/;domain=.' + defaultUserConfig.domain + ';';
				proper_id = user_id;
			}
		} catch (error) {
			utils.broadcast('oErrors', 'log', {
				error: error.message,
				info: { module: 'o-tracking' }
			});
			proper_id = user_id;
		}
	
		// Expire the cookie on the (sub)domain
		window.document.cookie = 'spoor-id=0;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;';
		// Re-set the cookie on the  root domain
		store.write(proper_id);
	
		return proper_id;
	}
	
	/**
	 * Init
	 *
	 * @param {String|Object} value The value of a userID to use or configuration object.
	 * @return {String} - The user ID.
	 */
	function init(value) {
		var config = utils.merge(defaultUserConfig, { value: value });
	
		// config.name is important here, means the user has specifically asked for a cookie name.
		if (config.storage === 'cookie' && config.name) {
			config.nameOverride = config.name;
		}
	
		store = new Store(config.name, config);
	
		_userID = store.read();
	
		if (_userID) {
			_userID = migrate_across_domains(store, _userID);
		}
	
		if (!_userID) {
			_userID = config.value;
		}
	
		if (!_userID) {
			_userID = utils.guid();
		}
	
		store.write(_userID); // Refreshes the cookie...
	
		return _userID;
	}
	
	function destroy() {
		store.destroy();
	}
	
	module.exports = {
		init: init,
		userID: function userID() {
			return _userID;
		},
		destroy: destroy
	};

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require, window */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	/**
	 * Shared 'internal' scope.
	 * @private
	 */
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var settings = __webpack_require__(247);
	
	/**
	 * CUID Generator
	 */
	var cuid = __webpack_require__(250);
	
	/**
	 * Record of callbacks to call when a page is tracked.
	 */
	var page_callbacks = [];
	
	/**
	 * Log messages to the browser console. Requires 'log' to be set on init.
	 *
	 * @param {*} List of objects to log
	 * @return {undefined}
	 */
	function log() {
		if (settings.get('developer') && window.console) {
			for (var i = 0; i < arguments.length; i++) {
				window.console.log(arguments[i]);
			}
		}
	}
	
	/**
	 * Tests if variable is a certain type. Defaults to check for undefined if no type specified.
	 *
	 * @param {*} variable - The variable to check.
	 * @param {string} type - The type to test for. Defaults to undefined.
	 *
	 * @return {boolean} - The answer for if the variable is of type.
	 */
	function is(variable, type) {
		if (!type) {
			type = 'undefined';
		}
		return (typeof variable === 'undefined' ? 'undefined' : (0, _typeof3.default)(variable)) === type;
	}
	
	/**
	 * Merge objects together. Will remove 'falsy' values.
	 *
	 * @param {Object} target - The original object to merge in to.
	 * @param {Object} options - The object to merge into the target. If omitted, will merge target into a new empty Object.
	 *
	 * @return {Object} The merged object.
	 */
	function merge(target, options) {
		if (!options) {
			options = target;
			target = {};
		}
	
		var name = void 0;
		var src = void 0;
		var copy = void 0;
	
		/* jshint -W089 */
		/* eslint guard-for-in: 0 */
		for (name in options) {
			src = target[name];
			copy = options[name];
	
			// Prevent never-ending loop
			if (target === copy) {
				continue;
			}
	
			// Gets rid of missing values too
			if (typeof copy !== 'undefined' && copy !== null) {
				target[name] = src === Object(src) && !is(src, 'function') ? merge(src, copy) : copy;
			}
		}
		/* jshint +W089 */
		/* jslint forin:true */
	
		return target;
	}
	
	/**
	 * URL encode a string.
	 * @param {string} str - The string to be encoded.
	 *
	 * @return {string} The encoded string.
	 */
	function encode(str) {
		if (window.encodeURIComponent) {
			return window.encodeURIComponent(str);
		} else {
			return window.escape(str);
		}
	}
	
	/**
	 * URL decode a string.
	 * @param {string} str - The string to be decoded.
	 *
	 * @return {string} The decoded string.
	 */
	function decode(str) {
		if (window.decodeURIComponent) {
			return window.decodeURIComponent(str);
		} else {
			return window.unescape(str);
		}
	}
	
	/*
	 * Utility to add event listeners.
	 *
	 * @param {Element} element
	 * @param {string} event
	 * @param {Function} listener
	 */
	function addEvent(element, event, listener) {
		if (element.addEventListener) {
			element.addEventListener(event, listener, false);
		} else {
			element.attachEvent('on' + event, listener);
		}
	}
	
	/*
	 * Utility for dispatching custom events from window
	 *
	 * @param {string} namespace
	 * @param {string} eventType
	 * @param {Object} detail
	 */
	function broadcast(namespace, eventType, detail) {
		detail = detail || {};
		try {
			window.dispatchEvent(new CustomEvent(namespace + '.' + eventType, {
				detail: detail,
				bubbles: true
			}));
		} catch (error) {}
	}
	
	/**
	 * Listen for page tracking requests.
	 *
	 * @param {Function} cb - The callback to be called whenever a page is tracked.
	 * @return {undefined}
	 */
	function onPage(cb) {
		if (is(cb, 'function')) {
			page_callbacks.push(cb);
		}
	}
	
	/**
	 * Trigger the 'page' listeners.
	 * @return {undefined}
	 */
	function triggerPage() {
		for (var i = 0; i < page_callbacks.length; i++) {
			page_callbacks[i]();
		}
	}
	
	/**
	 * Get a value from document.cookie matching the first match of the regexp you supply
	 * @param {RegExp} matcher - The Regex to match with
	 * @return {String} - The vale from the cookie
	 */
	function getValueFromCookie(matcher) {
		return document.cookie.match(matcher) && RegExp.$1 !== '' && RegExp.$1 !== 'null' ? RegExp.$1 : null;
	}
	
	/**
	 * Get a value from the url, used for uuid or querystring parameters
	 * @param {RegExp} matcher - The Regex to match with
	 * @return {String} - The value from the URL
	 */
	function getValueFromUrl(matcher) {
		return document.location.href.match(matcher) && RegExp.$1 !== '' ? RegExp.$1 : null;
	}
	
	/**
	 * Get a value from a specified JavaScript variable.
	 * @param {String} str - The name of variable, in dot syntax.
	 * @return {String} The value from the JS variable.
	 */
	function getValueFromJsVariable(str) {
		if (typeof str !== 'string') {
			return null;
		}
	
		var i = void 0;
		var namespaces = str.split('.');
		var test = window;
	
		for (i = 0; i < namespaces.length; i = i + 1) {
			if (typeof test[namespaces[i]] === 'undefined') {
				return null;
			}
	
			test = test[namespaces[i]];
		}
	
		return test !== '' ? test : null;
	}
	
	module.exports = {
		log: log,
		is: is,
		isUndefined: is,
		merge: merge,
		encode: encode,
		decode: decode,
		guid: cuid,
		addEvent: addEvent,
		broadcast: broadcast,
		onPage: onPage,
		triggerPage: triggerPage,
		getValueFromCookie: getValueFromCookie,
		getValueFromUrl: getValueFromUrl,
		getValueFromJsVariable: getValueFromJsVariable
	};

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*eslint-disable*/
	/**
	 * cuid.js
	 * Collision-resistant UID generator for browsers and node.
	 * Sequential for fast db lookups and recency sorting.
	 * Safe for element IDs and server-side lookups.
	 *
	 * Extracted from CLCTR
	 *
	 * Copyright (c) Eric Elliott 2012
	 * MIT License
	 */
	
	/*global window, navigator, document, require, process, module */
	(function (app) {
	  'use strict';
	
	  var namespace = 'cuid',
	      c = 0,
	      blockSize = 4,
	      base = 36,
	      discreteValues = Math.pow(base, blockSize),
	      pad = function pad(num, size) {
	    var s = "000000000" + num;
	    return s.substr(s.length - size);
	  },
	      randomBlock = function randomBlock() {
	    return pad((Math.random() * discreteValues << 0).toString(base), blockSize);
	  },
	      safeCounter = function safeCounter() {
	    c = c < discreteValues ? c : 0;
	    c++; // this is not subliminal
	    return c - 1;
	  },
	      api = function cuid() {
	    // Starting with a lowercase letter makes
	    // it HTML element ID friendly.
	    var letter = 'c',
	        // hard-coded allows for sequential access
	
	    // timestamp
	    // warning: this exposes the exact date and time
	    // that the uid was created.
	    timestamp = new Date().getTime().toString(base),
	
	
	    // Prevent same-machine collisions.
	    counter,
	
	
	    // A few chars to generate distinct ids for different
	    // clients (so different computers are far less
	    // likely to generate the same id)
	    fingerprint = api.fingerprint(),
	
	
	    // Grab some more chars from Math.random()
	    random = randomBlock() + randomBlock();
	
	    counter = pad(safeCounter().toString(base), blockSize);
	
	    return letter + timestamp + counter + fingerprint + random;
	  };
	
	  api.slug = function slug() {
	    var date = new Date().getTime().toString(36),
	        counter,
	        print = api.fingerprint().slice(0, 1) + api.fingerprint().slice(-1),
	        random = randomBlock().slice(-2);
	
	    counter = safeCounter().toString(36).slice(-4);
	
	    return date.slice(-2) + counter + print + random;
	  };
	
	  api.globalCount = function globalCount() {
	    // We want to cache the results of this
	    var cache = function calc() {
	      var i,
	          count = 0;
	
	      for (i in window) {
	        count++;
	      }
	
	      return count;
	    }();
	
	    api.globalCount = function () {
	      return cache;
	    };
	    return cache;
	  };
	
	  api.fingerprint = function browserPrint() {
	    return pad((navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + api.globalCount().toString(36), 4);
	  };
	
	  // don't change anything from here down.
	  if (true) {
	    module.exports = api;
	  } else {
	    app[namespace] = api;
	  }
	})(undefined);
	/*eslint-enable */

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require, window */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	/**
	 * Class for storing data
	 * Will choose the 'best' storage method available. Can also specify a type of storage.
	 *
	 * @class  Store
	 * @param {string} name - The name of the store
	 * @param {Object} config - Optional, config object for extra configuration
	 */
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Store = function Store(name, config) {
	
		/**
	  * Internal Storage key prefix.
	  */
		var keyPrefix = 'o-tracking';
	
		/**
	  * Temporary var containing data from a previously saved store.
	  * @property loadStore
	  */
		var loadStore = void 0;
		var utils = __webpack_require__(249);
	
		if (utils.isUndefined(name)) {
			var undefinedName = new Error('You must specify a name for the store.');
			utils.broadcast('oErrors', 'log', {
				error: undefinedName.message,
				info: { module: 'o-tracking' }
			});
			throw undefinedName;
		}
	
		this.config = utils.merge({ storage: 'best', expires: 10 * 365 * 24 * 60 * 60 * 1000 }, config);
	
		/**
	  * Store data.
	  */
		this.data = null;
	
		/**
	  * The key/name of this store.
	  */
		this.storageKey = this.config.hasOwnProperty('nameOverride') ? this.config.nameOverride : [keyPrefix, name].join('_');
	
		/**
	  * The storage method to use. Determines best storage method.
	  *
	  * @type {Object}
	  */
		this.storage = function (config, window) {
			var test_key = keyPrefix + '_InternalTest';
	
			// If cookie has been manually specified, don't bother with local storage.
			if (config.storage !== 'cookie') {
				try {
					if (window.localStorage) {
						window.localStorage.setItem(test_key, 'TEST');
	
						if (window.localStorage.getItem(test_key) === 'TEST') {
							window.localStorage.removeItem(test_key);
							return {
								_type: 'localStorage',
								load: function load(name) {
									return window.localStorage.getItem.call(window.localStorage, name);
								},
								save: function save(name, value) {
									return window.localStorage.setItem.call(window.localStorage, name, value);
								},
								remove: function remove(name) {
									return window.localStorage.removeItem.call(window.localStorage, name);
								}
							};
						}
					}
				} catch (error) {
					utils.broadcast('oErrors', 'log', {
						error: error.message,
						info: { module: 'o-tracking' }
					});
				}
			}
	
			function cookieLoad(name) {
				name = name + '=';
	
				var cookies = window.document.cookie.split(';');
				var i = void 0;
				var cookie = void 0;
	
				for (i = 0; i < cookies.length; i = i + 1) {
					cookie = cookies[i].replace(/^\s+|\s+$/g, '');
					if (cookie.indexOf(name) === 0) {
						return utils.decode(cookie.substring(name.length, cookie.length));
					}
				}
	
				return null;
			}
	
			function cookieSave(name, value, expiry) {
				var d = void 0;
				var expires = '';
				var cookie = void 0;
	
				if (utils.is(expiry, 'number')) {
					d = new Date();
					d.setTime(d.getTime() + expiry);
					expires = 'expires=' + d.toGMTString() + ';';
				}
	
				cookie = utils.encode(name) + '=' + utils.encode(value) + ';' + expires + 'path=/;' + (config.domain ? 'domain=.' + config.domain + ';' : '');
				window.document.cookie = cookie;
			}
	
			function cookieRemove(name) {
				cookieSave(name, '', -1);
			}
	
			cookieSave(test_key, 'TEST');
	
			if (cookieLoad(test_key) === 'TEST') {
				cookieRemove(test_key);
	
				return {
					_type: 'cookie',
					load: cookieLoad,
					save: cookieSave,
					remove: cookieRemove
				};
			}
	
			return {
				_type: 'none',
				load: function load() {},
				save: function save() {},
				remove: function remove() {}
			};
		}(this.config, window);
	
		// Retrieve any previous store with the same name.
		loadStore = this.storage.load(this.storageKey);
		if (loadStore) {
			try {
				this.data = JSON.parse(loadStore);
			} catch (error) {
				utils.broadcast('oErrors', 'log', {
					error: error.message,
					module: 'o-tracking'
				});
				this.data = loadStore;
			}
		}
	
		return this;
	};
	
	/**
	 * Get/Read the current data.
	 *
	 * @return {Object} Returns the data from the store.
	 */
	Store.prototype.read = function () {
		return this.data;
	};
	
	/**
	 * Write the supplied data to the store.
	 *
	 * @param {String} data - The data to write.
	 * @return {Store} - The instance of the store
	 */
	Store.prototype.write = function (data) {
		// Set this.data, in-case we're on a file:// domain and can't set cookies.
		this.data = data;
		this.storage.save(this.storageKey, typeof this.data === 'string' ? this.data : (0, _stringify2.default)(this.data), this.config.expires);
	
		return this;
	};
	
	/**
	 * Delete the current data.
	 * @return {Store} - The instance of the store
	 */
	Store.prototype.destroy = function () {
		this.data = null;
		this.storage.remove(this.storageKey);
		return this;
	};
	
	module.exports = Store;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var store = void 0;
	var defaultSessionConfig = {
		storage: 'best',
		name: 'session',
		expires: 30 * 60 * 1000 // 30 minutes
	};
	
	var utils = __webpack_require__(249);
	var Store = __webpack_require__(251);
	
	/**
	 * Set the session in the store.
	 *
	 * @param {String} session - The session to be stored.
	 * @return {undefined}
	 */
	function setSession(session) {
		var d = new Date();
		d.setTime(d.getTime() + store.config.expires);
	
		store.write({
			value: session,
			expiry: d.valueOf()
		});
	}
	
	/**
	 * Get the session from the store. Expiry and gen of a new session are handled here.
	 *
	 * @return {Object} the current session
	 */
	function getSession() {
		var s = store.read();
		var session = void 0;
		var isNew = false;
	
		if (s) {
			var d = new Date().valueOf();
			var exp = parseInt(s.expiry);
	
			// If current session is active.
			if (exp >= d) {
				session = s.value;
			}
		}
	
		// No active session, gen a new one.
		if (!session) {
			session = utils.guid();
			isNew = true;
		}
	
		// Refreshes the cookie...
		setSession(session);
	
		return {
			id: session,
			isNew: isNew
		};
	}
	
	/**
	 * Init
	 *
	 * @param {String|Object} config The name used to store the session or configuration object.
	 * @return {Session} - The session
	 */
	function init(config) {
		if (utils.is(config, 'string')) {
			config = { name: config };
		}
	
		if (utils.isUndefined(config)) {
			config = {};
		}
	
		var c = utils.merge(defaultSessionConfig, config);
	
		// config.name is important here, means the user has specifically asked for a cookie name.
		if (c.storage === 'cookie' && config.name) {
			c.nameOverride = c.name;
		}
	
		store = new Store(c.name, c);
	
		return getSession();
	}
	
	module.exports = {
		init: init,
		session: getSession
	};

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require, window */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var settings = __webpack_require__(247);
	var utils = __webpack_require__(249);
	var Queue = __webpack_require__(254);
	var transports = __webpack_require__(255);
	/**
	 * Default collection server.
	 */
	var domain = 'http://test.spoor-api.ft.com';
	
	/**
	 * Queue queue.
	 *
	 * @type {Queue}
	 */
	var queue = void 0;
	
	/**
	 * Consistent check to see if we should use sendBeacon or not.
	 *
	 * @return {boolean} Should we use sendBeacon?
	 */
	function should_use_sendBeacon() {
		return navigator.sendBeacon && _promise2.default && (settings.get('config') || {}).useSendBeacon;
	}
	
	/**
	 * Attempts to send a tracking request.
	 *
	 * @param {Object} request The request to be sent.
	 * @param {Function} callback Callback to fire the next item in the queue.
	 * @return {undefined}
	 */
	function sendRequest(request, callback) {
		var queueTime = request.queueTime;
		var offlineLag = new Date().getTime() - queueTime;
		var path = void 0;
		var transport = should_use_sendBeacon() ? transports.get('sendBeacon')() : window.XMLHttpRequest && 'withCredentials' in new window.XMLHttpRequest() ? transports.get('xhr')() : transports.get('image')();
		var user_callback = request.callback;
	
		var core_system = settings.get('config') && settings.get('config').system || {};
		var system = utils.merge(core_system, {
			api_key: settings.get('api_key'), // String - API key - Make sure the request is from a valid client (idea nicked from Keen.io) useful if a page gets copied onto a Russian website and creates noise
			version: settings.get('version'), // Version of the tracking client e.g. '1.2'
			source: settings.get('source') });
	
		request = utils.merge({ system: system }, request);
	
		// Only bothered about offlineLag if it's longer than a second, but less than 12 months. (Especially as Date can be dodgy)
		if (offlineLag > 1000 && offlineLag < 12 * 30 * 24 * 60 * 60 * 1000) {
			request.time = request.time || {};
			request.time.offset = offlineLag;
		}
		delete request.callback;
		delete request.async;
		delete request.type;
		delete request.queueTime;
	
		utils.log('user_callback', user_callback);
		utils.log('PreSend', request);
	
		path = (0, _stringify2.default)(request);
	
		utils.log('path', path);
	
		transport.complete(function (error) {
			if (utils.is(user_callback, 'function')) {
				user_callback.call(request);
				utils.log('calling user_callback');
			}
	
			if (error) {
				// Re-add to the queue if it failed.
				// Re-apply queueTime here
				request.queueTime = queueTime;
				queue.add(request).save();
	
				utils.broadcast('oErrors', 'log', {
					error: error.message,
					info: { module: 'o-tracking' }
				});
			} else {
				callback && callback();
			}
		});
	
		// Both developer and noSend flags have to be set to stop the request sending.
		if (!(settings.get('developer') && settings.get('no_send'))) {
			transport.send(domain, path);
		}
	}
	
	/**
	 * Adds a new request to the list of pending requests
	 *
	 * @param {Tracking} request The request to queue
	 * @return {undefined}
	 */
	function add(request) {
		request.queueTime = new Date().getTime();
		if (should_use_sendBeacon()) {
			sendRequest(request);
		} else {
			queue.add(request).save();
		}
		utils.log('AddedToQueue', queue);
	}
	
	/**
	 * If there are any requests queued, attempts to send the next one
	 * Otherwise, does nothing
	 * @param {Function} callback - Optional callback
	 * @return {undefined}
	 */
	function run(callback) {
		if (utils.isUndefined(callback)) {
			callback = function callback() {};
		}
	
		// Investigate queue lengths bug
		// https://jira.ft.com/browse/DTP-330
		var all_events = queue.all();
	
		if (all_events.length > 200) {
			(function () {
				var counts = {};
	
				all_events.forEach(function (event) {
					var label = [event.category, event.action].join(':');
	
					if (!counts.hasOwnProperty(label)) {
						counts[label] = 0;
					}
	
					counts[label] += 1;
				});
	
				queue.replace([]);
	
				queue.add({
					category: 'o-tracking',
					action: 'queue-bug',
					context: {
						url: document.url,
						queue_length: all_events.length,
						counts: counts,
						storage: queue.storage.storage._type
					}
				});
			})();
		}
	
		var next = function next() {
			run();
			callback();
		};
		var nextRequest = queue.shift();
	
		// Cancel if we've run out of requests.
		if (!nextRequest) {
			return callback();
		}
	
		// Send this request, then try run again.
		return sendRequest(nextRequest, next);
	}
	
	/**
	 * Convenience function to add and run a request all in one go.
	 *
	 * @param {Object} request The request to queue and run.
	 * @return {undefined}
	 */
	function addAndRun(request) {
		add(request);
		run();
	}
	
	/**
	 * Init the queue and send any leftover events.
	 * @return {undefined}
	 */
	function init() {
		queue = new Queue('requests');
	
		if (settings.get('config') && settings.get('config').server) {
			domain = settings.get('config').server;
		}
	
		// If any tracking calls are made whilst offline, try sending them the next time the device comes online
		utils.addEvent(window, 'online', run);
	
		// On startup, try sending any requests queued from a previous session.
		run();
	
		return queue;
	}
	
	module.exports = {
		init: init,
		add: add,
		run: run,
		addAndRun: addAndRun
	};

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var utils = __webpack_require__(249);
	var Store = __webpack_require__(251);
	
	/**
	 * Class for handling a queue backed up by a store.
	 * @class Queue
	 *
	 * @param {String} name - The name of the queue.
	 * @return {Queue} - Returns the instance of the queue.
	 */
	var Queue = function Queue(name) {
		if (utils.isUndefined(name)) {
			var undefinedName = new Error('You must specify a name for the queue.');
			utils.broadcast('oErrors', 'log', {
				error: undefinedName.message,
				info: { module: 'o-tracking' }
			});
			throw undefinedName;
		}
	
		/**
	  * Queue data.
	  * @type {Array}
	  */
		this.queue = [];
	
		/**
	  * The storage method to use. Determines best storage method.
	  * @type {Object}
	  */
		this.storage = new Store(name);
	
		// Retrieve any previous store with the same name.
		if (this.storage.read()) {
			this.queue = this.storage.read();
		}
	
		return this;
	};
	
	/**
	 * Gets the contents of the store.
	 *
	 * @return {Array} The array of items.
	 */
	Queue.prototype.all = function () {
		if (this.queue.length === 0) {
			return [];
		}
	
		var items = [];
	
		for (var i = 0; i < this.queue.length; i = i + 1) {
			items.push(this.queue[i].item);
		}
	
		return items;
	};
	
	/**
	 * Gets the first item in the store.
	 *
	 * @return {Object} Returns the item.
	 */
	Queue.prototype.first = function () {
		if (this.queue.length === 0) {
			return null;
		}
	
		return this.queue[0].item;
	};
	
	/**
	 * Gets the last item in the store.
	 *
	 * @return {Object} Returns the item.
	 */
	Queue.prototype.last = function () {
		if (this.queue.length === 0) {
			return null;
		}
	
		return this.queue.slice(-1)[0].item;
	};
	
	/**
	 * Add data to the store.
	 *
	 * @param {Object} item - An item or an array of items.
	 *
	 * @return {Queue} - Returns the instance of the queue.
	 */
	Queue.prototype.add = function (item) {
		// I was trying to turn this whole add function into a little module, to stop doAdd function being created everytime, but couldn't work out how to get to 'this' from within the module.
	
		var self = this;
		var i = void 0;
	
		function doAdd(item) {
			self.queue.push({
				created_at: new Date().valueOf(),
				item: item
			});
		}
	
		if (utils.is(item, 'object') && item.constructor.toString().match(/array/i)) {
			for (i = 0; i < item.length; i = i + 1) {
				doAdd(item[i]);
			}
		} else {
			doAdd(item);
		}
	
		return self;
	};
	
	/**
	 * Overwrite the store with something completely new.
	 *
	 * @param {Array} items The new array of data.
	 *
	 * @return {Queue} - Returns the instance of the queue.
	 */
	Queue.prototype.replace = function (items) {
		if (utils.is(items, 'object') && items.constructor.toString().match(/array/i)) {
			this.queue = [];
			this.add(items).save();
	
			return this;
		}
	
		var invalidArg = new Error('Argument invalid, must be an array.');
		utils.broadcast('oErrors', 'log', {
			error: invalidArg.message,
			info: { module: 'o-tracking' }
		});
		throw invalidArg;
	};
	
	/**
	 * Pop the first item from the queue.
	 *
	 * @return {Object} The item.
	 */
	Queue.prototype.shift = function () {
		if (this.queue.length === 0) {
			return null;
		}
	
		var item = this.queue.shift().item;
	
		this.save();
	
		return item;
	};
	
	/**
	 * Save the current store to localStorage so that old requests can still be sent after a page refresh.
	 *
	 * @return {Queue} - Returns the instance of the queue.
	 */
	Queue.prototype.save = function () {
		this.storage.write(this.queue);
	
		return this;
	};
	
	module.exports = Queue;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
		xhr: __webpack_require__(256),
		sendBeacon: __webpack_require__(257),
		image: __webpack_require__(258),
		get: function get(name) {
			return this.mock || this[name];
		}
	};

/***/ },
/* 256 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function () {
		var xhr = new window.XMLHttpRequest();
	
		return {
			send: function send(url, data) {
				xhr.open('POST', url, true);
				xhr.withCredentials = true;
				xhr.setRequestHeader('Content-type', 'application/json');
				xhr.send(data);
			},
			complete: function complete(callback) {
				xhr.onerror = function () {
					callback(this);
				};
				xhr.onload = function () {
					if (xhr.status >= 200 && xhr.status < 300) {
						callback();
					} else {
						callback('Incorrect response: ' + xhr.status);
					}
				};
			}
		};
	};

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = function () {
	    var resolver = void 0;
	    var rejecter = void 0;
	    var p = new _promise2.default(function (resolve, reject) {
	        resolver = resolve;
	        rejecter = reject;
	    });
	    return {
	        send: function send(url, data) {
	            if (navigator.sendBeacon(url, data)) {
	                resolver();
	            } else {
	                rejecter(new Error('Failed to send beacon event: ' + data.toString()));
	            }
	        },
	        complete: function complete(callback) {
	            callback && p.then(callback, callback);
	        }
	    };
	};

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(249);
	
	module.exports = function () {
		var image = new Image(1, 1);
	
		return {
			send: function send(url, data) {
				image.src = url + '?data=' + utils.encode(data);
			},
			complete: function complete(callback) {
				if (image.addEventListener) {
					image.addEventListener('error', callback);
					image.addEventListener('load', function () {
						return callback();
					});
				} else {
					// it's IE!
					image.attachEvent('onerror', callback);
					image.attachEvent('onload', function () {
						return callback();
					});
				}
			}
		};
	};

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var Core = __webpack_require__(260);
	var utils = __webpack_require__(249);
	
	/**
	 * Default properties for page tracking requests.
	 *
	 * @return {Object} - The default properties for pages.
	 */
	var defaultPageConfig = function defaultPageConfig() {
		return {
			category: 'page',
			action: 'view',
			context: {
				url: document.URL,
				referrer: document.referrer
			},
	
			async: true // Send this event asyncronously - as sync doesn't work in FF, as it doesn't send cookies. https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#withCredentials
		};
	};
	
	/**
	 * Make the page tracking request.
	 *
	 * @param {Object} config - Configuration object. If omitted, will use the defaults.
	 * @param {Function} callback - Callback function. Called when request completed.
	 * @return {undefined}
	 */
	function page(config, callback) {
		config = utils.merge(defaultPageConfig(), {
			context: config
		});
	
		// New PageID for a new Page.
		Core.setRootID();
		Core.track(config, callback);
	
		// Alert internally that a new page has been tracked - for single page apps for example.
		utils.triggerPage();
	}
	
	/**
	 * Listener for pages.
	 *
	 * @param {CustomEvent} e - The CustomEvent
	 * @private
	 * @return {undefined}
	 */
	function listener(e) {
		page(e.detail);
	}
	
	module.exports = page;
	module.exports.init = function () {
		utils.addEvent(window, 'oTracking.page', listener);
	};

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var Send = __webpack_require__(253);
	var User = __webpack_require__(248);
	var Session = __webpack_require__(252);
	
	/**
	 * Shared 'internal' scope.
	 * @type {Object}
	 */
	var settings = __webpack_require__(247);
	var utils = __webpack_require__(249);
	
	/**
	 * Default properties for sending a tracking request.
	 * @type {Object}
	 * @return {Object} - The default settings for the component.
	 */
	var defaultConfig = function defaultConfig() {
		return {
			async: true,
			callback: function callback() {},
			system: {},
			context: {},
			user: {
				passport_id: utils.getValueFromCookie(/USERID=([0-9]+):/) || utils.getValueFromCookie(/PID=([0-9]+)\_/),
				ft_session: utils.getValueFromCookie(/FTSession=([^;]+)/)
			}
		};
	};
	
	/**
	 * Generate and store a new rootID.
	 * @param {string} new_id - Optional rootID, if you want to use your own. Otherwise we'll create one for you.
	 * @return {string|*} The rootID.
	 */
	function setRootID(new_id) {
		settings.set('root_id', requestID(new_id));
		return settings.get('root_id');
	}
	
	/**
	 * Get rootID.
	 * @return {string|*} The rootID.
	 */
	function getRootID() {
		var root_id = settings.get('root_id');
	
		if (utils.isUndefined(root_id)) {
			root_id = setRootID();
		}
	
		return root_id;
	}
	
	/**
	 * Create a requestID (unique identifier) for the page impression.
	 *
	 * @param {string} request_id - Optional RequestID, if you want to use your own. Otherwise will create one for you.
	 *
	 * @return {string|*} The RequestID.
	 */
	function requestID(request_id) {
		if (utils.isUndefined(request_id)) {
			request_id = utils.guid();
		}
	
		return request_id;
	}
	
	/**
	 * Make a tracking request.
	 *
	 * @param {Object} config - Should be passed an object containing a format and the values for that format
	 * @param {function} callback - Fired when the request has been made.
	 *
	 * @return {Object} request
	 */
	function track(config, callback) {
		if (utils.isUndefined(callback)) {
			callback = function callback() {};
		}
	
		var coreContext = settings.get('config') && settings.get('config').context || {};
		config.context = utils.merge(coreContext, config.context);
	
		var request = utils.merge(defaultConfig(), utils.merge(config, { callback: callback }));
	
		var session = Session.session();
	
		/* Values here are kinda the mandatory ones, so we want to make sure they're possible. */
		request = utils.merge({
			context: {
				id: requestID(request.id), // Keep an ID if it's been set elsewhere.
				root_id: getRootID()
			},
	
			user: settings.get('config') ? settings.get('config').user : {},
	
			device: {
				spoor_session: session.id,
				spoor_session_is_new: session.isNew,
				spoor_id: User.userID()
			}
		}, request);
	
		utils.log('Core.Track', request);
		// Send it.
		Send.addAndRun(request);
	
		return request;
	}
	
	module.exports = {
		setRootID: setRootID,
		getRootID: getRootID,
		track: track
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var Core = __webpack_require__(260);
	var utils = __webpack_require__(249);
	
	/**
	 * Default properties for events.
	 *
	 * @type {Object}
	 * @return {Object} - Default configuration for events
	 */
	var defaultEventConfig = function defaultEventConfig() {
		return {
			category: 'event',
			action: 'generic',
			context: {}
		};
	};
	
	/**
	 * Track an event.
	 *
	 * @param {Event} trackingEvent - The event, which could the following properties in its 'detail' key:
	 *   [category] - The category, for example: video
	 *   [action] - The action performed, for example: play
	 *   [component_id] - Optional. The ID for the component instance.
	 *
	 * @param {Function} callback - Optional, Callback function. Called when request completed.
	 * @return {undefined}
	 */
	function event(trackingEvent, callback) {
		if (utils.is(trackingEvent.detail.category) || utils.is(trackingEvent.detail.action)) {
			var noCategoryActionVals = 'Missing category or action values';
			utils.broadcast('oErrors', 'log', {
				error: noCategoryActionVals,
				info: { module: 'o-tracking' }
			});
			throw noCategoryActionVals;
		}
	
		var config = utils.merge(defaultEventConfig(), {
			category: trackingEvent.detail.category,
			action: trackingEvent.detail.action,
			context: trackingEvent.detail
		});
	
		delete config.context.category;
		delete config.context.action;
	
		var origamiElement = getOrigamiEventTarget(trackingEvent);
		if (origamiElement) {
			config.context.component_name = origamiElement.getAttribute('data-o-component');
			config.context.component_id = config.context.component_id || getComponentId(origamiElement);
		} else {
			config.context.component_name = config.context.component_name;
			config.context.component_id = config.context.component_id;
		}
	
		Core.track(config, callback);
	}
	
	/**
	 * Helper function that gets the target of an event if it's an Origami component
	 * @param  {Event} event - The event triggered.
	 * @return {HTMLElement|undefined} - Returns the HTML element if an Origami component, else undefined.
	 */
	function getOrigamiEventTarget(event) {
		// IE backwards compatibility (get the actual target). If not IE, uses
		// `event.target`
		var element = event.target || event.srcElement;
	
		if (element && element.getAttribute('data-o-component')) {
			return element;
		} else {
			return;
		}
	}
	
	/**
	 * Helper function that generates a component id based on its xpath
	 *
	 * @param {HTMLElement} element - The HTML Element to gen an ID for.
	 *
	 * @return {string} hash
	 */
	function getComponentId(element) {
		var path = _getElementPath(element);
	
		if (typeof path === 'undefined') {
			return;
		}
	
		// Select the source element (first item in the ordered sequence `path`)
		var srcElement = path[0];
	
		// Because, you could have two identical elements in the DOM as siblings,
		// we need to determine the 'sibling index': the order they're sitting within a DOM node.
		// Although in reality this is unlikely to always be the same, it's just a
		// best guess - unless child elements are always appended to an element rather than added as the first child.
		var siblingIndex = function getSiblingIndex(element) {
			var srcParent = element.parentElement;
			if (srcParent) {
				for (var i = 0; i < srcParent.childNodes.length; i++) {
					if (srcParent.childNodes[i] === srcElement) {
						return i;
					}
				}
				return -1;
			} else {
				return 0;
			}
		}(srcElement);
	
		// Generate a normalised string (normalising browser quirks) from the sequence of elements
		var normalisedStringPath = path.reduceRight(function (builder, el) {
			if (!el.nodeName) {
				return builder + ' - ' + el.constructor.name + '\n';
			}
	
			var nodeName = el.nodeName.toLowerCase();
	
			// In some browsers, document is prepended with a '#'
			if (nodeName.indexOf('#') === 0) {
				return builder + '<' + nodeName + '>';
			}
	
			// Replace this stuff with stuff that makes each node unique - without including styling detail (as this may change depending on animation state etc, position)
			return builder + '<' + nodeName + ' id="' + (el.id || '') + '">';
		}, '');
	
		// Append a sibling index to the string and use some simple, off the shelf string hashing algorithm.
		return _generateHash(normalisedStringPath + '_siblingIndex=' + siblingIndex);
	}
	
	/**
	 * Gets the xpath for an element
	 *
	 * @param  {HTMLElement} element - The element to get a path for.
	 *
	 * @private
	 *
	 * @return {array} The xpath
	 */
	function _getElementPath(element) {
		var path = [];
	
		while (element) {
			path.push(element);
			element = element.parentElement;
		}
	
		return path;
	}
	
	/**
	 * JS Implementation of MurmurHash2
	 *
	 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
	 * @see http://github.com/garycourt/murmurhash-js
	 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
	 * @see http://sites.google.com/site/murmurhash/
	 * Copyright (c) 2011 Gary Court
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @param {string} str  - The string to hash, ASCII only.
	 *
	 * @return {number} 32-bit positive integer hash
	 *
	 * @private
	 */
	function _generateHash(str) {
		var l = str.length;
		var h = 1 ^ l;
		var i = 0;
		var k = void 0;
	
		while (l >= 4) {
			k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
	
			k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
			k ^= k >>> 24;
			k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
	
			h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;
	
			l -= 4;
			++i;
		}
	
		switch (l) {
			case 3:
				h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
				break;
			case 2:
				h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
				break;
			case 1:
				h ^= str.charCodeAt(i) & 0xff;
				h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
		}
	
		h ^= h >>> 13;
		h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
		h ^= h >>> 15;
	
		return h >>> 0;
	}
	
	module.exports = event;
	module.exports.init = function () {
		utils.addEvent(window, 'oTracking.event', event);
	};

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	/*global module, require, window */
	/*eslint-disable*/
	'use strict';
	/*eslint-enable*/
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Queue = __webpack_require__(254);
	var Core = __webpack_require__(260);
	var utils = __webpack_require__(249);
	var internalQueue = void 0;
	
	/**
	 * Default properties for events.
	 *
	 * @type {Object}
	 * @return {Object} The default link configuration.
	 */
	var defaultLinkConfig = function defaultLinkConfig() {
		return {
			category: 'link',
			action: 'click',
			context: {}
		};
	};
	
	var callback = function callback() {};
	
	/**
	 * Check if a URL is going to the same site (internal)
	 *
	 * @param {string} url - The url to check.
	 *
	 * @return {boolean} - Result of internal url.
	 * @private
	 */
	function isInternal(url) {
		return url.indexOf(window.document.location.hostname) > -1;
	}
	
	/**
	 * Check if a URL is going to an external site.
	 *
	 * @param {string} url - The url to check.
	 *
	 * @return {boolean} - The result of external url.
	 * @private
	 */
	function isExternal(url) {
		return !isInternal(url);
	}
	
	/**
	 * Checks if a URL is pointing at a file.
	 * NOTE: Don't want to maintain a list of file extensions, so try best guess.
	 *
	 * @param {string} url - The url to check.
	 *
	 * @return {boolean} - The result if a url is a file location.
	 * @private
	 */
	function isFile(url) {
		var path = url.replace(/^\w+:\/\//, '').replace(/(#|\?).+/g, '').replace(/\/$/, '');
	
		// It must have a slash to have a file path
		if (path.indexOf('/') === -1) {
			return false;
		}
	
		// No extension
		if (!path.match(/\.(\w{2,4})$/)) {
			return false;
		}
	
		// Obviously a web page.
		if (['html', 'htm', 'php'].indexOf(RegExp.$1) > -1) {
			return false;
		}
	
		return true;
	}
	
	/**
	 * Calculates the parents of a HTML element.
	 *
	 * @param {Element} element - The starting element.
	 *
	 * @return {array} The tree of parent elements.
	 * @private
	 */
	function parentTree(element) {
		if (!element) {
			return [];
		}
	
		var tree = [element];
	
		if (element.nodeName === 'BODY') {
			return tree;
		}
	
		return tree.concat(parentTree(element.parentElement));
	}
	
	/**
	 * Create the identifier of the link. TODO: https://rally1.rallydev.com/#/16966478977d/detail/defect/17919485944
	 *
	 * @param {Element} link - The link element.
	 *
	 * @return {string} The ID for the link.
	 * @private
	 */
	function createLinkID(link) {
		var parents = parentTree(link);
		/*
	 let name = link.href || link.text || link.name || link.id;
	 	name = name.replace(/^http:\/\/[\w\.\:]+/, '') // Remove http://[something].
	 	.replace(/^\//, '') // Remove slash at beginning
	 	.replace(/(\?|#).*$/, '') // Remove query string and page anchor (#)
	 	.replace(/\/$/, '') // Remove trailing slash
	 	.replace(/\.[a-z]{3,4}$/, ''); // Remove final '.com' or similar
	 	// If it's an external URL
	 if (name === '') {
	 	name = link.href.replace(/^http:\/\//, '').split('?')[0].replace(/\/$/, '');
	 }
	 	// Last 2 items of URL
	 name = name.split('/').slice(-2).filter(function (obj) { return (obj); });
	 	// If uuid then take final value only
	 if (name.slice(-1)[0].match(/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}/)) {
	 	name = name.slice(-1);
	 }
	 	// Remove slashes as final outcome is slash delimited
	 name = (name.length > 1 ? name.slice(0, 2).join('-') : name[0]).toLowerCase();
	 */
		return parents.map(function (p) {
			return p.getAttribute('data-position') || p.getAttribute('data-trackable') || p.tagName.toLowerCase() + ((p.id ? '#' + p.id : '') || (p.className ? '.' + p.className.split(' ')[0] : ''));
		}).filter(function (e, i, arr) {
			return arr.lastIndexOf(e) === i;
		}).reverse();
	}
	
	/**
	 * Track the link.
	 *
	 * @param {Element} element - The element being tracked.
	 * @param {Object} click_config - Supplementary config.
	 *
	 * @return {Object|boolean} - If synscronous, returns when the tracking event is sent, if async, returns true immediately.
	 */
	function track(element, click_config) {
		if (utils.isUndefined(click_config)) {
			click_config = {};
		}
	
		var identifier = createLinkID(element);
	
		var config = utils.merge(defaultLinkConfig(), {
			category: ['BUTTON', 'INPUT', 'SELECT'].indexOf(element.tagName) > -1 ? element.tagName.toLowerCase() : 'link',
			context: {
				link: utils.merge({
					dom_path: identifier.join(' | '),
					dom_path_tokens: identifier,
					node_name: element.tagName,
					source_id: Core.getRootID(),
					destination: element.href,
					text: (['INPUT', 'SELECT'].indexOf(element.tagName) > -1 ? element.name : element.text).toString().trim(),
					is_internal: isInternal(element.href)
				}, click_config)
			}
		});
	
		if (isExternal(element.href) || isFile(element.href)) {
			// Send now
			config.async = false;
			return Core.track(config, callback);
		}
	
		if (isInternal(element.href)) {
			// Queue and send on next page.
			internalQueue.add(config).save();
		}
	
		return true;
	}
	
	/**
	 * Handle a click event.
	 *
	 * @param {Event} event - The event.
	 *
	 * @return {boolean} - Returns the result of the tracking request
	 * @private
	 */
	function clickEvent(event) {
		return track(event.target);
	}
	
	/**
	 * Set the callback called on every link tracking event.
	 *
	 * @param {Function} cb - The callback.
	 * @return {undefined}
	 */
	function onClick(cb) {
		callback = cb;
	}
	
	/**
	 * If there are any requests queued, attempts to send the next one
	 * Otherwise, does nothing
	 * @return {undefined}
	 */
	function runQueue() {
		var next = function next() {
			runQueue();callback();
		};
		var nextLink = internalQueue.shift();
		if (nextLink) {
			Core.track(nextLink, next);
		}
	}
	
	/**
	 * Listener for links.
	 *
	 * @param {CustomEvent} e - The CustomEvent
	 * @private
	 * @return {undefined}
	 */
	function listener(e) {
		track(e.detail);
	}
	
	/**
	 * Setup and initialise link tracking.
	 *
	 * @param {Object}  config - Initial configuration
	 * @param {Element} config.root - Optional. The root element to search for links. Defaults to window.document - useful if trying to track links from an iframe.
	 * @param {string}  config.selector - Optional. The selector to use to search for links. Defaults to 'a'.
	 * @param {string}  config.event - Optional. The event to listen on. Defaults to 'click'.
	 * @param {array}   config.links - Optional. If you've already worked out the links to track, then this is used to pass them over. Must be an array with elements that accept events.
	 *
	 * @return {array} The links setup in this init.
	 */
	function init(config) {
		var links = void 0;
		var i = void 0;
	
		internalQueue = new Queue('links');
	
		runQueue();
	
		// Listen for page requests. If this is a single page app, we can send link requests now.
		utils.onPage(runQueue);
	
		if (utils.isUndefined(config)) {
			config = {};
		}
		config = utils.merge({
			root: window.document,
			selector: 'a',
			event: 'click',
			links: null
		}, config);
	
		if (config.hasOwnProperty('callback')) {
			callback = config.callback;
		}
	
		if (config.links && utils.is(config.links, 'object') && config.links.constructor.toString().match(/array/i)) {
			links = config.links;
	
			for (i = 0; i < links.length; i = i + 1) {
				utils.addEvent(links[i], config.event, clickEvent);
			}
		} else {
			if ((0, _typeof3.default)(config.root) !== 'object' || typeof config.selector !== 'string') {
				var configException = 'If supplying a config it must have a valid root element and a selector string';
				utils.broadcast('oErrors', 'log', {
					error: configException,
					info: { module: 'o-tracking' }
				});
				throw configException;
			}
	
			utils.addEvent(config.root, config.event, function (event) {
				if (event.target.tagName === config.selector.toUpperCase()) {
					clickEvent.call(event.target, event);
				}
			});
		}
	
		utils.addEvent(window, 'oTracking.link', listener);
	}
	
	module.exports = {
		init: init,
		onClick: onClick,
		track: track
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(264);

/***/ },
/* 264 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	/*global module*/
	
	/**
	 * Detect IE 8 through injected conditional comments:
	 * no UA detection, no need for conditional compilation or JS check
	 * @return {Bool} true if the browser is IE 8
	 */
	var isIE8 = function () {
		var b = document.createElement('B');
		var docElem = document.documentElement;
		var isIE = void 0;
	
		b.innerHTML = '<!--[if IE 8]><b id="ie8test"></b><![endif]-->';
		docElem.appendChild(b);
		isIE = !!document.getElementById('ie8test');
		docElem.removeChild(b);
		return isIE;
	}();
	
	/**
	 * Grab grid properties surfaced in html:after's content
	 * @return {Object} layout names and gutter widths
	 */
	function getGridProperties() {
		// Contained in a try/catch as it should not error if o-grid styles are not (deliberately or accidentally) loaded
		// e.g. o-tracking will always try to read this property, but the page is not obliged to use o-grid for layout
		try {
			var gridProperties = window.getComputedStyle(document.documentElement, ':after').getPropertyValue('content');
			// Firefox computes: "{\"foo\": \"bar\"}"
			// We want readable JSON: {"foo": "bar"}
			gridProperties = gridProperties.replace(/'/g, '').replace(/\\/g, '').replace(/^"/, '').replace(/"$/, '');
			return JSON.parse(gridProperties);
		} catch (e) {
			return {};
		}
	}
	
	/**
	 * Grab the current layout
	 * @return {String} Layout name
	 */
	function getCurrentLayout() {
		if (isIE8) {
			return 'L';
		}
	
		return getGridProperties().layout;
	}
	
	/**
	 * Grab the current space between columns
	 * @return {String} Gutter width in pixels
	 */
	function getCurrentGutter() {
		if (isIE8) {
			return '20px';
		}
	
		return getGridProperties().gutter;
	}
	
	exports.default = {
		getCurrentLayout: getCurrentLayout,
		getCurrentGutter: getCurrentGutter
	};
	module.exports = exports['default'];

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Timing = __webpack_require__(266);
	var Cta = __webpack_require__(267);
	var Copy = __webpack_require__(271);
	var Attention = __webpack_require__(272);
	var Positional = __webpack_require__(273);
	
	var NextEvents = function NextEvents() {};
	
	NextEvents.prototype.init = function () {
	
		// Initialise any call-to-action tracking code
		this.cta = new Cta();
		this.cta.track(document.body);
	
		// text copy -> clipboard tracking
		this.copy = new Copy(document.body);
		this.copy.track();
		this.attention = new Attention();
		this.attention.init();
	
		this.positional = new Positional();
		this.positional.init(document);
	
		// Nav timing - https://developer.mozilla.org/en-US/docs/Navigation_timing
		new Timing().track();
	};
	
	NextEvents.prototype.destroy = function () {
		this.cta.destroy();
	};
	
	module.exports = new NextEvents();

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var broadcast = __webpack_require__(203).broadcast;
	
	// ordered performance timing events that are fired
	var timingEvents = ['navigationStart', 'unloadEventStart', 'unloadEventEnd', 'redirectStart', 'redirectEnd', 'fetchStart', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'connectEnd', 'secureConnectionStart', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domInteractive', 'domContentLoadedEventStart', 'domContentLoadedEventEnd', 'domComplete', 'loadEventStart', 'loadEventEnd'];
	
	var getOffsets = function getOffsets(performance) {
		var timing = performance.timing;
		return ['navigationStart', 'domLoading'].reduce(function (offsets, offsetEvent) {
			var offsetTime = timing[offsetEvent];
			offsets[offsetEvent] = timingEvents.slice(timingEvents.indexOf(offsetEvent) + 1).reduce(function (events, event) {
				var eventTime = timing[event];
				if (eventTime) {
					events[event] = eventTime - offsetTime;
				}
				return events;
			}, {});
			return offsets;
		}, {});
	};
	
	var getMarks = function getMarks(performance) {
		return performance.getEntriesByType ? performance.getEntriesByType('mark').reduce(function (marks, mark) {
			marks[mark.name] = Math.round(mark.startTime);
			return marks;
		}, {}) : {};
	};
	
	var getCustom = function getCustom(window, performance) {
		var custom = {};
		// first paint metric, cribbed from https://github.com/addyosmani/timing.js/blob/master/timing.js
		var chromeObj = window.chrome;
		if (chromeObj && chromeObj.loadTimes) {
			var chromeLoadTimes = chromeObj.loadTimes();
			custom.firstPaint = Math.round(chromeLoadTimes.firstPaintTime * 1000 - chromeLoadTimes.startLoadTime * 1000);
		} else if (typeof performance.timing.msFirstPaint === 'number') {
			custom.firstPaint = performance.timing.msFirstPaint - performance.timing.navigationStart;
		}
	
		return custom;
	};
	
	var NavigationTiming = function NavigationTiming() {};
	
	NavigationTiming.prototype.track = function () {
		window.addEventListener('load', function () {
			var performance = window.performance || window.webkitPerformance || window.msPerformance || window.mozPerformance;
			if (!performance || !('timing' in performance) || !/spoor-id=0/.test(document.cookie)) {
				return false;
			}
	
			setTimeout(function () {
				var offsets = getOffsets(performance);
				var marks = getMarks(performance);
				var custom = getCustom(window, performance);
	
				broadcast('oTracking.event', {
					category: 'page-load',
					action: 'timing',
					timings: { offsets: offsets, marks: marks, custom: custom }
				});
			}, 0);
		});
	};
	
	module.exports = NavigationTiming;

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getDomPath = __webpack_require__(268);
	var getDomPathString = __webpack_require__(269);
	var getHref = __webpack_require__(270);
	var Delegate = __webpack_require__(141);
	
	var broadcast = __webpack_require__(203).broadcast;
	
	var CTA = function CTA() {
		this.allowedElementsSelector = 'a, button, input[type="checkbox"]';
		this.delegate = new Delegate();
	};
	
	// Event delegate for all clicks on the document. Rebroadcasts them as
	// 'trackable' events if the approriate data attribute is found.
	CTA.prototype.track = function (root) {
		this.delegate.root(root);
		this.clickHandler = function (e, element) {
			var nodeName = element.nodeName.toLowerCase();
			var isTrackable = element.hasAttribute('data-trackable');
	
			if (!isTrackable) {
				return true;
			}
	
			var ariaPressed = element.getAttribute('aria-pressed');
			var href = getHref(element);
	
			var meta = element.getAttribute('data-trackable-meta');
			meta = meta ? JSON.parse(meta) : {};
	
			meta.nodeName = nodeName;
			meta.domPath = getDomPathString(element);
			meta.textContent = element.textContent;
	
			if (href) {
				meta.destination = getHref(href);
			}
	
			// Reflect ARIA state so people can track open/close actions
			meta.aria = {
				pressed: ariaPressed === 'true',
				expanded: element.getAttribute('aria-expanded') === 'true',
				role: element.getAttribute('role')
			};
	
			// FIXME - DEPRECATED in favour of `meta.aria` remove this hack once
			// everyone's updated their markup and js '' is for backwards
			// compatibility with the oft used but mistaken
			// practice of using the existence of aria-pressed as the flag, rather
			// than its value
			meta.domPressed = ariaPressed === 'true' || ariaPressed === '';
	
			meta.domPathTokens = getDomPath(element, []).reverse();
			meta.target = element.getAttribute('data-trackable');
			meta.conceptId = element.getAttribute('data-concept-id');
			meta.contentId = element.getAttribute('data-content-id');
	
			var position = element.getAttribute('data-position');
			var siblings = element.getAttribute('data-siblings');
			var destination = element.getAttribute('href');
	
			if (position) {
				meta.position = parseInt(position);
			}
	
			if (siblings) {
				meta.siblings = parseInt(siblings);
			}
	
			if (destination) {
				meta.destination = destination;
			}
	
			meta.category = 'click';
			meta.action = 'cta';
			meta.referrer = document.referrer;
			meta.url = document.location.href;
			broadcast('oTracking.event', meta);
		}.bind(this);
	
		// Event capture avoids missing events that has been prevented from bubbling
		this.delegate.on('click', this.allowedElementsSelector, this.clickHandler, true);
	};
	
	CTA.prototype.destroy = function () {
		this.delegate.destroy();
	};
	
	module.exports = CTA;

/***/ },
/* 268 */
/***/ function(module, exports) {

	'use strict';
	
	/*
	
	Given an element this will return the _trackable path_ by traversing the DOM
	ancestors.
	
	Any ancestor with a `data-trackable` attribute will be added to the _path_.
	
	Eg,
	
		<div data-trackable="foo">
			<ul>
				<li data-trackable="item 1">
					<button data-trackable="hello">hello</button>
				<li data-trackable="item 2" data-trackable-once> // handler removed after first interactiton
					..
				<li data-trackable="item 3">
					<span></span>
		</div>
	
	So, given the BUTTON element, `getDomPath` will return `['hello', 'item 1', 'foo']`.
	
	Given SPAN `getDomPath` will return `['item 3 | foo']`.
	
	*/
	var getDomPath = function getDomPath(el, path, depth) {
	
		depth = depth || 0;
	
		if (!el.parentNode) {
			return path;
		}
	
		// Transponse the parent node where the target element is a text node
		if (path.length === 0 && el.nodeType === Node.TEXT_NODE) {
			el = el.parentNode;
		}
	
		var trackable = el.getAttribute('data-trackable');
	
		if (trackable) {
			path.push(trackable);
		}
	
		var trackableOnce = el.hasAttribute('data-trackable-once');
	
		// Only track some elements once per page
		if (trackableOnce && depth === 0) {
			el.removeAttribute('data-trackable');
		}
	
		// Terminate the path traversal
		if (el.hasAttribute('data-trackable-terminate')) {
			return path;
		}
	
		return getDomPath(el.parentNode, path, depth + 1);
	};
	
	module.exports = getDomPath;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getDomPath = __webpack_require__(268);
	
	var getDomPathString = function getDomPathString(element) {
		return getDomPath(element, []).reverse().join(' | ');
	};
	
	module.exports = getDomPathString;

/***/ },
/* 270 */
/***/ function(module, exports) {

	'use strict';
	
	var getHref = function getHref(el, path) {
	
		if (!el.parentNode) {
			return path;
		}
	
		var href = el.getAttribute('href');
	
		if (href) {
			var a = document.createElement('a');
			a.href = href;
			return a.protocol + '//' + a.hostname + a.pathname;
		}
	
		return getHref(el.parentNode, path);
	};
	
	module.exports = getHref;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var broadcast = __webpack_require__(203).broadcast;
	
	var Copy = function Copy(root) {
		this.root = root || document;
	};
	
	Copy.prototype.track = function () {
	
		this.root.addEventListener('copy', function (e) {
	
			var element = e.target;
			var data = {
				action: 'copy',
				category: 'text',
				context: {
					nodeName: element.nodeName.toLowerCase(),
					product: 'next'
				}
			};
	
			if (window.getSelection) {
				var selection = window.getSelection().toString();
				data.context.characters = selection.length;
				data.context.words = Math.ceil(selection.split(/\b/).length / 2);
				if (selection.length > 100) {
					data.selection = selection.substr(0, 47) + ' ... ' + selection.substr(-47);
				} else {
					data.selection = selection;
				}
			}
			broadcast('oTracking.event', data);
		});
	};
	
	module.exports = Copy;

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var oViewport = __webpack_require__(143);
	var broadcast = __webpack_require__(203).broadcast;
	var ATTENTION_INTERVAL = 5000;
	var ATTENTION_EVENTS = ['load', 'click', 'focus', 'scroll', 'mousemove', 'touchstart', 'touchend', 'touchcancel', 'touchleave'];
	var UNATTENTION_EVENTS = ['blur'];
	var eventToSend = 'onbeforeunload' in window ? 'beforeunload' : 'unload';
	
	var Attention = function () {
		function Attention() {
			(0, _classCallCheck3.default)(this, Attention);
	
			this.totalAttentionTime = 0;
			this.startAttentionTime;
			this.endAttentionTime;
		}
	
		Attention.prototype.init = function init() {
			var _this = this;
	
			//Add events for all the other Attention events
			for (var i = 0; i < ATTENTION_EVENTS.length; i++) {
				window.addEventListener(ATTENTION_EVENTS[i], function (ev) {
					return _this.startAttention(ev);
				});
			}
	
			for (var _i = 0; _i < UNATTENTION_EVENTS.length; _i++) {
				window.addEventListener(UNATTENTION_EVENTS[_i], function (ev) {
					return _this.endAttention(ev);
				});
			}
	
			oViewport.listenTo('visibility');
			document.body.addEventListener('oViewport.visibility', function (ev) {
				return _this.handleVisibilityChange(ev);
			}, false);
	
			this.addVideoEvents();
	
			// Add event to send data on unload
			window.addEventListener(eventToSend, function () {
				_this.endAttention();
				broadcast('oTracking.event', {
					category: 'page',
					action: 'interaction',
					context: {
						attention: {
							total: _this.totalAttentionTime
						}
					}
				});
			});
		};
	
		Attention.prototype.startAttention = function startAttention() {
			var _this2 = this;
	
			clearTimeout(this.attentionTimeout);
			if (!this.startAttentionTime) {
				this.startAttentionTime = new Date().getTime();
			}
			this.attentionTimeout = setTimeout(function () {
				return _this2.endAttention();
			}, ATTENTION_INTERVAL);
		};
	
		Attention.prototype.startConstantAttention = function startConstantAttention() {
			var _this3 = this;
	
			this.constantAttentionInterval = setInterval(function () {
				return _this3.startAttention();
			}, ATTENTION_INTERVAL);
		};
	
		Attention.prototype.endConstantAttention = function endConstantAttention() {
			this.endAttention();
			clearInterval(this.constantAttentionInterval);
		};
	
		Attention.prototype.endAttention = function endAttention() {
			if (this.startAttentionTime) {
				this.endAttentionTime = new Date().getTime();
				this.totalAttentionTime += Math.round((this.endAttentionTime - this.startAttentionTime) / 1000);
				clearTimeout(this.attentionTimeout);
				this.startAttentionTime = null;
			}
		};
	
		Attention.prototype.addVideoEvents = function addVideoEvents() {
			var _this5 = this;
	
			this.videoPlayers;
			if (window.FTVideo) {
				this.videoPlayers = document.getElementsByClassName('BrightcoveExperience');
				for (var i = 0; i < this.videoPlayers.length; i++) {
					window.FTVideo.createPlayerAsync(this.videoPlayers[i].id, function (player) {
						var _this4 = this;
	
						player.on(player.MEDIA_PLAY_EVENT, function (ev) {
							return _this4.startConstantAttention(ev);
						});
						player.on(player.MEDIA_STOP_EVENT, function (ev) {
							return _this4.endConstantAttention(ev);
						});
					});
				}
			} else {
				this.videoPlayers = document.getElementsByTagName('video');
				for (var _i2 = 0; _i2 < this.videoPlayers.length; _i2++) {
					this.videoPlayers[_i2].addEventListener('playing', function (ev) {
						return _this5.startConstantAttention(ev);
					});
					this.videoPlayers[_i2].addEventListener('pause', function (ev) {
						return _this5.endConstantAttention(ev);
					});
					this.videoPlayers[_i2].addEventListener('ended', function (ev) {
						return _this5.endConstantAttention(ev);
					});
				}
			}
		};
	
		Attention.prototype.handleVisibilityChange = function handleVisibilityChange(ev) {
			if (ev.detail.hidden) {
				this.endAttention();
			} else {
				this.startAttention();
			}
		};
	
		return Attention;
	}();
	
	module.exports = Attention;

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Delegate = __webpack_require__(141);
	
	var $ = function $(q) {
		return [].slice.call(q);
	};
	
	var Positional = function () {
		function Positional() {
			(0, _classCallCheck3.default)(this, Positional);
	
			this.delegate = new Delegate();
		}
	
		Positional.prototype.init = function init(el) {
			$(el.querySelectorAll('[role=main] section')).forEach(function (section) {
				$(section.querySelectorAll('article')).forEach(function (article, index, articles) {
					$(article.querySelectorAll('a')).forEach(function (link) {
						link.setAttribute('data-position', index + 1);
						link.setAttribute('data-siblings', articles.length);
					});
				});
			});
		};
	
		Positional.prototype.destroy = function destroy() {
			this.delegate.destroy();
		};
	
		return Positional;
	}();
	
	module.exports = Positional;

/***/ },
/* 274 */
/***/ function(module, exports) {

	'use strict';
	
	// Loads Google Floodlight
	module.exports = function (flags) {
	
		var isAnonymous = !/FTSession/.test(document.cookie);
		var spoorId = /spoor-id=([^;]+)/.exec(document.cookie);
		var host = 'https://4235225.fls.doubleclick.net/activityi;src=4235225';
	
		// sign-up attributes
		var c = document.querySelector(['data-signup-country']);
		var t = document.querySelector(['data-signup-term']);
		var o = document.querySelector(['data-signup-offer']);
	
		var country = c ? c.getAttribute('data-signup-country') : undefined;
		var term = t ? c.getAttribute('data-signup-term') : undefined;
		var offer = o ? c.getAttribute('data-signup-offer') : undefined;
	
		// sign-up funnel flags
		var isSignUpForm = /^\/signup/.test(location.pathname);
		var isSubscriptionConfirmation = /^\/thank-you/.test(location.pathname);
		var isTrialConfirmation = /(4998d861-8960-a8d1-3738-eae97bcd07a2|41218b9e-c8ae-c934-43ad-71b13fcb4465)/.test(offer);
	
		var spoor = spoorId ? spoorId[1] : '';
	
		if (flags && flags.get('floodlight') && isAnonymous && spoorId) {
	
			var i = new Image();
	
			if (isSignUpForm) {
				i.src = host + ';type=signu107;cat=ft-ne00;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;ord=1';
			} else if (isSubscriptionConfirmation) {
				i.src = host + ';type=trans658;cat=ft-ne0;qty=1;u5=' + offer + ';u7=' + country + ';u8=' + term + ';u10=' + spoor + ';dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;';
			} else if (isTrialConfirmation) {
				i.src = host + ';type=trans658;cat=ft-ne00;qty=1;u5=' + offer + ';u7=' + country + ';u8=' + term + ';u10=' + spoor + ';dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;';
			} else {
				i.src = host + ';type=homeo886;cat=ft-ne000;u10=' + spoor + ';dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;ord=1;num=1';
			}
		}
	};

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	var enableChartbeat = function enableChartbeat() {
		window._sf_async_config = {
			uid: 14181,
			domain: 'next.ft.com', // Leave this as next.ft.com, even after it changes to ft.com
			useCanonical: true
		};
	
		// HACK: If the user is on the front page override the path so that it is different depending on the edition.
		// Use a path that looks like the old-style FT.com front pages so that they still sort of make sense.
		if (location.pathname === '/' && document.querySelector('[data-next-edition]')) {
			window._sf_async_config.path = '/home/' + (document.querySelector('[data-next-edition]').getAttribute('data-next-edition') || '');
		}
		(0, _utils.loadScript)('//static.chartbeat.com/js/chartbeat.js');
	};
	
	// The chartbeat Heads-Up-Display (HUD) requires the chartbeat script to be loaded.
	// Editorial users who wish to use the HUD will need to toggle "chartbeatHud" on.
	// For non-HUD uses, load chartbeat for a random 20% of device IDs (i.e. users).
	/*
	Chartbeat (https://chartbeat.com) is a tracking service.
	Originally for advertising, they've moved their suite towards editorial applications.
	In this case we are only interested in the editorial; specifically the HUD (heads up display).
	Eventually this will be replaced by FT's in-house "lantern" application, utilising our own data.
	*/
	
	module.exports = function (flags) {
		if (flags.get('chartbeatHud')) {
			enableChartbeat();
		} else if (flags.get('chartbeat')) {
			var spoorId = (0, _utils.getCookieValue)('spoor-id');
			var spoorNumber = spoorId.replace(/-/g, '');
			var spoorNumberTrim = spoorNumber.substring(spoorNumber.length - 12, spoorNumber.length); // Don't overflow the int
			var spoorNumberDec = parseInt(spoorNumberTrim, 16);
			if (spoorNumberDec % 100 < 20) {
				// 20%
				enableChartbeat();
			}
		}
	};

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	function enableMouseflow() {
		window._mfq = window._mfq || [];
		window._mfq.push(['setVariable', 'spoorId', (0, _utils.getCookieValue)('spoor-id')]);
		(0, _utils.loadScript)('https://cdn.mouseflow.com/projects/3d6fc486-2914-4efc-a5ae-35a5eac972f2.js');
	}
	
	// Loads mouseflow tracking code
	module.exports = function (flags) {
	
		var isAutomatedTest = window.location.href.indexOf('backend') !== -1;
		var isSignUpApp = !!document.querySelector('html[data-next-app=signup]') && !isAutomatedTest;
		var hasLightSignup = !!document.querySelector('.o-email-only-signup');
	
		if (flags.get('mouseflowForce')) {
			enableMouseflow();
		} else if (flags.get('mouseflow')) {
	
			if (isSignUpApp) {
				enableMouseflow();
			}
			if (hasLightSignup && Math.random() <= 0.01) {
				enableMouseflow();
			} else {
				var spoorId = (0, _utils.getCookieValue)('spoor-id');
				var spoorNumber = spoorId.replace(/-/g, '');
				var spoorNumberTrim = spoorNumber.substring(spoorNumber.length - 12, spoorNumber.length); // Don't overflow the int
				var spoorNumberDec = parseInt(spoorNumberTrim, 16);
	
				if (spoorNumberDec % 100 === 0) {
					enableMouseflow();
				}
			}
		}
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	var isAllocated = function isAllocated() {
		return (/spoor-id=0/.test(document.cookie)
		);
	};
	
	// Loads Sourcepoint
	module.exports = function (flags) {
		if (flags && flags.get('sourcepoint') && isAllocated()) {
	
			document.addEventListener('sp.blocking', function () {
				(0, _utils.broadcast)('oTracking.event', {
					category: 'ads',
					action: 'blocked',
					context: {
						provider: 'sourcepoint'
					}
				});
			});
	
			var sp = document.createElement('script');
			sp.async = sp.defer = true;
			sp.src = 'https://h2.ft.com/static-files/sp/prod/long/sp/sp-2.js';
			sp.setAttribute('data-client-id', 'pHQAcgfacNTVtzm');
			document.body.appendChild(sp);
		}
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var broadcast = __webpack_require__(203).broadcast;
	
	var track = function track(componentId, componentPos) {
		return broadcast('oTracking.event', { category: 'page', action: 'scrolldepth', componentId: componentId, componentPos: componentPos });
	};
	
	var intersectionCallback = function intersectionCallback(observer, changes) {
		return changes.forEach(function (change) {
			var component = change.target;
			var componentId = component.id;
			// get the component's position
			var componentPos = [].concat((0, _toConsumableArray3.default)(document.querySelectorAll('.js-track-scroll-event'))).findIndex(function (component) {
				return component.id === componentId;
			});
			track(componentId, componentPos + 1);
			observer.unobserve(component);
		});
	};
	
	var init = function init() {
		if (!/spoor-id=0/.test(document.cookie) || !window.IntersectionObserver) {
			return false;
		}
		var observer = new IntersectionObserver(function (changes) {
			intersectionCallback(this, changes);
		});
		[].concat((0, _toConsumableArray3.default)(document.querySelectorAll('.js-track-scroll-event'))).forEach(function (component) {
			observer.observe(component);
		});
	};
	
	exports.default = { init: init };
	module.exports = exports['default'];

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(281);
	module.exports.__wrapsOrigami = true;

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(282);

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*global module*/
	
	var months = '["' + 'January,February,March,April,May,June,July,August,September,October,November,December'.split(',').join('","') + '"]';
	var days = '["' + 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(',').join('","') + '"]';
	var formats = {
		datetime: 'MMMM d, yyyy h:mm a',
		date: 'MMMM d, yyyy'
	};
	
	var compiledTemplates = {};
	
	/**
	 * See http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html for formatting conventions used
	 *
	 *Comments indicate the value returned for 3.05 pm on Tuesday 4th February 2014
	*/
	var formatReplacementsMap = {
		MMMM: 'months[date.getMonth()]', // e.g. February
		MMM: 'months[date.getMonth()].substr(0,3)', // Feb
		MM: 'pad2(date.getMonth() + 1, 2)', // 02
		M: '(date.getMonth() + 1)', // 2
		yyyy: 'date.getFullYear()', // 2014
		yy: '(""+date.getFullYear()).substr(-2, 2)', // 14
		EEEE: 'days[date.getDay()]', // Tuesday
		EEE: 'days[date.getDay()].substr(0,3)', // Tue
		d: 'date.getDate()', // 4
		dd: 'pad2(date.getDate())', // 04
		m: 'date.getMinutes()', // 5
		mm: 'pad2(date.getMinutes())', // 05
		h: '(((date.getHours() + 11) % 12) + 1)', // 3
		hh: 'pad2(((date.getHours() + 11) % 12) + 1)', // 03
		H: 'date.getHours()', // 15
		HH: 'pad2(date.getHours())', // 15
		a: '(date.getHours() >= 12 ? "pm" : "am")' // pm
	};
	
	var inSeconds = {
		minute: 60,
		hour: 60 * 60,
		day: 24 * 60 * 60,
		week: 7 * 24 * 60 * 60,
		month: 60 * 60 * 24 * 30,
		year: 365 * 24 * 60 * 60
	};
	
	var interval = void 0;
	
	function ODate(rootEl) {
		var _this = this;
	
		if (!rootEl) {
			rootEl = document.body;
		} else if (!(rootEl instanceof HTMLElement)) {
			rootEl = document.querySelector(rootEl);
		}
	
		if (rootEl.getAttribute('data-o-component') === "o-date") {
			this.el = rootEl;
		} else {
			this.el = rootEl.querySelector('[data-o-component~="o-date"]');
		}
	
		if (this.el !== undefined) {
			document.body.addEventListener('oDate.update', function () {
				_this.update();
			});
	
			this.update();
		}
	
		if (!interval) {
			interval = setInterval(function () {
				document.body.dispatchEvent(new CustomEvent('oDate.update'));
			}, 60000);
		}
	}
	
	ODate.prototype.update = function () {
		var el = this.el;
	
		var date = el.getAttribute('datetime');
		var format = el.getAttribute('data-o-date-format');
	
		var printer = el.querySelector('.o-date__printer') || el;
		var hasTextNode = printer.firstChild && printer.firstChild.nodeType === 3;
	
		if (date) {
			date = ODate.toDate(date);
		} else if (hasTextNode) {
			// Only define new date if printer is empty
			date = new Date();
		}
	
		if (!date) return;
	
		var dateString = void 0;
	
		if (format === 'today-or-yesterday-or-nothing') {
			dateString = ODate.asTodayOrYesterdayOrNothing(date);
		} else if (format === 'date-only') {
			dateString = ODate.format(date, 'date');
		} else if (format === 'time-ago-limit-4-hours') {
			dateString = ODate.timeAgo(date, { limit: 4 * inSeconds.hour });
		} else {
			dateString = ODate.ftTime(date);
		}
	
		// To avoid triggering a parent live region unnecessarily
		// <https://github.com/Financial-Times/o-date/pull/43>
		if (hasTextNode) {
			printer.firstChild.nodeValue = dateString;
		} else {
			printer.innerHTML = dateString;
		}
	
		el.title = ODate.format(date, 'datetime');
		el.setAttribute('data-o-date-js', '');
		el.setAttribute('aria-label', dateString);
	};
	
	function compile(format) {
		var tpl = formats[format] || format;
	
		var funcString = 'var months= ' + months + ', days= ' + days + ';';
		funcString += 'function pad2 (number) {return ("0" + number).slice(-2)}';
		funcString += 'return "' + tpl.replace(/\\?[a-z]+/ig, function (match) {
			if (match.charAt(0) === '\\') {
				return match.substr(1);
			}
			var replacer = formatReplacementsMap[match];
	
			return replacer ? '" + ' + replacer + ' + "' : match;
		}) + '"';
	
		return compiledTemplates[format] = new Function('date', funcString); // jshint ignore:line
	}
	
	ODate.toDate = function (date) {
		date = date instanceof Date ? date : new Date(date);
		if (date.toString() !== 'Invalid Date') {
			return date;
		}
	};
	
	ODate.format = function (date, dateFormat) {
		dateFormat = dateFormat || 'datetime';
		var tpl = compiledTemplates[dateFormat] || compile(dateFormat);
		date = ODate.toDate(date);
		return date && tpl(date);
	};
	
	ODate.getSecondsBetween = function (time, otherTime) {
		return Math.round((time - otherTime) / 1000);
	};
	
	ODate.ftTime = function (dateObj) {
		var now = new Date();
		var interval = ODate.getSecondsBetween(now, dateObj);
		var dateString = void 0;
	
		// If the date will occur in the next 5 minutes. This check is to allow for
		// reasonably differences in machine clocks.
		if (ODate.isNearFuture(interval)) {
			dateString = 'just now';
	
			// If it's beyond 5 minutes, fall back to printing the whole date, the machine
			// clock could be way out.
		} else if (ODate.isFarFuture(interval)) {
			dateString = ODate.format(dateObj, 'date');
	
			// Relative times for today or within the last 4 hours
		} else if (ODate.isToday(dateObj, now, interval) || interval < 4 * inSeconds.hour) {
			dateString = ODate.timeAgo(dateObj, interval);
	
			// 'Yesterday' for dates that occurred yesterday
		} else if (ODate.isYesterday(dateObj, now, interval)) {
			dateString = 'yesterday';
	
			// Else print the date
		} else {
			dateString = ODate.format(dateObj, 'date');
		}
	
		return dateString;
	};
	
	ODate.isNearFuture = function (interval) {
		// If the interval within the next 5 minutes
		return interval < 0 && interval > -(5 * inSeconds.minute);
	};
	
	ODate.isFarFuture = function (interval) {
		// If the interval is further in the future than 5 minutes
		return interval < -(5 * inSeconds.minute);
	};
	
	ODate.isToday = function (date, now, interval) {
		var within24Hours = interval < inSeconds.day;
		var sameDayOfWeek = now.getDay() === date.getDay();
		return within24Hours && sameDayOfWeek;
	};
	
	ODate.isYesterday = function (date, now, interval) {
		var within48Hours = interval < 2 * inSeconds.day;
		var consecutiveDaysOfTheWeek = now.getDay() === date.getDay() + 1;
		return within48Hours && consecutiveDaysOfTheWeek;
	};
	
	ODate.timeAgo = function (date, interval, options) {
	
		date = ODate.toDate(date);
		if (!date) return;
	
		// Accept an interval argument for backwards compatibility
		if (arguments.length === 2 && (typeof interval === 'undefined' ? 'undefined' : (0, _typeof3.default)(interval)) === 'object') {
			options = interval;
			interval = options.interval;
		}
	
		// Default the interval option to the time since the given date
		if (!interval) {
			interval = ODate.getSecondsBetween(new Date(), date);
		}
	
		// If a limit has been supplied and the interval is longer ago than that limit
		if (options && options.limit > 0 && (!interval || interval > options.limit)) {
			return '';
		}
	
		if (interval < inSeconds.minute) {
			return interval + ' seconds ago';
		} else if (interval < 1.5 * inSeconds.minute) {
			return 'a minute ago';
		} else if (interval < 59 * inSeconds.minute) {
			return Math.round(interval / inSeconds.minute) + ' minutes ago';
		} else if (interval < 1.5 * inSeconds.hour) {
			return 'an hour ago';
		} else if (interval < 22 * inSeconds.hour) {
			return Math.round(interval / inSeconds.hour) + ' hours ago';
		} else if (interval < 1.5 * inSeconds.day) {
			return 'a day ago';
		} else if (interval < 25 * inSeconds.day) {
			return Math.round(interval / inSeconds.day) + ' days ago';
		} else if (interval < 45 * inSeconds.day) {
			return 'a month ago';
		} else if (interval < 345 * inSeconds.day) {
			return Math.round(interval / inSeconds.month) + ' months ago';
		} else if (interval < 547 * inSeconds.day) {
			return 'a year ago';
		} else {
			return Math.max(2, Math.floor(interval / inSeconds.year)) + ' years ago';
		}
	};
	
	ODate.asTodayOrYesterdayOrNothing = function (date) {
	
		if (!date) return;
	
		var now = new Date();
		var interval = ODate.getSecondsBetween(now, date);
	
		var dateString = void 0;
	
		// If this was less than a day ago
		if (ODate.isToday(date, now, interval)) {
			dateString = 'today';
		} else if (ODate.isYesterday(date, now, interval)) {
			dateString = 'yesterday';
		} else {
			dateString = '';
		}
	
		return dateString;
	};
	
	ODate.init = function (el) {
		if (!el) {
			el = document.body;
		}
		if (!(el instanceof HTMLElement)) {
			el = document.querySelector(el);
		}
		/* If el's data-o-component has \bo-date\b in it, ie it is itself a date,
	  return a new o-date */
		if (/\bo-date\b/.test(el.getAttribute('data-o-component'))) {
			return new ODate(el);
		}
	
		// If el contains date components, return o-dates
		var dateEls = el.querySelectorAll('[data-o-component~="o-date"]');
		return [].map.call(dateEls, function (el) {
			return new ODate(el);
		});
	};
	
	var constructAll = function constructAll() {
		ODate.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	if (typeof window !== 'undefined') {
		document.addEventListener('o.DOMContentLoaded', constructAll);
	}
	
	module.exports = ODate;

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var OHeader = __webpack_require__(284);
	var Typeahead = __webpack_require__(310);
	var promoHandler = __webpack_require__(314);
	
	function init(flags) {
		promoHandler.init(flags);
	
		new OHeader();
	
		// initialise separate sticky header
		new OHeader(document.querySelector('[data-o-header--sticky]'));
	
		var typeaheadElements = document.querySelectorAll('[data-typeahead]');
		if (flags.get('typeahead') && typeaheadElements.length) {
			for (var i = 0; i < typeaheadElements.length; i++) {
				var element = typeaheadElements[i];
				new Typeahead(element, '//' + window.location.host + '/search-suggestions?q=');
			}
		}
	}
	
	module.exports = { init: init };

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(285);

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _header = __webpack_require__(286);
	
	var _header2 = _interopRequireDefault(_header);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var constructAll = function constructAll() {
		_header2.default.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	exports.default = _header2.default;
	module.exports = exports['default'];

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _search = __webpack_require__(287);
	
	var _search2 = _interopRequireDefault(_search);
	
	var _mega = __webpack_require__(304);
	
	var _mega2 = _interopRequireDefault(_mega);
	
	var _drawer = __webpack_require__(305);
	
	var _drawer2 = _interopRequireDefault(_drawer);
	
	var _subnav = __webpack_require__(306);
	
	var _subnav2 = _interopRequireDefault(_subnav);
	
	var _sticky = __webpack_require__(309);
	
	var _sticky2 = _interopRequireDefault(_sticky);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Header = function () {
		function Header(headerEl) {
			(0, _classCallCheck3.default)(this, Header);
	
			if (!headerEl) {
				headerEl = document.querySelector('[data-o-component="o-header"]');
			} else if (typeof headerEl === 'string') {
				headerEl = document.querySelector(headerEl);
			}
	
			if (headerEl.hasAttribute('data-o-header--js')) {
				return;
			}
	
			this.headerEl = headerEl;
	
			_search2.default.init(this.headerEl);
			_mega2.default.init(this.headerEl);
			_drawer2.default.init(this.headerEl);
			_subnav2.default.init(this.headerEl);
			_sticky2.default.init(this.headerEl);
	
			this.headerEl.removeAttribute('data-o-header--no-js');
			this.headerEl.setAttribute('data-o-header--js', '');
		}
	
		Header.init = function init(rootEl) {
			if (!rootEl) {
				rootEl = document.body;
			}
			if (!(rootEl instanceof HTMLElement)) {
				rootEl = document.querySelector(rootEl);
			}
			if (/\bo-header\b/.test(rootEl.getAttribute('data-o-component'))) {
				return new Header(rootEl);
			}
	
			return [].map.call(rootEl.querySelectorAll('[data-o-component="o-header"]'), function (el) {
				if (!el.hasAttribute('data-o-header--js')) {
					return new Header(el);
				}
			}).filter(function (header) {
				return header !== undefined;
			});
		};
	
		return Header;
	}();
	
	exports.default = Header;
	module.exports = exports['default'];

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _oToggle = __webpack_require__(288);
	
	var _oToggle2 = _interopRequireDefault(_oToggle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function init(headerEl) {
		var target = headerEl.querySelector('[data-o-header-search]');
		var controls = target && headerEl.querySelectorAll('[aria-controls="' + target.id + '"]');
	
		if (controls === null || controls.length === 0) {
			return;
		}
	
		var opening = [];
	
		var callback = function callback(state, e) {
			if (state === 'open') {
				// record the opening control
				opening.push(e.currentTarget);
				target.querySelector('[name="q"]').focus();
			} else {
				// re-focus opening control
				opening.length && opening.pop().focus();
			}
		};
	
		for (var i = 0, len = controls.length; i < len; i++) {
			new _oToggle2.default(controls[i], { target: target, callback: callback });
		}
	}
	
	exports.default = { init: init };
	module.exports = exports['default'];

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(289);

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _map = __webpack_require__(290);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _getIterator2 = __webpack_require__(301);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Toggle = function () {
		function Toggle(toggleEl, config) {
			(0, _classCallCheck3.default)(this, Toggle);
	
			if (!toggleEl) {
				return;
			} else if (!(toggleEl instanceof HTMLElement)) {
				toggleEl = document.querySelector(toggleEl);
			}
	
			if (toggleEl.hasAttribute('data-o-toggle--js')) {
				return;
			}
	
			if (!config) {
				config = {};
				// Try to get config set declaratively on the element
				Array.prototype.forEach.call(toggleEl.attributes, function (attr) {
					if (attr.name.indexOf('data-o-toggle') === 0) {
						// Remove the prefix part of the data attribute name
						var key = attr.name.replace('data-o-toggle-', '');
						try {
							// If it's a JSON, a boolean or a number, we want it stored like that, and not as a string
							// We also replace all ' with " so JSON strings are parsed correctly
							config[key] = JSON.parse(attr.value.replace(/\'/g, '"'));
						} catch (e) {
							config[key] = attr.value;
						}
					}
				});
			}
	
			this.callback = config.callback;
			if (typeof this.callback === 'string') {
				this.callback = new Function(this.callback);
			}
	
			this.targetEl = config.target;
			if (!(this.targetEl instanceof HTMLElement)) {
				this.targetEl = document.querySelector(this.targetEl);
			}
	
			this.toggleEl = toggleEl;
	
			if (typeof Toggle._toggles.get(this.targetEl) === 'undefined') {
				Toggle._toggles.set(this.targetEl, [this]);
			} else {
				Toggle._toggles.get(this.targetEl).push(this);
			}
	
			if (this.toggleEl.nodeName === 'A') {
				this.toggleEl.setAttribute('role', 'button');
			}
	
			this.toggleEl.setAttribute('aria-expanded', 'false');
			this.toggle = this.toggle.bind(this);
			this.toggleEl.addEventListener('click', this.toggle);
	
			this.targetEl.setAttribute('aria-hidden', 'true');
			this.toggleEl.setAttribute('data-o-toggle--js', 'true');
		}
	
		Toggle.prototype.toggle = function toggle(e) {
			// Toggle returns true if class is not present and needs to be added
			var state = this.targetEl.classList.toggle('o-toggle--active');
	
			Toggle._toggles.get(this.targetEl).forEach(function (toggle) {
				toggle.toggleEl.setAttribute('aria-expanded', state);
			});
	
			this.targetEl.setAttribute('aria-hidden', !state);
	
			e && e.preventDefault();
			this.callback && this.callback(state ? 'open' : 'close', e);
		};
	
		Toggle.prototype.destroy = function destroy() {
			this.toggleEl.removeEventListener('click', this.toggle);
			this.toggleEl.removeAttribute('aria-expanded');
			this.toggleEl.removeAttribute('role');
			this.toggleEl.removeAttribute('data-o-toggle--js');
			this.targetEl.removeAttribute('aria-hidden');
	
			var targetArray = Toggle._toggles.get(this.targetEl);
			var togglePosition = targetArray.indexOf(this);
			// Generates a new array removing the current toggle from the list
			Toggle._toggles.set(this.targetEl, targetArray.slice(0, togglePosition).join(targetArray.slice(togglePosition + 1)));
	
			this.targetEl = undefined;
			this.toggleEl = undefined;
			this.callback = undefined;
		};
	
		Toggle.init = function init(el, config) {
			if (!el) {
				el = document.body;
			} else if (!(el instanceof HTMLElement)) {
				el = document.querySelector(el);
			}
			var toggleEls = el.querySelectorAll('[data-o-component="o-toggle"]');
			var toggles = [];
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;
	
			try {
				for (var _iterator = (0, _getIterator3.default)(toggleEls), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var toggleEl = _step.value;
	
					if (!toggleEl.hasAttribute('data-o-toggle--js')) {
						toggles.push(new Toggle(toggleEl, config));
					}
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}
	
			return toggles;
		};
	
		return Toggle;
	}();
	
	;
	
	Toggle._toggles = new _map2.default();
	
	var constructAll = function constructAll() {
		Toggle.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	exports.default = Toggle;
	module.exports = exports['default'];

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(291), __esModule: true };

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(74);
	__webpack_require__(12);
	__webpack_require__(56);
	__webpack_require__(292);
	__webpack_require__(298);
	module.exports = __webpack_require__(20).Map;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(293);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(294)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(24).f
	  , create      = __webpack_require__(37)
	  , redefineAll = __webpack_require__(194)
	  , ctx         = __webpack_require__(21)
	  , anInstance  = __webpack_require__(188)
	  , defined     = __webpack_require__(15)
	  , forOf       = __webpack_require__(189)
	  , $iterDefine = __webpack_require__(16)
	  , step        = __webpack_require__(59)
	  , setSpecies  = __webpack_require__(195)
	  , DESCRIPTORS = __webpack_require__(28)
	  , fastKey     = __webpack_require__(64).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(19)
	  , $export        = __webpack_require__(18)
	  , meta           = __webpack_require__(64)
	  , fails          = __webpack_require__(29)
	  , hide           = __webpack_require__(23)
	  , redefineAll    = __webpack_require__(194)
	  , forOf          = __webpack_require__(189)
	  , anInstance     = __webpack_require__(188)
	  , isObject       = __webpack_require__(26)
	  , setToStringTag = __webpack_require__(52)
	  , dP             = __webpack_require__(24).f
	  , each           = __webpack_require__(295)(0)
	  , DESCRIPTORS    = __webpack_require__(28);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    C = wrapper(function(target, iterable){
	      anInstance(target, C, NAME, '_c');
	      target._c = new Base;
	      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);
	    });
	    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){
	      var IS_ADDER = KEY == 'add' || KEY == 'set';
	      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){
	        anInstance(this, C, KEY);
	        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;
	        var result = this._c[KEY](a === 0 ? 0 : a, b);
	        return IS_ADDER ? this : result;
	      });
	    });
	    if('size' in proto)dP(C.prototype, 'size', {
	      get: function(){
	        return this._c.size;
	      }
	    });
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F, O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(21)
	  , IObject  = __webpack_require__(42)
	  , toObject = __webpack_require__(55)
	  , toLength = __webpack_require__(45)
	  , asc      = __webpack_require__(296);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(297);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(26)
	  , isArray  = __webpack_require__(70)
	  , SPECIES  = __webpack_require__(53)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(18);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(299)('Map')});

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(179)
	  , from    = __webpack_require__(300);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(189);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(302), __esModule: true };

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(56);
	__webpack_require__(12);
	module.exports = __webpack_require__(303);

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(25)
	  , get      = __webpack_require__(178);
	module.exports = __webpack_require__(20).getIterator = function(it){
	  var iterFn = get(it);
	  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var INTENT_ENTER = 300;
	var INTENT_LEAVE = 400;
	
	var expanded = [];
	
	function addEvents(parent, menu) {
		var timeout = void 0;
	
		parent.addEventListener('mouseenter', function () {
			clearTimeout(timeout);
	
			if (isOpen(menu)) {
				return;
			}
	
			timeout = setTimeout(function () {
				if (expanded.length) {
					hide(expanded[0]);
					show(menu, false);
				} else {
					show(menu, true);
				}
			}, INTENT_ENTER);
		});
	
		parent.addEventListener('mouseleave', function () {
			clearTimeout(timeout);
			timeout = setTimeout(function () {
				return isOpen(menu) && hide(menu);
			}, INTENT_LEAVE);
		});
	}
	
	function isOpen(menu) {
		return expanded.indexOf(menu) !== -1;
	}
	
	function show(menu, animate) {
		if (animate) {
			menu.classList.add('o-header__mega--animation');
		}
	
		menu.setAttribute('aria-hidden', 'false');
		menu.setAttribute('aria-expanded', 'true');
	
		menu.dispatchEvent(new CustomEvent('oHeader.MegaMenuShow', { bubbles: true }));
	
		expanded.push(menu);
	}
	
	function hide(menu) {
		menu.classList.remove('o-header__mega--animation');
		menu.setAttribute('aria-hidden', 'true');
		menu.setAttribute('aria-expanded', 'false');
	
		menu.dispatchEvent(new CustomEvent('oHeader.MegaMenuHide', { bubbles: true }));
	
		expanded.splice(expanded.indexOf(menu), 1);
	}
	
	function init(headerEl) {
		var menus = (0, _from2.default)(headerEl.querySelectorAll('[data-o-header-mega]'));
		var parents = menus.map(function (menu) {
			return menu.parentNode;
		});
	
		menus.forEach(function (menu) {
			menu.setAttribute('aria-hidden', 'true');
			menu.setAttribute('aria-expanded', 'false');
		});
	
		parents.forEach(function (parent, i) {
			return addEvents(parent, menus[i]);
		});
	}
	
	exports.default = { init: init, show: show, hide: hide };
	module.exports = exports['default'];

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _oToggle = __webpack_require__(288);
	
	var _oToggle2 = _interopRequireDefault(_oToggle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LISTEN_DELAY = 300;
	var INTENT_DELAY = 1000;
	
	function handleCloseEvents(scope, callback) {
		var timeout = void 0;
	
		var handleKeydown = function handleKeydown(e) {
			if (e.keyCode === 27) {
				callback();
			}
		};
	
		var handleClick = function handleClick(e) {
			if (!scope.contains(e.target)) {
				callback();
			}
		};
	
		var handleMouseenter = function handleMouseenter() {
			clearTimeout(timeout);
		};
	
		var handleMouseleave = function handleMouseleave() {
			timeout = setTimeout(callback, INTENT_DELAY);
		};
	
		var removeEvents = function removeEvents() {
			clearTimeout(timeout);
	
			scope.removeEventListener('mouseenter', handleMouseenter);
			scope.removeEventListener('mouseleave', handleMouseleave);
			document.removeEventListener('click', handleClick);
			document.removeEventListener('touchstart', handleClick);
			document.removeEventListener('keydown', handleKeydown);
		};
	
		var addEvents = function addEvents() {
			scope.addEventListener('mouseenter', handleMouseenter);
			scope.addEventListener('mouseleave', handleMouseleave);
			document.addEventListener('click', handleClick);
			document.addEventListener('touchstart', handleClick);
			document.addEventListener('keydown', handleKeydown);
		};
	
		return { addEvents: addEvents, removeEvents: removeEvents };
	}
	
	function addDrawerToggles(drawerEl) {
		var controls = [].concat((0, _toConsumableArray3.default)(document.body.querySelectorAll('[aria-controls="' + drawerEl.id + '"]')));
	
		var handleClose = void 0;
		function toggleCallback(state) {
			if (state === 'close') {
				handleClose.removeEvents();
			} else {
				// don't capture the initial click or accidental double taps etc.
				// we could use transitionend but scoping is tricky and it needs prefixing and...
				setTimeout(handleClose.addEvents, LISTEN_DELAY);
			}
	
			drawerEl.classList.toggle('o-header__drawer--closing', state === 'close');
			drawerEl.classList.toggle('o-header__drawer--opening', state === 'open');
		}
	
		controls.forEach(function (control) {
			var drawerToggle = new _oToggle2.default(control, {
				target: drawerEl,
				callback: toggleCallback
			});
	
			// Both toggles have the same target, so the toggle function will be the same
			// If there's a separate handleClose instance for each toggle, removeEvents doesn't work
			// when the close toggle is clicked
			if (!handleClose) {
				handleClose = handleCloseEvents(drawerEl, drawerToggle.toggle);
			}
		});
	}
	
	function addSubmenuToggles(drawerEl) {
		var submenus = drawerEl.querySelectorAll('[id^="o-header-drawer-child-"]');
	
		(0, _from2.default)(submenus).forEach(function (submenu) {
			var button = drawerEl.querySelector('[aria-controls="' + submenu.id + '"]');
	
			submenu.setAttribute('aria-hidden', 'true');
	
			new _oToggle2.default(button, {
				target: submenu,
				callback: function callback(state) {
					button.textContent = button.textContent.replace(/fewer|more/, state === 'open' ? 'fewer' : 'more');
				}
			});
		});
	}
	
	function appendUserDetail(target) {
		return fetch('https://session-next.ft.com/', {
			credentials: 'include'
		}).then(function (response) {
			if (response.ok) {
				return response.json();
			} else {
				return response.text().then(function (err) {
					throw new Error(err);
				});
			}
		}).then(function (data) {
			target.innerText = data.emailAddress;
		});
	}
	
	function init() {
		var drawerEl = document.body.querySelector('[data-o-header-drawer]');
		if (!drawerEl) {
			return;
		}
		addSubmenuToggles(drawerEl);
		addDrawerToggles(drawerEl);
	
		var emailEl = drawerEl.querySelector('[data-o-header-drawer-user-email]');
	
		// if the browser doesn't support CORS then bail
		if (emailEl && 'withCredentials' in new XMLHttpRequest()) {
			appendUserDetail(emailEl);
		}
	
		drawerEl.removeAttribute('data-o-header-drawer--no-js');
		drawerEl.setAttribute('data-o-header-drawer--js', 'true');
	}
	
	exports.default = { init: init };
	module.exports = exports['default'];

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _oUtils = __webpack_require__(307);
	
	var oUtils = _interopRequireWildcard(_oUtils);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function init(headerEl) {
		var subnav = headerEl.querySelector('[data-o-header-subnav]');
	
		if (subnav === null) {
			return;
		}
	
		var wrapper = subnav.querySelector('[data-o-header-subnav-wrapper]');
		var buttons = (0, _from2.default)(subnav.getElementsByTagName('button'));
	
		var scrollWidth = void 0;
		var clientWidth = void 0;
	
		function direction(button) {
			return button.className.match(/left|right/).pop();
		}
	
		function scrollable() {
			scrollWidth = wrapper.scrollWidth;
			clientWidth = wrapper.clientWidth;
	
			buttons.forEach(function (button) {
				if (direction(button) === 'left') {
					button.disabled = wrapper.scrollLeft === 0;
				} else {
					var remaining = scrollWidth - clientWidth - wrapper.scrollLeft;
					// Allow a little difference as scrollWidth is fast, not accurate.
					button.disabled = remaining <= 1;
				}
			});
		}
	
		function scroll(e) {
			var distance = 100;
	
			if (direction(e.currentTarget) === 'left') {
				distance = (wrapper.scrollLeft > distance ? distance : wrapper.scrollLeft) * -1;
			} else {
				var remaining = scrollWidth - clientWidth - wrapper.scrollLeft;
				distance = remaining > distance ? distance : remaining;
			}
	
			wrapper.scrollLeft = wrapper.scrollLeft + distance;
	
			scrollable();
		}
	
		wrapper.addEventListener('scroll', oUtils.throttle(scrollable, 100));
		window.addEventListener('oViewport.resize', scrollable);
	
		buttons.forEach(function (button) {
			button.onclick = scroll;
		});
	
		scrollable();
	}
	
	module.exports = { init: init };

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(308);

/***/ },
/* 308 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	/**
	*
	* Debounces function so it is only called after n milliseconds
	* without it not being called
	*
	* @example
	* Utils.debounce(myFunction() {}, 100);
	*
	* @param {Function} func - Function to be debounced
	* @param {number} wait - Time in miliseconds
	*
	* @returns {Function} - Debounced function
	*/
	function debounce(func, wait) {
		var timeout = void 0;
		return function () {
			var _this = this;
	
			var args = arguments;
			var later = function later() {
				timeout = null;
				func.apply(_this, args);
			};
			clearTimeout(timeout);
			timeout = setTimeout(later, wait);
		};
	};
	
	/**
	*
	* Throttle function so it is only called once every n milliseconds
	*
	* @example
	* Utils.throttle(myFunction() {}, 100);
	*
	* @param {Function} func - Function to be throttled
	* @param {number} wait - Time in miliseconds
	*
	* @returns {Function} - Throttled function
	*/
	function throttle(func, wait) {
		var timeout = void 0;
		return function () {
			var _this2 = this;
	
			if (timeout) {
				return;
			}
			var args = arguments;
			var later = function later() {
				timeout = null;
				func.apply(_this2, args);
			};
	
			timeout = setTimeout(later, wait);
		};
	};
	
	exports.debounce = debounce;
	exports.throttle = throttle;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _oUtils = __webpack_require__(307);
	
	function init(headerEl) {
		if (!headerEl.hasAttribute('data-o-header--sticky')) {
			return;
		}
	
		var viewportOffset = void 0;
		var lastScrollDepth = void 0;
		var lastAnimationFrame = void 0;
	
		function handleFrame() {
			// sticky el will appear when scrolled down from page top to
			// (arbitrarily) > half the viewport height
			var scrollDepth = window.pageYOffset || window.scrollY;
			var isActive = scrollDepth > viewportOffset;
	
			headerEl.classList.toggle('o-header--sticky-active', isActive);
	
			// allow a little wiggling room so we don't get too hasty toggling up/down state
			if (Math.abs(scrollDepth - lastScrollDepth) > 20) {
				var isScrollingDown = lastScrollDepth < scrollDepth;
				headerEl.classList.toggle('o-header--sticky-scroll-down', isActive && isScrollingDown);
				headerEl.classList.toggle('o-header--sticky-scroll-up', isActive && !isScrollingDown);
			}
	
			lastScrollDepth = scrollDepth;
		}
	
		function startLoop() {
			viewportOffset = window.innerHeight / 2;
	
			lastAnimationFrame = window.requestAnimationFrame(function () {
				handleFrame();
				startLoop();
			});
		}
	
		function stopLoop() {
			lastAnimationFrame && window.cancelAnimationFrame(lastAnimationFrame);
		}
	
		function scrollStart() {
			window.removeEventListener('scroll', scrollStart);
			window.addEventListener('scroll', debouncedScrollEnd);
			startLoop();
		}
	
		function scrollEnd() {
			stopLoop();
			window.removeEventListener('scroll', debouncedScrollEnd);
			window.addEventListener('scroll', scrollStart);
		}
	
		var debouncedScrollEnd = (0, _oUtils.debounce)(scrollEnd, 300);
	
		window.addEventListener('scroll', scrollStart);
	
		handleFrame();
	};
	
	exports.default = { init: init };
	module.exports = exports['default'];

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*global fetch*/
	var Awesomplete = __webpack_require__(311);
	var utils = __webpack_require__(203);
	
	var MIN_LENGTH = 2;
	var DISPLAY_ITEMS = 6;
	
	var Typeahead = function () {
		function Typeahead(target, dataUrl) {
			(0, _classCallCheck3.default)(this, Typeahead);
	
			this.target = target;
			this.input = target.querySelector('input');
			this.context = getParentElDataTrackableValue(target);
			this.dataUrl = dataUrl;
	
			this.searchTerm = '';
	
			this.awesomplete = new Awesomplete(this.input, {
				maxItems: DISPLAY_ITEMS,
				filter: function filter(text, input) {
					// eslint-disable-next-line
					return Awesomplete.FILTER_CONTAINS(utils.ascii(text.label), utils.ascii(input));
				},
				item: function item(text, input) {
					// eslint-disable-next-line
					return Awesomplete.ITEM(utils.ascii(text.label), utils.ascii(input));
				},
				sort: new Function()
			});
	
			this.target.addEventListener('submit', this.handleSubmit.bind(this));
			this.input.addEventListener('keyup', utils.debounce(this.handleType.bind(this), 300));
			this.input.addEventListener('awesomplete-select', this.handleSelect.bind(this));
			this.input.addEventListener('focus', this.handleFocus.bind(this));
		}
	
		Typeahead.prototype.handleType = function handleType() {
			var latestTerm = this.input.value.trim();
	
			if (this.searchTerm !== latestTerm) {
				this.searchTerm = latestTerm;
	
				if (this.searchTerm.length >= MIN_LENGTH) {
					this.getSuggestions(this.searchTerm);
				}
			}
		};
	
		Typeahead.prototype.handleSelect = function handleSelect(ev) {
			trackSearchEvent(this.context);
			ev.preventDefault();
			window.location.href = ev.text.value;
		};
	
		Typeahead.prototype.handleSubmit = function handleSubmit() {
			trackSearchEvent(this.context);
		};
	
		Typeahead.prototype.handleFocus = function handleFocus() {
			if (this.searchTerm.length >= MIN_LENGTH) {
				this.awesomplete.open();
			}
		};
	
		Typeahead.prototype.getSuggestions = function getSuggestions(value) {
			var _this = this;
	
			return fetch(this.dataUrl + encodeURIComponent(value)).then(function (response) {
				if (!response.ok) {
					throw new Error(response.statusText);
				}
	
				return response.json();
			}).then(function (suggestions) {
				_this.setSuggestions(suggestions);
			});
		};
	
		Typeahead.prototype.setSuggestions = function setSuggestions(suggestions) {
			this.awesomplete.list = suggestions.map(makeAwesompleteReadable);
		};
	
		return Typeahead;
	}();
	
	function getParentElDataTrackableValue(el) {
		if (el.hasAttribute('data-trackable-terminate')) {
			return '';
		} else if (el.parentNode && el.parentNode.getAttribute('data-trackable')) {
			return '-' + el.parentNode.getAttribute('data-trackable');
		} else {
			return getParentElDataTrackableValue(el.parentNode);
		};
	}
	
	function makeAwesompleteReadable(suggestion) {
		return [suggestion.name, suggestion.url || '/stream/' + suggestion.taxonomy + 'Id/' + suggestion.id];
	}
	
	function trackSearchEvent(context) {
		var tracking = new CustomEvent('oTracking.event', {
			detail: {
				category: 'page',
				action: 'search-submit' + context
			},
			bubbles: true
		});
	
		document.body.dispatchEvent(tracking);
	}
	
	exports.default = Typeahead;
	module.exports = exports['default'];

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(312);

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {"use strict";
	
	var _create = __webpack_require__(110);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Simple, lightweight, usable local autocomplete library for modern browsers
	 * Because there weren’t enough autocomplete scripts in the world? Because I’m completely insane and have NIH syndrome? Probably both. :P
	 * @author Lea Verou http://leaverou.github.io/awesomplete
	 * MIT license
	 */
	
	(function () {
	
		var _ = function _(input, o) {
			var me = this;
	
			// Setup
	
			this.input = $(input);
			this.input.setAttribute("autocomplete", "off");
			this.input.setAttribute("aria-autocomplete", "list");
	
			o = o || {};
	
			configure(this, {
				minChars: 2,
				maxItems: 10,
				autoFirst: false,
				data: _.DATA,
				filter: _.FILTER_CONTAINS,
				sort: _.SORT_BYLENGTH,
				item: _.ITEM,
				replace: _.REPLACE
			}, o);
	
			this.index = -1;
	
			// Create necessary elements
	
			this.container = $.create("div", {
				className: "awesomplete",
				around: input
			});
	
			this.ul = $.create("ul", {
				hidden: "hidden",
				inside: this.container
			});
	
			this.status = $.create("span", {
				className: "visually-hidden",
				role: "status",
				"aria-live": "assertive",
				"aria-relevant": "additions",
				inside: this.container
			});
	
			// Bind events
	
			$.bind(this.input, {
				"input": this.evaluate.bind(this),
				"blur": this.close.bind(this, { reason: "blur" }),
				"keydown": function keydown(evt) {
					var c = evt.keyCode;
	
					// If the dropdown `ul` is in view, then act on keydown for the following keys:
					// Enter / Esc / Up / Down
					if (me.opened) {
						if (c === 13 && me.selected) {
							// Enter
							evt.preventDefault();
							me.select();
						} else if (c === 27) {
							// Esc
							me.close({ reason: "esc" });
						} else if (c === 38 || c === 40) {
							// Down/Up arrow
							evt.preventDefault();
							me[c === 38 ? "previous" : "next"]();
						}
					}
				}
			});
	
			$.bind(this.input.form, { "submit": this.close.bind(this, { reason: "submit" }) });
	
			$.bind(this.ul, { "mousedown": function mousedown(evt) {
					var li = evt.target;
	
					if (li !== this) {
	
						while (li && !/li/i.test(li.nodeName)) {
							li = li.parentNode;
						}
	
						if (li && evt.button === 0) {
							// Only select on left click
							evt.preventDefault();
							me.select(li, evt.target);
						}
					}
				} });
	
			if (this.input.hasAttribute("list")) {
				this.list = "#" + this.input.getAttribute("list");
				this.input.removeAttribute("list");
			} else {
				this.list = this.input.getAttribute("data-list") || o.list || [];
			}
	
			_.all.push(this);
		};
	
		_.prototype = {
			set list(list) {
				if (Array.isArray(list)) {
					this._list = list;
				} else if (typeof list === "string" && list.indexOf(",") > -1) {
					this._list = list.split(/\s*,\s*/);
				} else {
					// Element or CSS selector
					list = $(list);
	
					if (list && list.children) {
						var items = [];
						slice.apply(list.children).forEach(function (el) {
							if (!el.disabled) {
								var text = el.textContent.trim();
								var value = el.value || text;
								var label = el.label || text;
								if (value !== "") {
									items.push({ label: label, value: value });
								}
							}
						});
						this._list = items;
					}
				}
	
				if (document.activeElement === this.input) {
					this.evaluate();
				}
			},
	
			get selected() {
				return this.index > -1;
			},
	
			get opened() {
				return !this.ul.hasAttribute("hidden");
			},
	
			close: function close(o) {
				if (!this.opened) {
					return;
				}
	
				this.ul.setAttribute("hidden", "");
				this.index = -1;
	
				$.fire(this.input, "awesomplete-close", o || {});
			},
	
			open: function open() {
				this.ul.removeAttribute("hidden");
	
				if (this.autoFirst && this.index === -1) {
					this.goto(0);
				}
	
				$.fire(this.input, "awesomplete-open");
			},
	
			next: function next() {
				var count = this.ul.children.length;
	
				this.goto(this.index < count - 1 ? this.index + 1 : -1);
			},
	
			previous: function previous() {
				var count = this.ul.children.length;
	
				this.goto(this.selected ? this.index - 1 : count - 1);
			},
	
			// Should not be used, highlights specific item without any checks!
			goto: function goto(i) {
				var lis = this.ul.children;
	
				if (this.selected) {
					lis[this.index].setAttribute("aria-selected", "false");
				}
	
				this.index = i;
	
				if (i > -1 && lis.length > 0) {
					lis[i].setAttribute("aria-selected", "true");
					this.status.textContent = lis[i].textContent;
	
					$.fire(this.input, "awesomplete-highlight", {
						text: this.suggestions[this.index]
					});
				}
			},
	
			select: function select(selected, origin) {
				if (selected) {
					this.index = $.siblingIndex(selected);
				} else {
					selected = this.ul.children[this.index];
				}
	
				if (selected) {
					var suggestion = this.suggestions[this.index];
	
					var allowed = $.fire(this.input, "awesomplete-select", {
						text: suggestion,
						origin: origin || selected
					});
	
					if (allowed) {
						this.replace(suggestion);
						this.close({ reason: "select" });
						$.fire(this.input, "awesomplete-selectcomplete", {
							text: suggestion
						});
					}
				}
			},
	
			evaluate: function evaluate() {
				var me = this;
				var value = this.input.value;
	
				if (value.length >= this.minChars && this._list.length > 0) {
					this.index = -1;
					// Populate list with options that match
					this.ul.innerHTML = "";
	
					this.suggestions = this._list.map(function (item) {
						return new Suggestion(me.data(item, value));
					}).filter(function (item) {
						return me.filter(item, value);
					}).sort(this.sort).slice(0, this.maxItems);
	
					this.suggestions.forEach(function (text) {
						me.ul.appendChild(me.item(text, value));
					});
	
					if (this.ul.children.length === 0) {
						this.close({ reason: "nomatches" });
					} else {
						this.open();
					}
				} else {
					this.close({ reason: "nomatches" });
				}
			}
		};
	
		// Static methods/properties
	
		_.all = [];
	
		_.FILTER_CONTAINS = function (text, input) {
			return RegExp($.regExpEscape(input.trim()), "i").test(text);
		};
	
		_.FILTER_STARTSWITH = function (text, input) {
			return RegExp("^" + $.regExpEscape(input.trim()), "i").test(text);
		};
	
		_.SORT_BYLENGTH = function (a, b) {
			if (a.length !== b.length) {
				return a.length - b.length;
			}
	
			return a < b ? -1 : 1;
		};
	
		_.ITEM = function (text, input) {
			var html = input === '' ? text : text.replace(RegExp($.regExpEscape(input.trim()), "gi"), "<mark>$&</mark>");
			return $.create("li", {
				innerHTML: html,
				"aria-selected": "false"
			});
		};
	
		_.REPLACE = function (text) {
			this.input.value = text.value;
		};
	
		_.DATA = function (item /*, input*/) {
			return item;
		};
	
		// Private functions
	
		function Suggestion(data) {
			var o = Array.isArray(data) ? { label: data[0], value: data[1] } : (typeof data === "undefined" ? "undefined" : (0, _typeof3.default)(data)) === "object" && "label" in data && "value" in data ? data : { label: data, value: data };
	
			this.label = o.label || o.value;
			this.value = o.value;
		}
		Object.defineProperty(Suggestion.prototype = (0, _create2.default)(String.prototype), "length", {
			get: function get() {
				return this.label.length;
			}
		});
		Suggestion.prototype.toString = Suggestion.prototype.valueOf = function () {
			return "" + this.label;
		};
	
		function configure(instance, properties, o) {
			for (var i in properties) {
				var initial = properties[i],
				    attrValue = instance.input.getAttribute("data-" + i.toLowerCase());
	
				if (typeof initial === "number") {
					instance[i] = parseInt(attrValue);
				} else if (initial === false) {
					// Boolean options must be false by default anyway
					instance[i] = attrValue !== null;
				} else if (initial instanceof Function) {
					instance[i] = null;
				} else {
					instance[i] = attrValue;
				}
	
				if (!instance[i] && instance[i] !== 0) {
					instance[i] = i in o ? o[i] : initial;
				}
			}
		}
	
		// Helpers
	
		var slice = Array.prototype.slice;
	
		function $(expr, con) {
			return typeof expr === "string" ? (con || document).querySelector(expr) : expr || null;
		}
	
		function $$(expr, con) {
			return slice.call((con || document).querySelectorAll(expr));
		}
	
		$.create = function (tag, o) {
			var element = document.createElement(tag);
	
			for (var i in o) {
				var val = o[i];
	
				if (i === "inside") {
					$(val).appendChild(element);
				} else if (i === "around") {
					var ref = $(val);
					ref.parentNode.insertBefore(element, ref);
					element.appendChild(ref);
				} else if (i in element) {
					element[i] = val;
				} else {
					element.setAttribute(i, val);
				}
			}
	
			return element;
		};
	
		$.bind = function (element, o) {
			if (element) {
				for (var event in o) {
					var callback = o[event];
	
					event.split(/\s+/).forEach(function (event) {
						element.addEventListener(event, callback);
					});
				}
			}
		};
	
		$.fire = function (target, type, properties) {
			var evt = document.createEvent("HTMLEvents");
	
			evt.initEvent(type, true, true);
	
			for (var j in properties) {
				evt[j] = properties[j];
			}
	
			return target.dispatchEvent(evt);
		};
	
		$.regExpEscape = function (s) {
			return s.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&");
		};
	
		$.siblingIndex = function (el) {
			/* eslint-disable no-cond-assign */
			for (var i = 0; el = el.previousElementSibling; i++) {}
			return i;
		};
	
		// Initialization
	
		function init() {
			$$("input.awesomplete").forEach(function (input) {
				new _(input);
			});
		}
	
		// Are we in a browser? Check for Document constructor
		if (typeof Document !== "undefined") {
			// DOM already loaded?
			if (document.readyState !== "loading") {
				init();
			} else {
				// Wait for it
				document.addEventListener("DOMContentLoaded", init);
			}
		}
	
		_.$ = $;
		_.$$ = $$;
	
		// Make sure to export Awesomplete on self when in a browser
		if (typeof self !== "undefined") {
			self.Awesomplete = _;
		}
	
		// Expose Awesomplete as a CJS module
		if (( false ? "undefined" : (0, _typeof3.default)(module)) === "object" && module.exports) {
			module.exports = _;
		}
	
		return _;
	})();
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(313)(module)))

/***/ },
/* 313 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 314 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.init = init;
	// MAKE ANY DISCOUNT CHANGES HERE
	// Update flags and next-product selector accordingly
	var discount = {
		L: 50,
		S: 25,
		S_5: 25
	};
	
	function fetchSession() {
		return fetch('https://session-next.ft.com/', {
			timeout: 2000,
			credentials: 'include'
		});
	}
	
	function extractResult(response) {
		switch (response.status) {
			case 404:
				return {};
			case 200:
				return response.json();
			default:
				throw new Error(response.status + ' - ' + response.statusTest);
		}
	}
	
	function supportsCors() {
		return 'withCredentials' in new XMLHttpRequest();
	}
	
	function decorateTheSession(session) {
		session.isForRegisteredUser = sessionIsForRegisteredUser(session);
		session.isForWeekendUser = sessionIsForWeekendUser(session);
		session.isForAnonymousUser = !session.products;
		return session;
	}
	
	function isSignupForm() {
		return window.location.pathname === '/signup' || window.location.pathname === '/thank-you';
	}
	
	function isBarrier() {
		return !!document.querySelector('.barrier');
	}
	
	function showPromo(flags) {
		var promo = document.querySelector('.n-header__marketing-promo');
	
		if (promo) {
			var discountSpan = document.querySelector('#discountPercent');
	
			if (discountSpan) {
				discountSpan.innerText = discount[flags.barrierDiscountByCohort] + '%';
			}
			promo.classList.add('visible');
		}
	}
	
	function checkAnonWithoutSession() {
		return document.cookie.indexOf('USERNAME');
	}
	
	function sessionIsForRegisteredUser(session) {
		return session.products && session.products.indexOf('P0') > -1 && session.products.indexOf('P1') === -1 && session.products.indexOf('P2') === -1;
	}
	
	function sessionIsForWeekendUser(session) {
		return session.products && session.products.indexOf('P6') > -1 && session.products.indexOf('P1') === -1 && session.products.indexOf('P2') === -1;
	}
	
	/**
	 * We want to show the marketing promo to:
	 * - Anonymous users
	 * - Weekend users
	 * - Registered users
	 *
	 * We want to hide the marketing promo from:
	 * - Signup form
	 * - Barriers
	 */
	function init(flags) {
	
		// If it's the signup form or a barrier, just stop
		if (!isSignupForm() && !isBarrier()) {
	
			// If it's a CORS-compatible browser, fetch the session
			if (supportsCors()) {
				fetchSession().then(extractResult).then(decorateTheSession).then(function (session) {
					if (session.isForAnonymousUser || session.isForRegisteredUser || session.isForWeekendUser) {
						showPromo(flags);
					}
				});
			} else if (checkAnonWithoutSession()) {
				// If can't do cors but anonymous, just show the promo
				// Pending cors solution
				showPromo(flags);
			}
		}
	}

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	var IOS_DEVICE_REGEX = /OS (7|8|9|10).* like Mac OS X.*/i;
	var ANDROID_DEVICE_REGEX = /Android (4\.[3-9]|[5-9])/i;
	
	function isWebAppCapableDevice(userAgent) {
		return IOS_DEVICE_REGEX.test(userAgent);
	}
	
	function isModernAndroidDevice(userAgent) {
		return ANDROID_DEVICE_REGEX.test(userAgent);
	}
	
	function showWebAppLink() {
		(0, _utils.$$)('.js-webapp-link').forEach(function (a) {
			a.pathname = location.pathname;
			a.search = location.search;
			a.hidden = false;
		});
	}
	
	function showAndroidLink() {
		(0, _utils.$$)('.js-android-link').forEach(function (a) {
			var param = 'location=' + encodeURIComponent(location.pathname + location.search);
			a.search = a.search + (a.search.length ? '&' : '?') + param;
			a.hidden = false;
		});
	}
	
	function init() {
		if (isWebAppCapableDevice(navigator.userAgent)) {
			showWebAppLink();
		} else if (isModernAndroidDevice(navigator.userAgent)) {
			showAndroidLink();
		}
	}
	
	module.exports = {
		init: init,
		isWebAppCapableDevice: isWebAppCapableDevice,
		isModernAndroidDevice: isModernAndroidDevice
	};

/***/ },
/* 316 */
/***/ function(module, exports) {

	//module.exports = require('n-messages'); // FIXME: Commenting this out for now to fix preact issue as it is not currently being used
	"use strict";

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _superstoreSync = __webpack_require__(217);
	
	var _superstoreSync2 = _interopRequireDefault(_superstoreSync);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FLAG_NOT_ON = 'Flag not on';
	var EXIT_PAGE = 'Exit page';
	var COOKIE_CONSENT = 'n-cookie-message:consented';
	
	var CookieMessage = function () {
		function CookieMessage() {
			(0, _classCallCheck3.default)(this, CookieMessage);
		}
	
		CookieMessage.init = function init(flags) {
			return CookieMessage.ensureMessageIsRequired(flags).then(CookieMessage.setupView);
		};
	
		CookieMessage.ensureMessageIsRequired = function ensureMessageIsRequired(flags) {
			if (!flags.get('cookieMessage')) {
				return _promise2.default.reject(FLAG_NOT_ON);
			}
			if (/^\/(errors|opt-out-confirm)/.test(location.pathname)) {
				return _promise2.default.reject(EXIT_PAGE);
			}
			return _promise2.default.resolve();
		};
	
		CookieMessage.setupView = function setupView() {
	
			if (userHasConsentedToCookies()) {
				return;
			}
	
			var message = document.createElement('div');
	
			insertMessage();
	
			function insertMessage() {
				message.innerHTML = CookieMessage.template();
				message.querySelector('.cookie-message__close-btn').addEventListener('click', flagUserAsConsentingToCookies);
				document.body.insertBefore(message, document.body.firstChild);
			}
	
			function hideMessage() {
				message.classList.add('cookie-message--hidden');
			}
	
			function flagUserAsConsentingToCookies() {
				_superstoreSync2.default.local.set(COOKIE_CONSENT, 1);
				hideMessage();
			}
	
			function userHasConsentedToCookies() {
				if (_superstoreSync2.default.local.get(COOKIE_CONSENT) === 1) {
					return true;
				}
	
				// HACK: Whilst FT.com is still around auto-opt user in if they have accepted over there.
				if (/\bcookieconsent=accepted(?:;|$)/.test(document.cookie)) {
					flagUserAsConsentingToCookies();
					return true;
				}
				return false;
			}
		};
	
		CookieMessage.template = function template() {
			return '\n\t\t\t<div class="cookie-message cookie-message--banner-centric"\n\t\t\t\tdata-trackable="cookie-message"\n\t\t\t\ttransition="t-cookie-message">\n\n\t\t\t\t<div class="cookie-message__container">\n\t\t\t\t\t<p class="cookie-message__description">\n\t\t\t\t\t\tBy continuing to use this site you consent to the use of cookies.\n\t\t\t\t\t\t<a class="cookie-message__link"\n\t\t\t\t\t\t\tdata-trackable="more-info"\n\t\t\t\t\t\t\thref="http://help.ft.com/tools-services/how-the-ft-manages-cookies-on-its-websites/">\n\t\t\t\t\t\t\tFind out more\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class="cookie-message__close-btn-container">\n\t\t\t\t\t\t<button class="cookie-message__close-btn" data-trackable="close">\n\t\t\t\t\t\t\t<span class="cookie-message__close-btn-label n-util-visually-hidden">Close</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t';
		};
	
		return CookieMessage;
	}();
	
	exports.default = CookieMessage;
	module.exports = exports['default'];

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	var superstore = __webpack_require__(217);
	
	var STORAGE_KEY = 'n-welcome-message-seen';
	var TEST_KEY = 'n-welcome-message-test';
	var TEST_VAL = 'can-store';
	
	function hasLocalStorage() {
		superstore.local.set(TEST_KEY, TEST_VAL);
		var retrieved = superstore.local.get(TEST_KEY);
		superstore.local.unset(TEST_KEY);
		return TEST_VAL === retrieved && superstore.isPersisting();
	}
	
	function init() {
		var fixedEl = (0, _utils.$)('.n-welcome-message--fixed');
		var staticEl = (0, _utils.$)('.n-welcome-message--static');
	
		var segmentId = String(window.location.search).match(/[?&]segmentId=([^?&])/);
		if (segmentId) {
			if (hasLocalStorage()) {
				superstore.local.set(STORAGE_KEY, 1);
			}
			fixedEl.hidden = true;
			staticEl.hidden = true;
		}
	
		if (Boolean(superstore.local.get(STORAGE_KEY)) === false && hasLocalStorage()) {
			var closeButton = (0, _utils.$)('button', fixedEl);
	
			closeButton.onclick = function () {
				fixedEl.hidden = true;
			};
	
			fixedEl.hidden = false;
			staticEl.hidden = true;
	
			// only display the bar the first time
			superstore.local.set(STORAGE_KEY, 1);
		}
	};
	
	module.exports = { init: init };

/***/ },
/* 319 */
/***/ function(module, exports) {

	"use strict";
	
	// deprecated
	module.exports = {}; //require('n-message-prompts');

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function init() {
		__webpack_require__(321).init();
	}
	
	module.exports = { init: init };

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(322);

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _footer = __webpack_require__(323);
	
	var _footer2 = _interopRequireDefault(_footer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var constructAll = function constructAll() {
		_footer2.default.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	exports.default = _footer2.default;
	module.exports = exports['default'];

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _oToggle = __webpack_require__(288);
	
	var _oToggle2 = _interopRequireDefault(_oToggle);
	
	var _layout = __webpack_require__(324);
	
	var _layout2 = _interopRequireDefault(_layout);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var COLLAPSIBLE_BREAKPOINTS = ['default', 'XS', 'S'];
	
	var Footer = function () {
		function Footer(footerEl) {
			var _this = this;
	
			(0, _classCallCheck3.default)(this, Footer);
	
			if (!footerEl) {
				footerEl = document.querySelector('[data-o-component="o-footer"]');
			} else if (typeof footerEl === 'string') {
				footerEl = document.querySelector(footerEl);
			}
	
			this.footerEl = footerEl;
	
			(0, _layout2.default)(function (breakpoint) {
				if (COLLAPSIBLE_BREAKPOINTS.indexOf(breakpoint) !== -1 && !_this._toggles) {
					return _this.setup();
				}
	
				if (COLLAPSIBLE_BREAKPOINTS.indexOf(breakpoint) === -1 && _this._toggles) {
					return _this.destroy();
				}
			});
	
			this.footerEl.removeAttribute('data-o-footer--no-js');
			this.footerEl.setAttribute('data-o-footer--js', '');
		}
	
		Footer.prototype.setup = function setup() {
			var _this2 = this;
	
			this._toggles = [];
	
			var toggleEls = this.footerEl.querySelectorAll('[aria-controls]');
	
			Array.prototype.forEach.call(toggleEls, function (toggleEl) {
				var target = document.getElementById(toggleEl.getAttribute('aria-controls'));
				toggleEl.setAttribute('role', 'button');
				_this2._toggles.push(new _oToggle2.default(toggleEl, { target: target }));
			});
		};
	
		Footer.prototype.destroy = function destroy() {
			this._toggles.forEach(function (toggle) {
				return toggle.destroy();
			});
			this._toggles = null;
		};
	
		Footer.init = function init(rootEl) {
			if (!rootEl) {
				rootEl = document.body;
			} else if (typeof rootEl === 'string') {
				rootEl = document.querySelector(rootEl);
			}
	
			var footerEl = rootEl.querySelector('[data-o-component="o-footer"]');
			return new Footer(footerEl);
		};
	
		return Footer;
	}();
	
	exports.default = Footer;
	module.exports = exports['default'];

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = init;
	
	var _oGrid = __webpack_require__(263);
	
	var _oGrid2 = _interopRequireDefault(_oGrid);
	
	var _oViewport = __webpack_require__(143);
	
	var _oViewport2 = _interopRequireDefault(_oViewport);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function init(callback) {
		_oViewport2.default.listenTo('resize');
	
		var lastBreakpoint = _oGrid2.default.getCurrentLayout();
	
		document.body.addEventListener('oViewport.resize', function () {
			var breakpoint = _oGrid2.default.getCurrentLayout();
	
			if (breakpoint !== lastBreakpoint) {
				callback(breakpoint);
				lastBreakpoint = breakpoint;
			}
		});
	
		callback(lastBreakpoint);
	}
	module.exports = exports['default'];

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
		client: __webpack_require__(326),
		ui: __webpack_require__(350),
		uiInstant: __webpack_require__(360)
	};

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(327);

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _myftClient = __webpack_require__(328);
	
	var _myftClient2 = _interopRequireDefault(_myftClient);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = new _myftClient2.default({
		apiRoot: '/__myft/api/onsite/'
	});
	module.exports = exports['default'];

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _set = __webpack_require__(329);
	
	var _set2 = _interopRequireDefault(_set);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var session = __webpack_require__(333);
	var fetchres = __webpack_require__(337);
	
	var lib = {
		personaliseUrl: __webpack_require__(345)
	};
	
	var emptyResponse = {
		total: 0,
		items: [],
		count: 0
	};
	
	var MyFtClient = function () {
		function MyFtClient() {
			var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
			var apiRoot = _ref.apiRoot;
			(0, _classCallCheck3.default)(this, MyFtClient);
	
			if (!apiRoot) {
				throw 'User prefs must be constructed with an api root';
			}
			this.apiRoot = apiRoot;
			this.loaded = {};
		}
	
		/**
	 * loads user's preferred, enabled and created relationships, as well as requested additional relationships
	 * @param additionalRelationships
	 * @returns {*}
	 */
	
	
		MyFtClient.prototype.init = function init() {
			var _this = this;
	
			var additionalRelationships = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	
	
			if (this.initialised) {
				return _promise2.default.resolve();
			}
			this.initialised = true;
			this.setPerfMark();
			return session.uuid().then(function (_ref2) {
				var uuid = _ref2.uuid;
	
	
				if (!uuid) {
					return _promise2.default.reject('Session service returned undefined.');
				}
	
				_this.userId = uuid;
	
				_this.headers = {
					'Content-Type': 'application/json',
					'X-FT-Session-Token': session.cookie()
				};
	
				var relationships = new _set2.default([{ relationship: 'preferred', type: 'preference' }, { relationship: 'enabled', type: 'endpoint' }, { relationship: 'created', type: 'list' }]);
	
				additionalRelationships.forEach(function (rel) {
					if (!relationships.has(rel)) {
						relationships.add(rel);
					}
				});
	
				relationships.forEach(function (relationship) {
					return _this.load(relationship);
				});
			}).catch(function (e) {
				// Keeps console clean for anonymous users
				if (e.message === 'No session cookie found') {
					return;
				}
				throw e;
			});
		};
	
		MyFtClient.prototype.setPerfMark = function setPerfMark() {
			var p = window.performance || window.msPerformance || window.webkitPerformance || window.mozPerformance;
			if (!p || !p.mark) return;
			_promise2.default.all([new _promise2.default(function (res) {
				document.addEventListener('myft.user.followed.concept.load', res);
			}), new _promise2.default(function (res) {
				document.addEventListener('myft.user.saved.content.load', res);
			})]).then(function () {
				return p.mark('myftLoaded');
			});
		};
	
		MyFtClient.prototype.emit = function emit(name, data) {
			document.body.dispatchEvent(new CustomEvent('myft.' + name, {
				detail: data,
				bubbles: true
			}));
		};
	
		MyFtClient.prototype.fetchJson = function fetchJson(method, endpoint, data) {
			var options = {
				method: method,
				headers: this.headers,
				credentials: 'include'
			};
	
			if (method !== 'GET') {
				options.body = (0, _stringify2.default)(data || {});
			}
			return fetch(this.apiRoot + endpoint, options).then(fetchres.json);
		};
	
		MyFtClient.prototype.load = function load(relationship) {
			var _this2 = this;
	
			var key = relationship.relationship + '.' + relationship.type;
	
			this.fetchJson('GET', this.userId + '/' + relationship.relationship + '/' + relationship.type).then(function (results) {
				if (!results) {
					results = emptyResponse;
				}
				_this2.loaded[key] = results;
				_this2.emit('user.' + key + '.load', results);
			}).catch(function (err) {
				if (err.message === 'No user data exists') {
					_this2.loaded[key] = emptyResponse;
					_this2.emit('user.' + key + '.load', emptyResponse);
				} else {
					throw err;
				}
			});
		};
	
		MyFtClient.prototype.add = function add(actor, actorId, relationship, type, subject, data) {
			var _this3 = this;
	
			actorId = this.getFallbackActorIdIfNecessary(actor, actorId);
			return this.fetchJson('PUT', actor + '/' + actorId + '/' + relationship + '/' + type + '/' + subject, data).then(function (results) {
				var details = { actorId: actorId, results: results, subject: subject, data: data };
				_this3.emit(actor + '.' + relationship + '.' + type + '.add', details);
				return details;
			});
		};
	
		MyFtClient.prototype.remove = function remove(actor, actorId, relationship, type, subject, data) {
			var _this4 = this;
	
			actorId = this.getFallbackActorIdIfNecessary(actor, actorId);
			return this.fetchJson('DELETE', actor + '/' + actorId + '/' + relationship + '/' + type + '/' + subject).then(function () {
				var details = { actorId: actorId, subject: subject, data: data };
				_this4.emit(actor + '.' + relationship + '.' + type + '.remove', details);
				return details;
			});
		};
	
		MyFtClient.prototype.updateRelationship = function updateRelationship(actor, actorId, relationship, type, subject, data) {
			var _this5 = this;
	
			actorId = this.getFallbackActorIdIfNecessary(actor, actorId);
			return this.fetchJson('PUT', actor + '/' + actorId + '/' + relationship + '/' + type + '/' + subject, data).then(function (results) {
				var details = { actorId: actorId, results: results, subject: subject, data: data };
				_this5.emit(actor + '.' + relationship + '.' + type + '.update', details);
				return details;
			});
		};
	
		MyFtClient.prototype.get = function get(relationship, type, subject) {
			var _this6 = this;
	
			return this.getAll(relationship, type).then(function (items) {
				return items.filter(function (item) {
					return _this6.getUuid(item).indexOf(subject) > -1;
				});
			});
		};
	
		MyFtClient.prototype.getAll = function getAll(relationship, type) {
			var _this7 = this;
	
			return new _promise2.default(function (resolve) {
				if (_this7.loaded[relationship + '.' + type]) {
					resolve(_this7.getItems(relationship, type));
				} else {
					document.body.addEventListener('myft.user.' + relationship + '.' + type + '.load', function () {
						resolve(_this7.getItems(relationship, type));
					});
				}
			});
		};
	
		MyFtClient.prototype.has = function has(relationship, type, subject) {
			return this.get(relationship, type, subject).then(function (items) {
				return items.length > 0;
			});
		};
	
		MyFtClient.prototype.getUuid = function getUuid(topic) {
			return topic.uuid;
		};
	
		MyFtClient.prototype.getItems = function getItems(relationship, type) {
			return this.loaded[relationship + '.' + type].items || [];
		};
	
		MyFtClient.prototype.personaliseUrl = function personaliseUrl(url) {
			return session.uuid().then(function (_ref3) {
				var uuid = _ref3.uuid;
	
				return lib.personaliseUrl(url, uuid);
			});
		};
	
		//private
	
	
		MyFtClient.prototype.getFallbackActorIdIfNecessary = function getFallbackActorIdIfNecessary(actor, actorId) {
			if (!actorId) {
				if (actor === 'user') {
					return this.userId;
				} else {
					throw new Error('no actorId specified');
				}
			} else {
				return actorId;
			}
		};
	
		return MyFtClient;
	}();
	
	exports.default = MyFtClient;
	module.exports = exports['default'];

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(330), __esModule: true };

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(74);
	__webpack_require__(12);
	__webpack_require__(56);
	__webpack_require__(331);
	__webpack_require__(332);
	module.exports = __webpack_require__(20).Set;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(293);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(294)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(18);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(299)('Set')});

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(334);

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var request = __webpack_require__(335);
	var cache = __webpack_require__(336);
	var promises = {};
	
	function uuid() {
		var uuid = cache('uuid');
	
		if (uuid) {
			return _promise2.default.resolve({
				uuid: uuid
			});
		}
		if (!promises.uuid) {
			promises.uuid = request('/uuid').then(function (response) {
				cache('uuid', response.uuid);
				return response;
			});
		}
	
		return promises.uuid;
	}
	
	function validate() {
		return request('/validate');
	}
	
	module.exports = {
		uuid: uuid,
		validate: validate,
		cache: cache,
		cookie: function cookie() {
			return (/FTSession=([^;]+)/.exec(document.cookie) || [null, ''])[1];
		}
	};

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function request(url) {
		// if we don't have a session token cookie, don't bother..
		if (document.cookie.indexOf('FTSession=') === -1) {
			return _promise2.default.reject(new Error('No session cookie found'));
		}
	
		return fetch('https://session-next.ft.com' + url, {
			credentials: 'include',
			useCorsProxy: true
		}).then(function (response) {
			if (response.ok) {
				return url === '/validate' ? _promise2.default.resolve(true) : response.json();
			} else {
				return url === '/validate' ? _promise2.default.resolve(false) : _promise2.default.reject(response.status);
			}
		}).catch(function (e) {
			var message = e.message || "";
			if (message.indexOf('timed out') > -1 || message.indexOf('Network request failed') > -1 || message.indexOf('Not Found') > -1) {
				// HTTP timeouts and invalid sessions are a fact of life on the internet.
				// We don't want to report this to Sentry.
			} else {
				document.body.dispatchEvent(new CustomEvent('oErrors.log', {
					bubbles: true,
					detail: {
						error: e,
						info: {
							component: 'next-session-client'
						}
					}
				}));
			}
		});
	}
	
	module.exports = request;

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var detailsCache = {};
	
	function cache(name, value) {
		if ((typeof name === 'undefined' ? 'undefined' : (0, _typeof3.default)(name)) === 'object') {
			detailsCache = name;
			return;
		}
	
		if (typeof name === 'string' && typeof value === 'string') {
			detailsCache[name] = value;
			return;
		}
	
		if (typeof name === 'string' && typeof value === 'undefined') {
			return detailsCache[name] || null;
		}
	
		if (typeof name === 'undefined' && typeof value === 'undefined') {
			return detailsCache;
		}
	
		throw new Error('Invalid arguments');
	}
	
	cache.clear = function () {
		detailsCache = {};
	};
	
	module.exports = cache;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(338);

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ReadTimeoutError = exports.InvalidJsonError = exports.BadServerResponseError = undefined;
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	exports.json = json;
	exports.text = text;
	exports.originatedError = originatedError;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function json(response) {
		if (Array.isArray(response)) {
			return _promise2.default.all(response.map(json));
		}
		if (!response.ok) {
			throw new BadServerResponseError(response.status);
		}
	
		if (response.status === 204) {
			return undefined;
		}
	
		return response.json().catch(function (err) {
			if (err.message.indexOf('timeout') > -1) {
				throw new ReadTimeoutError(err.message);
			}
			// probably invalid json
			throw new InvalidJsonError(err.message);
		});
	}
	
	function text(response) {
		if (Array.isArray(response)) {
			return _promise2.default.all(response.map(text));
		}
	
		if (!response.ok) {
			throw new BadServerResponseError(response.status);
		}
	
		if (response.status === 204) {
			return undefined;
		}
	
		return response.text();
	}
	
	var BadServerResponseError = exports.BadServerResponseError = function (_Error) {
		(0, _inherits3.default)(BadServerResponseError, _Error);
	
		// es6 smells
		// https://twitter.com/andrewsmatt/status/554792707139584001
		function BadServerResponseError(options) {
			(0, _classCallCheck3.default)(this, BadServerResponseError);
	
			var _this = (0, _possibleConstructorReturn3.default)(this, _Error.call(this));
	
			_this.message = options;
			_this.name = 'BadServerResponseError';
			return _this;
		}
	
		return BadServerResponseError;
	}(Error);
	
	var InvalidJsonError = exports.InvalidJsonError = function (_Error2) {
		(0, _inherits3.default)(InvalidJsonError, _Error2);
	
		function InvalidJsonError(options) {
			(0, _classCallCheck3.default)(this, InvalidJsonError);
	
			var _this2 = (0, _possibleConstructorReturn3.default)(this, _Error2.call(this));
	
			_this2.message = options;
			_this2.name = 'InvalidJsonError';
			return _this2;
		}
	
		return InvalidJsonError;
	}(Error);
	
	var ReadTimeoutError = exports.ReadTimeoutError = function (_Error3) {
		(0, _inherits3.default)(ReadTimeoutError, _Error3);
	
		function ReadTimeoutError(options) {
			(0, _classCallCheck3.default)(this, ReadTimeoutError);
	
			var _this3 = (0, _possibleConstructorReturn3.default)(this, _Error3.call(this));
	
			_this3.message = options;
			_this3.name = 'ReadTimeoutError';
			return _this3;
		}
	
		return ReadTimeoutError;
	}(Error);
	
	function originatedError(err) {
		if (err.name === BadServerResponseError.name || err.name === InvalidJsonError.name || err.name === ReadTimeoutError.name) {
			return true;
		} else {
			return false;
		}
	}

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(341);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(110);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(342), __esModule: true };

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(343);
	module.exports = __webpack_require__(20).Object.setPrototypeOf;

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(18);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(344).set});

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(26)
	  , anObject = __webpack_require__(25);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(21)(Function.call, __webpack_require__(73).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isImmutableUrl = __webpack_require__(346);
	var isValidUuid = __webpack_require__(349);
	
	module.exports = function (url, userId) {
		if (isImmutableUrl(url)) {
			return url;
		}
	
		if (!userId || !userId.length || !isValidUuid(userId)) {
			throw new Error('Invalid user uuid: ' + userId);
		}
	
		return url.replace(/myft(?:\/([a-zA-z\-]*))?(\/.[^$\/])?\/?/, function ($0, $1, $2) {
			return 'myft/' + ($1 ? $1 + '/' : '') + userId + ($2 || '');
		});
	};

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isPersonalisedUrl = __webpack_require__(347);
	var isLegacyUrl = __webpack_require__(348);
	
	module.exports = function (url) {
		return (/^\/(__)?myft\/api\//.test(url) || /^\/(__)?myft\/product-tour/.test(url) || /^\/(__)?myft\/list/.test(url) || isLegacyUrl(url) || isPersonalisedUrl(url)
		);
	};

/***/ },
/* 347 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function (path) {
		return (/\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/.test(path)
		);
	};

/***/ },
/* 348 */
/***/ function(module, exports) {

	"use strict";
	
	module.exports = function (path) {
	  return (/^\/myft\/(my-news|my-topics|preferences)/.test(path)
	  );
	};

/***/ },
/* 349 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function (str) {
	  return (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/.test(str)
	  );
	};

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	exports.init = init;
	exports.updateUi = updateUi;
	exports.personaliseLinks = personaliseLinks;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//TODO: refactor the massive out of this
	
	var nextButtons = __webpack_require__(351);
	var nNotification = __webpack_require__(352);
	var Overlay = __webpack_require__(356);
	var myftClient = __webpack_require__(326);
	var Delegate = __webpack_require__(141);
	
	var delegate = new Delegate(document.body);
	var grabUrlHashWithPrefix = __webpack_require__(357);
	var followEmail = __webpack_require__(358);
	var uuid = __webpack_require__(203).uuid;
	var $$ = __webpack_require__(203).$$;
	
	var subscribeUrl = '/products?segID=400863&segmentID=190b4443-dc03-bd53-e79b-b4b6fbd04e64';
	var signInLink = '/login';
	
	var flags = void 0;
	var results = {};
	var initialised = void 0;
	var collectionPending = false;
	
	var types = {
		saved: 'content',
		followed: 'concept',
		preferred: 'preference',
		contained: 'content'
	};
	
	var actors = {
		saved: 'user',
		followed: 'user',
		preferred: 'user',
		contained: 'list'
	};
	
	var uiSelectors = {
		saved: '[data-myft-ui="saved"]',
		followed: '[data-myft-ui="follow"]',
		preferred: '[data-myft-ui="prefer"]',
		contained: '[data-myft-ui="contained"]'
	};
	
	var idProperties = {
		saved: 'data-content-id',
		followed: 'data-concept-id',
		preferred: 'data-preference-name',
		contained: 'data-content-id'
	};
	
	var nNotificationMsgs = {
		followAnon: 'Please <a href="' + subscribeUrl + '" data-trackable="Subscribe">subscribe</a> or <a href="' + signInLink + '" data-trackable="Sign In">sign in</a> to follow this topic.',
		saveAnon: 'Please <a href="' + subscribeUrl + '" data-trackable="Subscribe">subscribe</a> or <a href="' + signInLink + '" data-trackable="Sign In">sign in</a> to save this article.',
		opted: 'You‘ve opted into our new site. You can return to FT.com at any time.'
	};
	
	function myFtFeatureFromEvent(ev) {
		return ev.type.replace('myft.', '').split('.')[1];
	}
	
	function actionFromEvent(ev) {
		var eventType = ev.type.split('.');
		return eventType[eventType.length - 1];
	}
	
	function getUuid(item) {
		return item.UUID || item.uuid;
	}
	
	function toggleButton(buttonEl, state) {
		var isPressed = buttonEl.getAttribute('aria-pressed') === 'true';
	
		if (state !== isPressed) {
			nextButtons.toggleState(buttonEl);
		}
		buttonEl.removeAttribute('disabled');
	}
	
	function updateUiForFeature(opts) {
		if (!uiSelectors[opts.myftFeature]) {
			return;
		}
	
		var featureForms = $$(uiSelectors[opts.myftFeature], opts.context);
		var idProperty = idProperties[opts.myftFeature];
		var uuids = opts.subjects.map(getUuid);
	
		// if there are multiple buttons, use the button with the same value as the rel property
		// if there are no multiple buttons, use opts.state
		featureForms.forEach(function (form) {
			var index = uuids.indexOf(form.getAttribute(idProperty));
			if (index > -1) {
				var _ret = function () {
					var relBtns = form.querySelectorAll('button[name^="_rel."]');
					var hasRelBtns = relBtns.length > 0;
					var activeMultiButton = void 0;
	
					// if the form has _rel.foo buttons, but there is no _rel.foo in the subject object nor an 'off' ('delete') button, then go to next iteration
					// this is for when 1 item is changed on a page with > 1 form, and the returned rel object only has a property for the changed item
					if (hasRelBtns) {
						activeMultiButton = getActiveMultiButton(relBtns, form, opts.subjects[index]);
						if (!activeMultiButton) {
							return {
								v: void 0
							};
						}
					}
	
					$$('button', form).forEach(function (button) {
						var newButtonState = hasRelBtns ? button === activeMultiButton : opts.state;
						toggleButton(button, newButtonState);
					});
	
					// add a BEM modifier for on/off-only styling of the form (e.g. show RSS link if RSS pref is on)
					form.classList.toggle('myft-ui--' + opts.myftFeature + '-on', !!opts.state);
				}();
	
				if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
			}
		});
	}
	
	function getActiveMultiButton(relBtns, form, subject) {
		var relName = relBtns[0].getAttribute('name').replace('_rel.', '');
		var relValue = subject._rel && subject._rel[relName];
		// can remove delete button part once old myft alerts page is retired
		var activeButton = form.querySelector('button[value="' + (relValue || 'delete') + '"]');
		return activeButton;
	}
	
	function openOverlay(html, _ref) {
		var _ref$name = _ref.name;
		var name = _ref$name === undefined ? 'myft-ui' : _ref$name;
		var _ref$title = _ref.title;
		var title = _ref$title === undefined ? '&nbsp;' : _ref$title;
		var _ref$shaded = _ref.shaded;
		var shaded = _ref$shaded === undefined ? true : _ref$shaded;
	
		var overlay = new Overlay(name, {
			heading: { title: title, shaded: shaded },
			html: html
		});
	
		overlay.open();
	
		return new _promise2.default(function (resolve) {
			document.body.addEventListener('oOverlay.ready', function () {
				return resolve(overlay);
			});
		});
	}
	
	function setUpSaveToExistingListListeners(overlay, contentId) {
	
		var saveToExistingListButton = overlay.content.querySelector('.js-save-to-existing-list');
		var listSelect = overlay.content.querySelector('.js-list-select');
	
		if (saveToExistingListButton) {
			saveToExistingListButton.addEventListener('click', function (ev) {
				ev.preventDefault();
	
				if (!listSelect.value) {
					var nameFormGroup = overlay.content.querySelector('.js-uuid-group');
					nameFormGroup.className += ' o-forms--error n-myft-ui__error--no-name';
					return;
				}
	
				var listId = listSelect.options[listSelect.selectedIndex].value;
				myftClient.add('list', listId, 'contained', 'content', contentId).then(function (detail) {
					updateAfterIO('contained', detail);
					overlay.close();
				});
			});
		}
	}
	
	function setUpNewListListeners(overlay, contentId) {
	
		var createListButton = overlay.content.querySelector('.js-create-list');
		var nameInput = overlay.content.querySelector('.js-name');
		var descriptionInput = overlay.content.querySelector('.js-description');
	
		createListButton.addEventListener('click', function (ev) {
			ev.preventDefault();
	
			if (!nameInput.value) {
				var nameFormGroup = overlay.content.querySelector('.js-name-group');
				nameFormGroup.className += ' o-forms--error n-myft-ui__error--no-name';
				return;
			}
	
			var createListData = {
				name: nameInput.value,
				description: descriptionInput.value
			};
	
			myftClient.add('user', null, 'created', 'list', uuid(), createListData).then(function (detail) {
				if (contentId) {
					return myftClient.add('list', detail.subject, 'contained', 'content', contentId);
				} else {
					return detail;
				}
			}).then(function (detail) {
				if (contentId) {
					updateAfterIO('contained', detail);
				}
				overlay.close();
			}).catch(function (err) {
	
				// TODO: this should use some formalised system for handling generic errors (context: https://github.com/Financial-Times/next-myft-ui/pull/65)
				nNotification.show({
					content: contentId ? 'Error adding article to new list' : 'Error creating new list',
					type: 'error'
				});
				throw err;
			});
		});
	}
	
	function showListsOverlay(overlayTitle, formHtmlUrl, contentId) {
	
		myftClient.personaliseUrl(formHtmlUrl).then(function (url) {
			return fetch(url, {
				credentials: 'same-origin'
			});
		}).then(function (res) {
			return res.text();
		}).then(function (html) {
			return openOverlay(html, { title: overlayTitle });
		}).then(function (overlay) {
			setUpSaveToExistingListListeners(overlay, contentId);
			setUpNewListListeners(overlay, contentId);
		});
	}
	
	function showCopyToListOverlay(contentId, excludeList) {
		showListsOverlay('Copy to list', '/myft/list?fragment=true&copy=true&contentId=' + contentId + '&excludeList=' + excludeList, contentId);
	}
	
	function showArticleSavedOverlay(contentId, fromClippings) {
		showListsOverlay('Article saved', '/myft/list?fragment=true&fromArticleSaved=true&contentId=' + contentId + (fromClippings && '&fromClippings=true'), contentId);
	}
	
	function showCreateListOverlay() {
		showListsOverlay('Create list', '/myft/list?fragment=true');
	}
	
	function getMessage(relationship, detail, href) {
		detail.data = detail.data || {};
	
		var messages = {
			followed: '<a href="/myft" class="myft-ui__logo" data-trackable="myft-logo"><abbr title="myFT" class="myft-ui__icon"></abbr></a>\n\t\t\t' + (detail.results ? 'You are following' : 'You unfollowed') + ' <b>' + detail.data.name + '</b>.\n\t\t\t<a href="' + href + '" data-trackable="alerts">Manage topics</a>',
			saved: '<a href="/myft" class="myft-ui__logo" data-trackable="myft-logo"><abbr title="myFT" class="myft-ui__icon"></abbr></a>\n\t\t\t' + (detail.results ? 'Article added to your' : 'Article removed from your') + '\n\t\t\t<a href="' + href + '" data-trackable="saved-cta">saved articles</a>',
			contained: '<a href="/myft" class="myft-ui__logo" data-trackable="myft-logo"><abbr title="myFT" class="myft-ui__icon"></abbr></a>\n\t\t\t' + (detail.results ? 'Article added to your list.\n\t\t\t<a href="' + href + '" data-trackable="alerts">View list</a>' : 'Article removed from your list')
		};
	
		return messages.hasOwnProperty(relationship) ? messages[relationship] : '';
	}
	
	function getPersonaliseUrlPromise(page, relationship, detail) {
		return myftClient.personaliseUrl('/myft/' + page).then(function (personalisedUrl) {
			return {
				type: 'default',
				message: getMessage(relationship, detail, personalisedUrl)
			};
		});
	}
	
	function updateAfterIO(myftFeature, detail, action) {
	
		updateUiForFeature({
			myftFeature: myftFeature,
			subjects: [{ uuid: detail.subject, '_rel': detail.data && detail.data._rel }],
			state: !!detail.results
		});
	
		var messagePromise = _promise2.default.resolve({});
	
		switch (myftFeature) {
			case 'followed':
				if (flags.get('myFtFollowEmail') && detail.results && !collectionPending && action !== 'update') {
	
					if (!followEmail.prefs.subscribedToDigest && !followEmail.prefs.userDismissed && detail.data.name) {
	
						return myftClient.personaliseUrl('/myft/api/onsite/follow-email/form?fragment=true&name=' + encodeURIComponent(detail.data.name)).then(function (url) {
							return fetch(url, { credentials: 'same-origin' });
						}).then(function (res) {
							return res.text();
						}).then(function (html) {
							return openOverlay(html, {
								name: 'myft-follow',
								shaded: false
							});
						}).then(function (overlay) {
							return followEmail.setUpOverlayListeners(overlay);
						}).catch(function () {
							return null;
						});
					}
				}
				break;
			case 'saved':
				if (flags.get('myftLists') && detail.results) {
					messagePromise = myftClient.getAll('created', 'list').then(function (createdLists) {
						return createdLists.filter(function (list) {
							return !list.isRedirect;
						});
					}).then(function (createdLists) {
						if (createdLists.length) {
							showArticleSavedOverlay(detail.subject);
							return { message: null };
						}
						return {};
					});
				}
				break;
			case 'contained':
				messagePromise = getPersonaliseUrlPromise('list/' + detail.actorId, 'contained', detail);
				break;
			case 'preferred':
				//FIXME: remove this and make myFtClient.loaded update after client-side changes
				if (detail.subject === 'email-digest') {
					followEmail.prefs.subscribedToDigest = true;
				} else if (detail.subject === 'follow-email-dismissed') {
					followEmail.prefs.userDismissed = true;
				}
				break;
		}
	
		messagePromise.then(function (_ref2) {
			var _ref2$message = _ref2.message;
			var message = _ref2$message === undefined ? null : _ref2$message;
			var _ref2$type = _ref2.type;
			var type = _ref2$type === undefined ? null : _ref2$type;
	
			if (!message) {
				return;
			}
			nNotification.show({
				content: message,
				type: type,
				trackable: 'myft-feedback-notification'
			});
		});
	}
	
	function onLoad(ev) {
		var myftFeature = myFtFeatureFromEvent(ev);
		results[myftFeature] = ev.detail.Items || ev.detail.items || [];
	
		//FIXME: remove this and make myFtClient.loaded update after client-side changes
		if (myftFeature === 'preferred') {
			followEmail.setInitialPrefs();
		}
	
		updateUiForFeature({
			myftFeature: myftFeature,
			subjects: results[myftFeature],
			state: true
		});
	}
	
	// extract properties with _rel. prefix into nested object, as expected by the API for relationship props
	function extractMetaData(inputs) {
		var meta = {};
	
		inputs.forEach(function (input) {
			if (input.name.startsWith('_rel.')) {
				var key = input.name.slice('_rel.'.length);
				meta._rel = meta._rel || {};
				meta._rel[key] = input.value;
			} else if (input.type === 'hidden') {
				meta[input.name] = input.value;
			}
		});
	
		return meta;
	}
	
	function getInteractionHandler(myftFeature) {
		return function (ev, el) {
			ev.preventDefault();
	
			var buttonWithValTriggered = !!(el.tagName.toLowerCase() === 'button' && el.name && el.value);
			var activeButton = buttonWithValTriggered ? el : el.querySelector('button');
			var form = buttonWithValTriggered ? el.closest('form') : el;
			var formButtons = buttonWithValTriggered ? $$('button', form) : [activeButton];
	
			if (formButtons.some(function (button) {
				return button.hasAttribute('disabled');
			})) {
				return;
			}
	
			formButtons.forEach(function (button) {
				return button.setAttribute('disabled', '');
			});
	
			var isPressed = activeButton.getAttribute('aria-pressed') === 'true';
	
			var action = void 0;
			if (buttonWithValTriggered) {
				action = activeButton.value === 'delete' ? 'remove' : 'add';
			} else {
				action = isPressed ? 'remove' : 'add';
			}
	
			var id = form.getAttribute(idProperties[myftFeature]);
			var type = types[myftFeature];
			var hiddenFields = $$('input[type="hidden"]', form);
			var metaFields = buttonWithValTriggered ? [activeButton].concat((0, _toConsumableArray3.default)(hiddenFields)) : hiddenFields;
	
			var meta = extractMetaData(metaFields);
	
			if (~['add', 'remove'].indexOf(action)) {
				(function () {
					var actorId = form.getAttribute('data-actor-id');
	
					if (type === 'concept') {
						(function () {
							var conceptIds = id.split(',');
							var taxonomies = meta.taxonomy.split(',');
							var names = meta.name.split(',');
	
							// Prevents the email overlay from triggering if there are bulk follow actions
							if (conceptIds.length > 1) {
								collectionPending = true;
							}
	
							var followPromises = conceptIds.map(function (conceptId, i) {
								var singleMeta = (0, _assign2.default)({}, meta, {
									name: names[i],
									taxonomy: taxonomies[i]
								});
								return myftClient[action](actors[myftFeature], actorId, myftFeature, type, conceptId, singleMeta);
							});
	
							_promise2.default.all(followPromises).then(function () {
								return toggleButton(activeButton, action === 'add');
							}).catch(function () {}).then(function () {
								return collectionPending = false;
							});
						})();
					} else {
						myftClient[action](actors[myftFeature], actorId, myftFeature, type, id, meta);
					}
				})();
			} else {
				myftClient[action](myftFeature, type, id, meta);
			}
		};
	}
	
	function init(opts) {
		if (initialised) {
			return;
		}
		initialised = true;
		flags = opts.flags;
	
		grabUrlHashWithPrefix('myft:notification:').then(function (messageKey) {
			if (!messageKey || !nNotificationMsgs.hasOwnProperty(messageKey)) {
				return;
			}
			nNotification.show({
				content: nNotificationMsgs[messageKey],
				type: 'clippings',
				duration: 0
			});
		});
	
		grabUrlHashWithPrefix('myft:list-overlay:').then(function (messageKey) {
			if (messageKey === 'clippings') {
				var matches = window.location.pathname.match(/^\/content\/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/);
				if (matches && matches.length) {
					showArticleSavedOverlay(matches[1], true);
				}
			}
		});
	
		if (opts && opts.anonymous) {
			['follow', 'save'].forEach(function (action) {
				delegate.on('submit', '.n-myft-ui--' + action, function (ev) {
					ev.preventDefault();
					nNotification.show({
						content: nNotificationMsgs[action + 'Anon'],
						trackable: 'myft-anon'
					});
				});
			});
		} else {
			personaliseLinks();
	
			(0, _keys2.default)(uiSelectors).forEach(function (myftFeature) {
				if (myftClient.loaded['myftFeature.' + types[myftFeature]]) {
					results[myftFeature] = myftClient.loaded['myftFeature.' + types[myftFeature]];
	
					updateUiForFeature({
						myftFeature: myftFeature,
						subjects: results[myftFeature],
						state: true
					});
	
					//FIXME: remove this and make myFtClient.loaded update after client-side changes
					if (myftFeature === 'preferred') {
						followEmail.setInitialPrefs();
					}
				} else {
					document.body.addEventListener('myft.user.' + myftFeature + '.' + types[myftFeature] + '.load', onLoad);
				}
	
				document.body.addEventListener('myft.' + actors[myftFeature] + '.' + myftFeature + '.' + types[myftFeature] + '.add', function (ev) {
					return updateAfterIO(myFtFeatureFromEvent(ev), ev.detail, actionFromEvent(ev));
				});
				document.body.addEventListener('myft.' + actors[myftFeature] + '.' + myftFeature + '.' + types[myftFeature] + '.remove', function (ev) {
					return updateAfterIO(myFtFeatureFromEvent(ev), ev.detail, actionFromEvent(ev));
				});
				document.body.addEventListener('myft.' + actors[myftFeature] + '.' + myftFeature + '.' + types[myftFeature] + '.update', function (ev) {
					return updateAfterIO(myFtFeatureFromEvent(ev), ev.detail, actionFromEvent(ev));
				});
	
				delegate.on('submit', uiSelectors[myftFeature], getInteractionHandler(myftFeature));
			});
	
			delegate.on('click', '.n-myft-ui--prefer-group button', getInteractionHandler('preferred'));
	
			//copy from list to list
			delegate.on('click', '[data-myft-ui="copy-to-list"]', function (ev) {
				ev.preventDefault();
				showCopyToListOverlay(ev.target.getAttribute('data-content-id'), ev.target.getAttribute('data-actor-id'));
			});
	
			delegate.on('click', '[data-myft-ui="create-list"]', function (ev) {
				ev.preventDefault();
				showCreateListOverlay();
			});
		}
	}
	
	function updateUi(el, ignoreLinks) {
		if (!ignoreLinks) {
			personaliseLinks(el);
		}
	
		(0, _keys2.default)(uiSelectors).forEach(function (myftFeature) {
			if (!results[myftFeature]) {
				return;
			}
	
			updateUiForFeature({
				myftFeature: myftFeature,
				subjects: results[myftFeature],
				state: true,
				context: el
			});
		});
	}
	
	function personaliseLinks(el) {
		var links = el && el.nodeName === 'A' ? [el] : $$('a[href^="/myft"]', el);
		links.forEach(function (link) {
			myftClient.personaliseUrl(link.getAttribute('href')).then(function (personalisedUrl) {
				return link.setAttribute('href', personalisedUrl);
			});
		});
	}

/***/ },
/* 351 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
		toggleState: function toggleState(btn, alreadyToggled) {
	
			var ariaLabel = btn.getAttribute('aria-label');
			var alternateAriaLabel = btn.getAttribute('data-alternate-label');
	
			if (ariaLabel) {
				btn.setAttribute('aria-label', alternateAriaLabel);
				btn.setAttribute('title', alternateAriaLabel);
				btn.setAttribute('data-alternate-label', ariaLabel);
			}
			var text = btn.textContent || btn.innerText;
	
			if (text) {
				var alternateText = btn.getAttribute('data-alternate-text') || alternateAriaLabel;
				btn.textContent = alternateText;
				btn.setAttribute('data-alternate-text', text);
			}
	
			var isPressed = btn.getAttribute('aria-pressed') === 'true';
	
			if (!alreadyToggled) {
				btn.setAttribute('aria-pressed', !isPressed);
			}
	
			btn.dispatchEvent(new CustomEvent('nButtons.stateChange', {
				detail: {
					state: isPressed
				},
				bubbles: true
			}));
	
			return btn;
		}
	};

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(353);

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(354);

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var template = __webpack_require__(355);
	var timeoutDuration = 5000;
	
	var stack = [];
	var eventShow = function eventShow(e) {
		return show(e.detail);
	};
	var isInstantiated = false;
	var container = void 0;
	
	var Notice = function () {
		function Notice(options) {
			(0, _classCallCheck3.default)(this, Notice);
	
	
			options.trackable = options.trackable || 'notification-' + options.type;
	
			this.notice = document.createElement('div');
			this.notice.appendChild(template(options));
			this.notice.querySelector('button').onclick = this.hide.bind(this);
	
			var firstChild = container.firstChild;
			container.insertBefore(this.notice, firstChild);
	
			if (options.duration !== 0) {
				this.timeout = setTimeout(this.hide.bind(this), options.duration || timeoutDuration);
			}
	
			this.optionsContent = options.content;
		}
	
		Notice.prototype.hide = function hide() {
			clearTimeout(this.timeout);
			this.notice.parentNode.removeChild(this.notice);
			var index = stack.indexOf(this);
			if (index > -1) {
				stack.splice(index, 1);
			}
			this.dispatchNotificationCloseEvent();
		};
	
		Notice.prototype.dispatchNotificationCloseEvent = function dispatchNotificationCloseEvent() {
			document.dispatchEvent(new CustomEvent('nNotification.close'));
		};
	
		return Notice;
	}();
	
	function show(options) {
		if (!isInstantiated) {
			init();
		}
		if (stack.length > 0 && stack[stack.length - 1].optionsContent === options.content) {
			var lastNotice = stack[stack.length - 1];
			clearTimeout(lastNotice.timeout);
			lastNotice.timeout = setTimeout(lastNotice.hide.bind(lastNotice), timeoutDuration);
		} else {
			stack.push(new Notice(options));
		}
	}
	
	function init() {
		if (isInstantiated) return;
	
		container = document.createElement('div');
		container.className = 'n-notification';
		document.body.appendChild(container);
		document.addEventListener("nNotification.show", eventShow, false);
		isInstantiated = true;
	}
	
	function teardown() {
		stack.forEach(function (item) {
			return item.hide();
		});
		stack.length = 0;
		container.parentNode.removeChild(container);
		document.removeEventListener("nNotification.show", eventShow, false);
		isInstantiated = false;
	}
	
	module.exports = {
		init: init,
		show: show,
		teardown: teardown
	};

/***/ },
/* 355 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function (options) {
	
		var noticeEl = document.createElement('div');
		noticeEl.className = 'n-notification__item n-notification--' + (options.type ? options.type : 'default');
		noticeEl.setAttribute("role", "alert");
		noticeEl.setAttribute("data-trackable", options.trackable);
	
		var contentWrapperEl = document.createElement('div');
		contentWrapperEl.className = "n-notification__content-wrapper";
	
		if (options.title) {
			var titleEl = document.createElement('h3');
			titleEl.className = "n-notification__title";
			titleEl.innerHTML = options.title;
			contentWrapperEl.appendChild(titleEl);
		}
	
		if (options.content) {
			var contentEl = document.createElement('div');
			contentEl.className = "n-notification__content";
			contentEl.innerHTML = options.content;
			contentWrapperEl.appendChild(contentEl);
		}
	
		var buttonEl = document.createElement('button');
		buttonEl.className = "n-notification__close";
		buttonEl.setAttribute("data-trackable", "close");
		buttonEl.innerHTML = "Close";
	
		noticeEl.appendChild(contentWrapperEl);
		noticeEl.appendChild(buttonEl);
	
		return noticeEl;
	};

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(134);
	module.exports.__wrapsOrigami = true;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialized = false;
	var supportsHistory = void 0;
	
	function removeHash() {
		var loc = window.location;
		var body = document.body;
		var scrollV = void 0;
		var scrollH = void 0;
	
		if (supportsHistory) history.replaceState('', document.title, loc.pathname + loc.search);else {
			// flicker-free solution for <=IE9
			scrollV = body.scrollTop;
			scrollH = body.scrollLeft;
			loc.hash = '';
			body.scrollTop = scrollV;
			body.scrollLeft = scrollH;
		}
	}
	
	module.exports = function (hashPrefix) {
		if (!initialized) {
			supportsHistory = window.history && 'replaceState' in history;
		}
		initialized = true;
	
		var hash = location.hash.substring(1);
		var startsWithPrefix = hash && hash.indexOf(hashPrefix) === 0;
		var messageKey = hash.substring(hashPrefix.length);
	
		if (startsWithPrefix) {
			removeHash();
			return _promise2.default.resolve(messageKey);
		} else {
			return _promise2.default.resolve();
		}
	};

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	var require;'use strict';
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*** IMPORTS FROM imports-loader ***/
	var requireText = require;
	
	var _myFtClient = __webpack_require__(326);
	var _setFollowPreferences = __webpack_require__(359);
	
	//TODO: clean up on overlay close
	
	var _overlayForm = void 0;
	
	//FIXME: remove this and make myFtClient.loaded update after client-side changes
	var prefs = {
		subscribedToDigest: null,
		userDismissed: null
	};
	
	function setInitialPrefs() {
		var allLoadedPrefs = _myFtClient.loaded['preferred.preference'].items;
	
		prefs.subscribedToDigest = allLoadedPrefs.find(function (pref) {
			return pref.uuid === 'email-digest';
		});
		prefs.userDismissed = allLoadedPrefs.find(function (pref) {
			return pref.uuid === 'follow-email-dismissed';
		});
	}
	
	function _overlayFormHandler(ev, overlay) {
		ev.preventDefault();
		// Default for users who hit enter
		var method = 'put';
	
		if (ev.currentTarget.tagName.toLowerCase() === 'button') {
			method = ev.currentTarget.value;
		}
	
		_setFollowPreferences(_myFtClient.userId, method, _overlayForm['follow-email-dismissed'].checked).catch(function () {
			return null;
		}).then(function () {
			return overlay.close();
		});
	}
	
	function setUpOverlayListeners(overlay) {
		_overlayForm = overlay ? overlay.content.querySelector('.js-follow-email-form') : null;
	
		if (!_overlayForm) {
			return;
		}
	
		_overlayForm.addEventListener('submit', function (ev) {
			_overlayFormHandler(ev, overlay);
		});
	
		[].concat((0, _toConsumableArray3.default)(_overlayForm.querySelectorAll('button'))).forEach(function (el) {
			return el.addEventListener('click', function (ev) {
				_overlayFormHandler(ev, overlay);
			});
		});
	}
	
	module.exports = {
		prefs: prefs,
		setInitialPrefs: setInitialPrefs,
		setUpOverlayListeners: setUpOverlayListeners
	};

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var myFtApi = __webpack_require__(326);
	var relData = {
		timezone: 'Europe/London',
		type: 'daily'
	};
	
	function addPref(uuid, userId, rel) {
		var data = {};
	
		if (rel) {
			data._rel = rel;
		}
	
		//TODO: align client/server-side methods in client
		if (typeof myFtApi.addRelationship === 'function') {
			return myFtApi.addRelationship('user', userId, 'preferred', 'preference', (0, _assign2.default)({}, data, { uuid: uuid }));
		} else {
			return myFtApi.add('user', userId, 'preferred', 'preference', uuid, data);
		}
	}
	
	module.exports = function (userId, method, userDismissed) {
		var emailPrefPromise = _promise2.default.resolve();
		var dismissPrefPromise = _promise2.default.resolve();
	
		if (method === 'put') {
			emailPrefPromise = addPref('email-digest', userId, relData);
		}
	
		if (userDismissed) {
			dismissPrefPromise = addPref('follow-email-dismissed', userId);
		}
	
		return _promise2.default.all([emailPrefPromise, dismissPrefPromise]);
	};

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.init = init;
	/*
	* ui for instant alerts buttons
	* ui.js has become so complex that we are splitting instant alerts into its own file until it gets refactored
	*/
	
	var nextButtons = __webpack_require__(351);
	var nNotification = __webpack_require__(352);
	var Delegate = __webpack_require__(141);
	var myftClient = __webpack_require__(326);
	
	var delegate = new Delegate(document.body);
	var $ = __webpack_require__(203).$;
	var $$ = __webpack_require__(203).$$;
	var subscribeUrl = '/products?segID=400863&segmentID=190b4443-dc03-bd53-e79b-b4b6fbd04e64';
	var signInLink = '/login';
	
	var UI_HOOK = '[data-myft-ui="instant"]';
	var config = void 0;
	
	// until API is updated to return modelled response data from create calls, fallback to old raw format
	function apiBackwardsCompatibility(response) {
		return response._rel ? response._rel.instant : response.results[0].rel.properties.instant;
	}
	
	function updateConceptData(subjectId, data) {
		myftClient.updateRelationship('user', null, 'followed', 'concept', subjectId, data);
	}
	
	function toggleButton(buttonEl, state) {
		var isPressed = buttonEl.getAttribute('aria-pressed') === 'true';
	
		if (state !== isPressed) {
			nextButtons.toggleState(buttonEl);
		}
		buttonEl.removeAttribute('disabled');
		buttonEl.setAttribute('value', !state);
	}
	
	function updateButtons(subjectId, newState) {
		var affectedButtons = $$(UI_HOOK + '[data-concept-id="' + subjectId + '"] button');
		affectedButtons.forEach(function (button) {
			toggleButton(button, newState);
		});
	}
	
	function conceptRemoved(conceptData) {
		updateButtons(conceptData.subject, false);
	}
	
	function conceptUpdated(conceptData) {
		var newState = apiBackwardsCompatibility(conceptData);
		updateButtons(conceptData.subject, newState);
	}
	
	function showAnonNotification() {
		nNotification.show({
			content: 'Please <a href="' + subscribeUrl + '" data-trackable="Subscribe">subscribe</a> or <a href="' + signInLink + '" data-trackable="Sign In">sign in</a> to receive instant alerts.',
			trackable: 'myft-anon'
		});
	}
	
	function extractMetaData(inputs) {
		var meta = {};
	
		inputs.forEach(function (input) {
			if (input.name.startsWith('_rel.')) {
				var key = input.name.slice('_rel.'.length);
				meta._rel = meta._rel || {};
				meta._rel[key] = input.value;
			} else if (input.type === 'hidden') {
				meta[input.name] = input.value;
			}
		});
	
		return meta;
	}
	
	function formSubmitted(event, element) {
		event.preventDefault();
		if (config && config.anonymous) {
			showAnonNotification();
		} else {
			var subjectId = element.getAttribute('data-concept-id');
			var submitEl = $('button', element);
			var inputs = $$('input', element);
			inputs.push(submitEl);
			updateConceptData(subjectId, extractMetaData(inputs));
		}
	}
	
	// update UI to show real state of instant alerts
	// until we have ESI, we cannot do this server-side as it could cache the wrong state
	function applyModel() {
		if (myftClient.loaded && myftClient.loaded['followed.concept']) {
			myftClient.loaded['followed.concept'].items.forEach(function (item) {
				if (item._rel.instant) {
					updateButtons(item.uuid, true);
				}
			});
		}
	}
	
	function eventListeners() {
		document.body.addEventListener('myft.user.followed.concept.load', applyModel);
		document.body.addEventListener('myft.user.followed.concept.remove', function (ev) {
			return conceptRemoved(ev.detail);
		});
		document.body.addEventListener('myft.user.followed.concept.update', function (ev) {
			return conceptUpdated(ev.detail);
		});
		delegate.on('submit', '' + UI_HOOK, formSubmitted);
	}
	
	// delegate is listening to the whole body therefore events look for forms across the whole page rather than setting up instances
	// if we used instances we could reduce the amount of DOM queries that we do
	function init(opts) {
		var instantAlertForms = $$(UI_HOOK);
		config = opts;
		if (instantAlertForms.length > 0) {
			applyModel();
			eventListeners();
		}
	}

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _slicedToArray2 = __webpack_require__(362);
	
	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var myFtClient = __webpack_require__(326);
	var buttons = __webpack_require__(351);
	var superstore = __webpack_require__(217);
	var STORAGE_KEY = 'n-myft-digest-promo-seen';
	
	var CLASSES = {
		ctaBtn: '.n-myft-digest-promo__cta-btn',
		dismissBtn: '.n-myft-digest-promo__dismiss-btn',
		promoComponent: '.n-myft-digest-promo',
		promoEnabled: 'n-myft-digest-promo--enabled'
	};
	
	var btn = void 0;
	var element = void 0;
	var conceptId = void 0;
	
	function bindListeners() {
		var btn = document.querySelector(CLASSES.ctaBtn);
		var dismissBtn = document.querySelector(CLASSES.dismissBtn);
	
		btn.addEventListener('click', addToDigest, false);
		dismissBtn.addEventListener('click', function () {
			hidePromo();
			setDismissState();
		}, false);
	}
	
	function shouldShowPromo(conceptId) {
		return _promise2.default.all([myFtClient.get('followed', 'concept', conceptId), myFtClient.get('preferred', 'preference', 'email-digest')]).then(function (_ref) {
			var _ref2 = (0, _slicedToArray3.default)(_ref, 2);
	
			var follows = _ref2[0];
			var prefers = _ref2[1];
	
			return follows.length === 0 && prefers.length === 0 && !getDismissState();
		});
	}
	
	function showPromo() {
		element = document.querySelector(CLASSES.promoComponent);
		element.classList.add(CLASSES.promoEnabled);
	}
	
	function hidePromo() {
		element = document.querySelector(CLASSES.promoComponent);
		element.classList.remove(CLASSES.promoEnabled);
	}
	
	function getDismissState() {
		return superstore.session.get(STORAGE_KEY);
	}
	
	function setDismissState() {
		superstore.session.set(STORAGE_KEY, 1);
	}
	
	function addToDigest() {
		var metaConcept = {
			name: btn.getAttribute('data-title'),
			taxonomy: btn.getAttribute('data-taxonomy')
		};
		var metaEmail = {
			_rel: {
				type: 'daily',
				timezone: 'Europe/London'
			}
		};
	
		return _promise2.default.all([myFtClient.add('user', null, 'followed', 'concept', conceptId, metaConcept), myFtClient.add('user', null, 'preferred', 'preference', 'email-digest', metaEmail)]).then(function () {
			buttons.toggleState(btn, true);
			btn.setAttribute('disabled', true);
		});
	}
	
	function init() {
		element = document.querySelector(CLASSES.promoComponent);
		if (!superstore.isPersisting() || !element) {
			return;
		}
		btn = document.querySelector(CLASSES.ctaBtn);
		conceptId = btn.getAttribute('data-concept-id');
		shouldShowPromo(conceptId).then(function (shouldShow) {
			if (shouldShow) {
				showPromo();
				bindListeners();
			}
		});
	};
	
	module.exports = { init: init };

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _isIterable2 = __webpack_require__(363);
	
	var _isIterable3 = _interopRequireDefault(_isIterable2);
	
	var _getIterator2 = __webpack_require__(301);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;
	
	    try {
	      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);
	
	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }
	
	    return _arr;
	  }
	
	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if ((0, _isIterable3.default)(Object(arr))) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(364), __esModule: true };

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(56);
	__webpack_require__(12);
	module.exports = __webpack_require__(365);

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(179)
	  , ITERATOR  = __webpack_require__(53)('iterator')
	  , Iterators = __webpack_require__(35);
	module.exports = __webpack_require__(20).isIterable = function(it){
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    || Iterators.hasOwnProperty(classof(O));
	};

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(367);

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.lazyLoad = undefined;
	
	var _lazyLoad = __webpack_require__(368);
	
	var _lazyLoad2 = _interopRequireDefault(_lazyLoad);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.lazyLoad = _lazyLoad2.default;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var lazyLoadingModifier = 'lazy-loading';
	var lazyLoadingImageClass = 'n-image--' + lazyLoadingModifier;
	var lazyLoadingWrapperClass = 'n-image-wrapper--' + lazyLoadingModifier;
	
	var imageHasLoaded = function imageHasLoaded(img) {
		img.classList.remove(lazyLoadingImageClass);
		img.parentNode.classList.remove(lazyLoadingWrapperClass);
		img.removeEventListener('load', imageHasLoaded);
	};
	
	var loadImage = function loadImage(img) {
		img.addEventListener('load', function () {
			// NOTE: rather arbitrary, needed to get the fading to always work (possibly classes being removed to quickly)
			setTimeout(imageHasLoaded.bind(null, img), 13);
		});
		// add the src/srcset attribtues back in
		[].concat((0, _toConsumableArray3.default)(img.attributes)).forEach(function (attr) {
			if (/^data-src(set)?$/.test(attr.name)) {
				img.setAttribute(attr.name.replace('data-', ''), attr.value);
				img.removeAttribute(attr.name);
			}
		});
	};
	
	var intersectionCallback = function intersectionCallback(observer, changes) {
		changes.forEach(function (change) {
			var observedImg = change.target;
			loadImage(observedImg);
			observer.unobserve(observedImg);
		});
	};
	
	var observeIntersection = function observeIntersection(_ref, img) {
		var observer = _ref.observer;
	
		if (observer) {
			observer.observe(img);
		} else {
			loadImage(img);
		}
		img.setAttribute('data-n-image-lazy-load-js', '');
	};
	
	/**
	 * @param {Object} [opts = {}]
	 * @param {Element} [opts.root = document] - Where in the DOM to search for images
	 */
	
	exports.default = function () {
		var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
		var _ref2$root = _ref2.root;
		var root = _ref2$root === undefined ? document : _ref2$root;
	
		var observer = window.IntersectionObserver ? new IntersectionObserver(function (changes) {
			intersectionCallback(this, changes);
		}) : null;
		[].concat((0, _toConsumableArray3.default)(root.querySelectorAll('.' + lazyLoadingImageClass))).filter(function (img) {
			return !img.hasAttribute('data-n-image-lazy-load-js');
		}).forEach(observeIntersection.bind(null, { observer: observer }));
	};
	
	module.exports = exports['default'];

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(370);

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.passFlags = exports.message = exports.unregister = exports.register = undefined;
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var message = function message(msg) {
		if ('serviceWorker' in navigator) {
			return navigator.serviceWorker.ready.then(function (registration) {
				return new _promise2.default(function (resolve, reject) {
					// Create a Message Channel
					var messageChannel = new MessageChannel();
					// Handler for recieving message reply from service worker
					messageChannel.port1.onmessage = function (ev) {
						if (ev.data.error) {
							reject(ev.data.error);
						} else {
							resolve(ev.data);
						}
					};
					// Send message to service worker along with port for reply
					registration.active.postMessage(msg, [messageChannel.port2]);
				});
			});
		} else {
			return _promise2.default.reject('Service Worker unavailable');
		}
	};
	
	var register = function register(flags) {
		if ('serviceWorker' in navigator && flags.get('serviceWorker')) {
			if (document.cookie.length > 4000) {
				console.warn('Cookie is greater than 4000 characters - unregistering service worker due to potential failure to retrieve updates');
				return unregister();
			}
			return navigator.serviceWorker.register('/__sw.js?cache-bust=1').then(function (registration) {
				return passFlags(JSON.parse((0, _stringify2.default)(flags))) // to avoid error caused by the getters
				.then(function () {
					return registration;
				});
			});
		} else {
			return _promise2.default.reject('Service Worker unavailable, or serviceWorker flag off');
		}
	};
	
	var unregister = function unregister() {
		if ('serviceWorker' in navigator) {
			return navigator.serviceWorker.getRegistration().then(function (registration) {
				return registration ? registration.unregister() : false;
			});
		} else {
			return _promise2.default.resolve(false);
		}
	};
	
	// Make sure install barrier never gets shown
	// (at least while we consider the web app's role)
	window.addEventListener('beforeinstallprompt', function (ev) {
		ev.preventDefault();
		return false;
	});
	
	function passFlags(flags) {
		return message({
			type: 'flagsUpdate',
			flags: flags
		});
	}
	
	exports.register = register;
	exports.unregister = unregister;
	exports.message = message;
	exports.passFlags = passFlags;

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(372);

/***/ },
/* 372 */
/***/ function(module, exports) {

	'use strict';
	
	// Dummy Symbol implementations purely to avoid babelified code
	// that expects these to be defined erroring
	window.__BabelPolyfillSilencerSymbol = function () {
		console.warn('Symbol is not available in this browser yet. You may have a race condition with code reliant on Symbol executing before a polyfill has loaded');
		return {};
	};
	window.__BabelPolyfillSilencerSymbol.iterator = {};

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(374);
	module.exports.__wrapsOrigami = true;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(375);

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var viewport = __webpack_require__(143);
	
	var rootClassName = 'o-expander';
	var count = 0;
	
	var expandMethods = {
		toggleContent: function toggleContent(state) {
			if (state === 'expand') {
				this.contentEl.classList.add(this.contentClassName + '--expanded');
				this.contentEl.classList.remove(this.contentClassName + '--collapsed');
			} else {
				this.contentEl.classList.remove(this.contentClassName + '--expanded');
				this.contentEl.classList.add(this.contentClassName + '--collapsed');
			}
		},
		hasStateDefined: function hasStateDefined() {
			return this.contentEl.classList.contains(this.contentClassName + '--expanded') || this.contentEl.classList.contains(this.contentClassName + '--collapsed');
		},
		isRequired: function isRequired() {
			var overflows = false;
			if (typeof this.opts.shrinkTo === 'number') {
				if (this.el.querySelectorAll(this.opts.countSelector).length > this.opts.shrinkTo) {
					overflows = true;
				}
			} else {
				if (this.isCollapsed()) {
					overflows = this.contentEl.clientHeight < this.contentEl.scrollHeight;
				} else {
					this.collapse();
					overflows = this.contentEl.clientHeight < this.contentEl.scrollHeight;
					this.expand();
				}
			}
			return overflows;
		},
		isCollapsed: function isCollapsed() {
			return !this.contentEl.classList.contains(this.contentClassName + '--expanded');
		}
	};
	
	var hiderMethods = {
		toggleContent: function toggleContent(state) {
			if (state === 'expand') {
				this.contentEl.setAttribute('aria-hidden', 'false');
			} else {
				this.contentEl.setAttribute('aria-hidden', 'true');
			}
		},
		hasStateDefined: function hasStateDefined() {
			return this.contentEl.hasAttribute('aria-hidden');
		},
		isRequired: function isRequired() {
			return true;
		},
		isCollapsed: function isCollapsed() {
			return this.contentEl.getAttribute('aria-hidden') === 'true';
		}
	};
	
	function mixin(target, methods) {
		(0, _keys2.default)(methods).forEach(function (key) {
			target[key] = methods[key];
		});
	}
	
	var Expander = function Expander(el, opts) {
		var _this = this;
	
		this.opts = opts || {};
		this.el = el;
	
		this.className = this.opts.className || rootClassName;
		this.contentClassName = this.opts.contentClassName || rootClassName + '__content';
		this.toggleClassName = this.opts.toggleClassName || rootClassName + '__toggle';
	
		this.configure('shrinkTo', 'height');
		this.configure('countSelector', '.' + this.contentClassName + ' > li');
		this.configure('expandedToggleText', this.opts.shrinkTo === 'hidden' ? 'hide' : this.opts.shrinkTo === 'height' ? 'less' : 'fewer');
		this.configure('collapsedToggleText', this.opts.shrinkTo === 'hidden' ? 'show' : 'more');
		this.configure('toggleSelector', 'button.' + this.toggleClassName);
		this.configure('toggleState', 'all');
	
		if (/^\d+$/.test(this.opts.shrinkTo)) {
			this.opts.shrinkTo = +this.opts.shrinkTo;
		}
	
		if (this.opts.shrinkTo === 'hidden') {
			mixin(this, hiderMethods);
		} else {
			mixin(this, expandMethods);
		}
	
		if (typeof this.opts.shrinkTo === 'number' && !this.opts.countSelector) {
			throw 'when collapsing to a number of items specify a selector to identify how many items exist';
		}
	
		this.contentEl = this.el.querySelector('.' + this.contentClassName);
	
		this.toggles = [].slice.apply(this.el.querySelectorAll(this.opts.toggleSelector));
	
		if (!this.toggles.length) {
			throw new Error('o-expander needs a toggle button (use a button not a link)');
		}
		this.ariaToggles();
	
		if (this.opts.shrinkTo === 'height') {
			viewport.listenTo('resize');
			viewport.listenTo('orientation');
			document.body.addEventListener('oViewport.orientation', function () {
				return _this.apply();
			});
			document.body.addEventListener('oViewport.resize', function () {
				return _this.apply();
			});
		}
	
		this.toggles.forEach(function (toggle) {
			toggle.addEventListener('click', function () {
				return _this.invertState();
			});
		});
		this.el.setAttribute('data-o-expander-js', '');
		this.apply(true);
		this.emit('init');
	};
	
	Expander.prototype.configure = function (setting, defaultVal) {
		var candidate = this.el.getAttribute('data-o-expander-' + setting.replace(/[A-Z]/g, function ($0) {
			return '-' + $0.toLowerCase();
		}));
		if (typeof candidate === 'undefined' || candidate === null) {
			candidate = this.opts[setting];
		}
		this.opts[setting] = !(typeof candidate === 'undefined' || candidate === null) ? candidate : defaultVal;
	};
	
	Expander.prototype.apply = function (isSilent) {
		if (!this.isRequired()) {
			this.el.classList.add(this.className + '--inactive');
		} else {
			this.el.classList.remove(this.className + '--inactive');
			if (typeof this.opts.shrinkTo === 'number') {
				[].slice.call(this.el.querySelectorAll(this.opts.countSelector), this.opts.shrinkTo)
				// The class is added via JS, so it can use the default name
				.forEach(function (el) {
					return el.classList.add('o-expander__collapsible-item');
				});
			}
			if (this.hasStateDefined()) {
				this.displayState(isSilent);
			} else {
				this.collapse(isSilent);
			}
		}
	};
	
	Expander.prototype.destroy = function () {
		var _this2 = this;
	
		if (this.opts.shrinkTo === 'height') {
			document.body.removeEventListener('oViewport.orientation', function () {
				return _this2.apply();
			});
			document.body.removeEventListener('oViewport.resize', function () {
				return _this2.apply();
			});
		}
		this.toggles.forEach(function (toggle) {
			toggle.removeEventListener('click', _this2.invertState);
			toggle.removeAttribute('aria-controls');
			toggle.removeAttribute('aria-expanded');
		});
		this.contentEl.removeAttribute('aria-hidden');
		this.contentEl.classList.remove(this.contentClassName + '--expanded');
		this.contentEl.classList.remove(this.contentClassName + '--collapsed');
		this.el.removeAttribute('data-o-expander-js');
	};
	
	Expander.prototype.ariaToggles = function () {
		this.id = this.contentEl.id;
	
		if (!this.id) {
			while (document.querySelector('#o-expander__toggle--' + count)) {
				count++;
			}
			this.id = this.contentEl.id = 'o-expander__toggle--' + count;
		}
	
		var id = this.id;
		this.toggles.forEach(function (toggle) {
			return toggle.setAttribute('aria-controls', id);
		});
	};
	
	Expander.prototype.invertState = function () {
		this.isCollapsed() ? this.expand() : this.collapse();
	};
	
	Expander.prototype.displayState = function (isSilent) {
		this.isCollapsed() ? this.collapse(isSilent) : this.expand(isSilent);
	};
	
	Expander.prototype.expand = function (isSilent) {
		this.toggleExpander('expand', isSilent);
	};
	
	Expander.prototype.collapse = function (isSilent) {
		this.toggleExpander('collapse', isSilent);
	};
	
	Expander.prototype.emit = function (name) {
		this.el.dispatchEvent(new CustomEvent('oExpander.' + name, { bubbles: true }));
	};
	
	Expander.prototype.toggleExpander = function (state, isSilent) {
		var _this3 = this;
	
		this.toggleContent(state);
		if (this.opts.toggleState !== 'none') {
			this.toggles.forEach(function (toggle) {
				if (_this3.opts.toggleState !== 'aria') {
					toggle.innerHTML = _this3.opts[state === 'expand' ? 'expandedToggleText' : 'collapsedToggleText'] + '<i></i>';
				}
				toggle.setAttribute('aria-expanded', state === 'expand' ? 'true' : 'false');
			});
		}
		if (!isSilent) {
			this.emit(state);
		}
	};
	
	var construct = function construct(el, opts) {
		return el.hasAttribute('data-o-expander-js') ? undefined : new Expander(el, opts);
	};
	
	var init = function init(el, opts) {
		if (!el) {
			el = document.body;
		}
		if (!(el instanceof HTMLElement)) {
			el = document.querySelector(el);
		}
		if (/\bo-expander\b/.test(el.getAttribute('data-o-component'))) {
			return construct(el, opts);
		}
		return [].map.call(el.querySelectorAll('[data-o-component~="o-expander"]'), function (el) {
			return construct(el, opts);
		});
	};
	
	var constructAll = function constructAll() {
		init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	if (typeof window !== 'undefined') {
		document.addEventListener('o.DOMContentLoaded', constructAll);
	}
	
	module.exports = {
		init: init
	};

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var oGrid = __webpack_require__(263);
	var viewport = __webpack_require__(377);
	var utils = __webpack_require__(203);
	
	var listening = false;
	
	function fireBreakpointEvent(breakpoint) {
		utils.broadcast('grid.layoutChange', { layout: breakpoint });
	}
	
	function listenForBreakpointChanges() {
		if (listening) {
			return;
		}
	
		var lastBreakpoint = oGrid.getCurrentLayout();
		fireBreakpointEvent(lastBreakpoint);
		viewport.listenTo('resize');
		document.body.addEventListener('oViewport.resize', function () {
			var breakpoint = oGrid.getCurrentLayout();
			if (breakpoint !== lastBreakpoint) {
				fireBreakpointEvent(breakpoint);
				lastBreakpoint = breakpoint;
			}
		});
		listening = true;
	}
	
	module.exports = oGrid;
	module.exports.listenForBreakpointChanges = listenForBreakpointChanges;
	module.exports.__wrapsOrigami = true;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(143);
	module.exports.__wrapsOrigami = true;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(379);

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _video = __webpack_require__(380);
	
	var _video2 = _interopRequireDefault(_video);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var constructAll = function constructAll() {
		_video2.default.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	exports.default = _video2.default;
	module.exports = exports['default'];

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _oFetchJsonp = __webpack_require__(381);
	
	var _oFetchJsonp2 = _interopRequireDefault(_oFetchJsonp);
	
	var _getRendition = __webpack_require__(383);
	
	var _getRendition2 = _interopRequireDefault(_getRendition);
	
	var _ads = __webpack_require__(385);
	
	var _ads2 = _interopRequireDefault(_ads);
	
	var _info = __webpack_require__(386);
	
	var _info2 = _interopRequireDefault(_info);
	
	var _playlist = __webpack_require__(387);
	
	var _playlist2 = _interopRequireDefault(_playlist);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function eventListener(video, ev) {
		// Dispatch progress event at start, 25%, 50%, 75% and 100%
		if (ev.type === 'progress' && video.getProgress() % 25 !== 0) {
			return;
		}
	
		var event = new CustomEvent('oTracking.event', {
			detail: {
				action: ev.type,
				advertising: video.opts.advertising,
				category: 'video',
				contentId: video.opts.id,
				progress: video.getProgress()
			},
			bubbles: true
		});
		document.body.dispatchEvent(event);
	} /* global fetch */
	
	
	function addEvents(video, events) {
		var _this = this;
	
		events.forEach(function (event) {
			video.videoEl.addEventListener(event, eventListener.bind(_this, video));
		});
	}
	
	// use the image resizing service, if width supplied
	function updatePosterUrl(posterImage, width) {
		var url = 'https://image.webservices.ft.com/v1/images/raw/' + encodeURIComponent(posterImage) + '?source=o-video&quality=low';
		if (width) {
			url += '&fit=scale-down&width=' + width;
		}
	
		return url;
	}
	
	// converts data-o-video attributes to an options object
	function getOptionsFromDataAttributes(attributes) {
		var opts = {};
		// Try to get config set declaratively on the element
		Array.prototype.forEach.call(attributes, function (attr) {
			if (attr.name.indexOf('data-o-video') === 0) {
				// Remove the prefix part of the data attribute name and hyphen-case to camelCase
				var key = attr.name.replace('data-o-video-', '').replace(/-([a-z])/g, function (m, w) {
					return w.toUpperCase();
				});
	
				try {
					// If it's a JSON, a boolean or a number, we want it stored like that, and not as a string
					// We also replace all ' with " so JSON strings are parsed correctly
					opts[key] = JSON.parse(attr.value.replace(/\'/g, '"'));
				} catch (e) {
					opts[key] = attr.value;
				}
			}
		});
	
		return opts;
	}
	
	var defaultOpts = {
		advertising: false,
		autorender: true,
		classes: [],
		optimumwidth: null,
		placeholder: false,
		placeholderInfo: ['title'],
		data: null
	};
	
	var Video = function () {
		function Video(el, opts) {
			(0, _classCallCheck3.default)(this, Video);
	
			this.containerEl = el;
	
			this.opts = (0, _assign2.default)({}, defaultOpts, opts, getOptionsFromDataAttributes(this.containerEl.attributes));
	
			if (typeof this.opts.classes === 'string') {
				this.opts.classes = this.opts.classes.split(' ');
			}
	
			if (this.opts.classes.indexOf('o-video__video') === -1) {
				this.opts.classes.push('o-video__video');
			}
	
			this.targeting = {
				site: '/5887/ft.com',
				position: 'video',
				sizes: '592x333|400x225',
				videoId: this.opts.id
			};
	
			if (this.opts.advertising) {
				this.videoAds = new _ads2.default(this);
			}
	
			this.containerEl.setAttribute('data-o-video-js', '');
	
			if (this.opts.autorender === true) {
				this.init();
			}
		}
	
		Video.prototype.getData = function getData() {
			var _this2 = this;
	
			var dataPromise = this.opts.data ? _promise2.default.resolve(this.opts.data) : (0, _oFetchJsonp2.default)('//next-video.ft.com/api/' + this.opts.id).then(function (response) {
				if (response.ok) {
					return response.json();
				} else {
					throw Error('Brightcove responded with a ' + response.status + ' (' + response.statusText + ') for id ' + _this2.opts.id);
				}
			});
	
			return dataPromise.then(function (data) {
				_this2.videoData = data;
				_this2.posterImage = updatePosterUrl(data.videoStillURL, _this2.opts.optimumwidth);
				_this2.rendition = (0, _getRendition2.default)(data.renditions, _this2.opts);
			});
		};
	
		Video.prototype.renderVideo = function renderVideo() {
			if (this.rendition) {
				if (this.opts.placeholder) {
					this.addPlaceholder();
				} else {
					this.addVideo();
				}
			}
		};
	
		Video.prototype.init = function init() {
			var _this3 = this;
	
			return (this.opts.advertising ? this.videoAds.loadAdsLibrary() : _promise2.default.resolve()).catch(function () {
				// If ad doesn't load for some reason, load video as normal
				_this3.opts.advertising = false;
			}).then(function () {
				return _this3.getData();
			}).then(function () {
				return _this3.renderVideo();
			});
		};
	
		Video.prototype.addVideo = function addVideo() {
			this.videoEl = document.createElement('video');
			this.videoEl.controls = true;
			this.videoEl.className = Array.isArray(this.opts.classes) ? this.opts.classes.join(' ') : this.opts.classes;
			this.containerEl.classList.add('o-video--player');
	
			this.updateVideo();
	
			if (this.placeholderEl && !this.opts.advertising) {
				this.videoEl.autoplay = this.videoEl.autostart = true;
			}
	
			this.containerEl.appendChild(this.videoEl);
	
			addEvents(this, ['play', 'playing', 'pause', 'ended', 'progress']);
			this.videoEl.addEventListener('playing', this.pauseOtherVideos.bind(this));
			this.videoEl.addEventListener('suspend', this.clearCurrentlyPlaying.bind(this));
			this.videoEl.addEventListener('ended', this.clearCurrentlyPlaying.bind(this));
	
			if (this.opts.advertising) {
				this.videoAds.setUpAds();
			}
		};
	
		Video.prototype.updateVideo = function updateVideo() {
			this.videoEl.poster = this.posterImage;
			this.videoEl.src = this.rendition && this.rendition.url;
		};
	
		Video.prototype.addPlaceholder = function addPlaceholder() {
			var _this4 = this;
	
			this.placeholderEl = document.createElement('div');
			this.placeholderEl.className = 'o-video__placeholder';
	
			this.placeholderImageEl = document.createElement('img');
			this.placeholderImageEl.className = 'o-video__placeholder-image';
			this.placeholderImageEl.setAttribute('role', 'presentation');
			this.placeholderImageEl.setAttribute('alt', '');
	
			this.placeholderEl.appendChild(this.placeholderImageEl);
	
			// info panel
			if (this.opts.placeholderInfo.length) {
				this.infoPanel = new _info2.default(this);
			}
	
			// play button
			var playButtonEl = document.createElement('button');
			playButtonEl.className = 'o-video__play-button';
	
			var playButtonTextEl = document.createElement('span');
			playButtonTextEl.className = 'o-video__play-button-text';
			playButtonTextEl.textContent = 'Play video';
			playButtonEl.appendChild(playButtonTextEl);
	
			var playButtonIconEl = document.createElement('i');
			playButtonIconEl.className = 'o-video__play-button-icon';
			playButtonEl.appendChild(playButtonIconEl);
	
			this.placeholderEl.appendChild(playButtonEl);
	
			this.placeholderEl.addEventListener('click', function () {
				// Adds video soon so ads can start loading
				_this4.addVideo();
				_this4.videoEl.focus();
				_this4.videoEl.paused && _this4.videoEl.play();
	
				_this4.containerEl.removeChild(_this4.placeholderEl);
				_this4.infoPanel && _this4.infoPanel.teardown();
	
				delete _this4.placeholderEl;
				delete _this4.placeholderImageEl;
			});
	
			this.updatePlaceholder();
	
			this.containerEl.appendChild(this.placeholderEl);
		};
	
		Video.prototype.updatePlaceholder = function updatePlaceholder() {
			this.placeholderImageEl.src = this.posterImage;
			this.infoPanel && this.infoPanel.update();
		};
	
		Video.prototype.update = function update(newOpts) {
			var _this5 = this;
	
			this.videoEl && this.videoEl.pause();
			this.clearCurrentlyPlaying();
	
			this.opts = (0, _assign2.default)(this.opts, { data: null }, newOpts);
	
			if (!this.videoEl && !this.placeholderEl) {
				return this.init();
			}
	
			return this.getData().then(function () {
				if (_this5.placeholderEl) {
					_this5.updatePlaceholder();
				} else {
					_this5.updateVideo();
				}
			});
		};
	
		Video.prototype.getProgress = function getProgress() {
			return this.videoEl.duration ? parseInt(100 * this.videoEl.currentTime / this.videoEl.duration, 10) : 0;
		};
	
		Video.prototype.pauseOtherVideos = function pauseOtherVideos() {
			if (this.currentlyPlayingVideo && this.currentlyPlayingVideo !== this.videoEl) {
				this.currentlyPlayingVideo.pause();
			}
	
			this.currentlyPlayingVideo = this.videoEl;
		};
	
		Video.prototype.clearCurrentlyPlaying = function clearCurrentlyPlaying() {
			if (this.currentlyPlayingVideo !== this.videoEl) {
				this.currentlyPlayingVideo = null;
			}
		};
	
		Video.init = function init(rootEl, config) {
			var videos = [];
			if (!rootEl) {
				rootEl = document.body;
			} else if (typeof rootEl === 'string') {
				rootEl = document.querySelector(rootEl);
			}
	
			var videoEls = rootEl.querySelectorAll(':not([data-o-video-js])[data-o-component~="o-video"]');
	
			for (var i = 0; i < videoEls.length; i++) {
				videos.push(new Video(videoEls[i], config));
			}
	
			return videos;
		};
	
		return Video;
	}();
	
	Video.Playlist = _playlist2.default;
	
	exports.default = Video;
	module.exports = exports['default'];

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(382);

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.jsonpFetch = undefined;
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var jsonpCallbackNames = [];
	
	var generateCallbackName = function generateCallbackName() {
		var base = 'jsonpCallback';
		var callbackName = base + '_' + (jsonpCallbackNames.length + 1);
		jsonpCallbackNames.push(callbackName);
		return callbackName;
	};
	
	var crossDomainFetch = function crossDomainFetch() {
		var crossDomainFetch = 'withCredentials' in new XMLHttpRequest() ? fetch : jsonpFetch;
		return crossDomainFetch.apply(undefined, arguments);
	};
	
	var jsonpFetch = function jsonpFetch(url, opts) {
		var defaultOpts = {
			timeout: 2000
		};
		opts = opts || {};
		(0, _keys2.default)(defaultOpts).forEach(function (defaultOptsKey) {
			if (!opts.hasOwnProperty(defaultOptsKey)) {
				opts[defaultOptsKey] = defaultOpts[defaultOptsKey];
			}
		});
		return new _promise2.default(function (resolve, reject) {
			var callbackName = generateCallbackName();
			var timeout = void 0;
			window.FT = window.FT || {};
			window.FT[callbackName] = function (response) {
				var status = response.status ? response.status : 200;
				resolve({
					ok: Math.floor(status / 100) === 2,
					status: status,
					json: function json() {
						return _promise2.default.resolve(response.body || response);
					}
				});
				if (timeout) {
					clearTimeout(timeout);
				}
			};
	
			var scriptTag = document.createElement('script');
			scriptTag.defer = true;
			scriptTag.src = '' + url + (url.indexOf('?') > -1 ? '&' : '?') + 'callback=FT.' + callbackName;
			document.body.appendChild(scriptTag);
	
			timeout = setTimeout(function () {
				reject(new Error('JSONP request to ' + url + ' timed out'));
			}, opts.timeout);
		});
	};
	
	exports.default = crossDomainFetch;
	exports.jsonpFetch = jsonpFetch;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _supportedFormats = __webpack_require__(384);
	
	var _supportedFormats2 = _interopRequireDefault(_supportedFormats);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getRendition(renditions, options) {
		// allow mocking of supported formats module
		var opts = options || {};
		var width = opts.optimumvideowidth;
		var formats = opts.supportedFormats || (0, _supportedFormats2.default)();
		var appropriateRendition = void 0;
		// order smallest to largest
		var orderedRenditions = renditions.filter(function (rendition) {
			return formats.indexOf(rendition.videoCodec.toLowerCase()) > -1;
		}).sort(function (renditionOne, renditionTwo) {
			return renditionOne.frameWidth - renditionTwo.frameWidth;
		});
	
		// if no width supplied, get largest
		if (!width) {
			return orderedRenditions.pop();
		}
		// NOTE: rather use find...
		orderedRenditions.some(function (rendition) {
			if (rendition.frameWidth >= width) {
				appropriateRendition = rendition;
				return true;
			}
			return false;
		});
	
		return appropriateRendition || orderedRenditions.pop();
	};
	
	exports.default = getRendition;
	module.exports = exports['default'];

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var formats = {
		mpeg4: ['video/mp4; codecs="mp4v.20.8"'],
		h264: ['video/mp4; codecs="avc1.42E01E"', 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"'],
		ogg: ['video/ogg; codecs="theora"'],
		webm: ['video/webm; codecs="vp8, vorbis"']
	};
	
	function supportedFormats() {
		var testEl = document.createElement('video');
		var supported = [];
	
		try {
			(0, _keys2.default)(formats).filter(function (format) {
				formats[format].some(function (type) {
					return testEl.canPlayType(type);
				}) && supported.push(format);
			});
		} catch (e) {}
	
		return supported;
	}
	
	exports.default = supportedFormats;
	module.exports = exports['default'];

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global google */
	
	var sdkScriptLoaded = false;
	
	function createVideoOverlayElement() {
		var overlayEl = document.createElement('div');
		overlayEl.classList.add('o-video__overlay');
		return overlayEl;
	}
	
	var VideoAds = function () {
		function VideoAds(video) {
			(0, _classCallCheck3.default)(this, VideoAds);
	
			this.video = video;
			this.adsLoaded = false;
			this.videoLoad = false;
	
			if (!this.video.opts.placeholder) {
				this.overlayEl = createVideoOverlayElement();
				this.video.containerEl.appendChild(this.overlayEl);
			}
		}
	
		VideoAds.prototype.loadAdsLibrary = function loadAdsLibrary() {
			return new _promise2.default(function (resolve, reject) {
				var googleSdkScript = document.querySelector('[src="//imasdk.googleapis.com/js/sdkloader/ima3.js"]');
	
				if (!googleSdkScript) {
					googleSdkScript = document.createElement('script');
					googleSdkScript.setAttribute('type', 'text/javascript');
					googleSdkScript.setAttribute('src', '//imasdk.googleapis.com/js/sdkloader/ima3.js');
					googleSdkScript.setAttribute('async', true);
					googleSdkScript.setAttribute('defer', true);
					document.getElementsByTagName("head")[0].appendChild(googleSdkScript);
				}
	
				if (sdkScriptLoaded) {
					resolve();
				} else {
					googleSdkScript.addEventListener('load', function () {
						sdkScriptLoaded = true;
						resolve();
					});
	
					googleSdkScript.addEventListener('error', function (e) {
						reject(e);
					});
				}
			});
		};
	
		VideoAds.prototype.getVideoBrand = function getVideoBrand() {
			if (!this.video.videoData || !this.video.videoData.tags || this.video.videoData.tags.length === 0) {
				return false;
			} else {
				var filtered = this.video.videoData.tags.filter(function (val) {
					return val.toLowerCase().indexOf('brand:') !== -1;
				});
				if (filtered.length > 0) {
					try {
						// when we target the value in the ad server, we only want to target actual brand name, so we strip out "brand:" part of the string
						return filtered.pop().substring(6);
					} catch (e) {
						return false;
					}
				} else {
					return false;
				}
			}
		};
	
		VideoAds.prototype.setUpAds = function setUpAds() {
			this.adContainerEl = document.createElement('div');
			this.video.containerEl.appendChild(this.adContainerEl);
			this.adDisplayContainer = new google.ima.AdDisplayContainer(this.adContainerEl, this.video.videoEl);
	
			// Create ads loader.
			this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);
	
			// Sets up bindings for all Ad related handlers
			this.adsManagerLoadedHandler = this.adsManagerLoadedHandler.bind(this);
			this.adErrorHandler = this.adErrorHandler.bind(this);
			this.adEventHandler = this.adEventHandler.bind(this);
			this.contentPauseRequestHandler = this.contentPauseRequestHandler.bind(this);
			this.contentResumeRequestHandler = this.contentResumeRequestHandler.bind(this);
	
			// Listen and respond to ads loaded and error events.
			this.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.adsManagerLoadedHandler, false);
			this.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.adErrorHandler, false);
	
			this.requestAds();
	
			this.playAdEventHandler = this.playAdEventHandler.bind(this);
			if (this.video.opts.placeholder) {
				this.playAdEventHandler();
			} else {
				this.overlayEl && this.overlayEl.addEventListener('click', this.playAdEventHandler);
			}
		};
	
		VideoAds.prototype.requestAds = function requestAds() {
			// Request video ads.
			var adsRequest = new google.ima.AdsRequest();
	
			var targeting = 'pos=' + this.video.targeting.position + '&ttid=' + this.video.targeting.videoId;
			var brand = this.getVideoBrand();
			if (brand) {
				targeting += '&brand=' + brand;
			}
	
			var advertisingUrl = 'http://pubads.g.doubleclick.net/gampad/ads?env=vp&gdfp_req=1&impl=s&output=xml_vast2&iu=' + this.video.targeting.site + '&sz=' + this.video.targeting.sizes + '&unviewed_position_start=1&scp=' + encodeURIComponent(targeting);
	
			adsRequest.adTagUrl = advertisingUrl;
	
			// Specify the linear and nonlinear slot sizes. This helps the SDK
			// select the correct creative if multiple are returned.
			adsRequest.linearAdSlotWidth = 592;
			adsRequest.linearAdSlotHeight = 333;
	
			adsRequest.nonLinearAdSlotWidth = 592;
			adsRequest.nonLinearAdSlotHeight = 150;
	
			this.adsLoader.requestAds(adsRequest);
		};
	
		VideoAds.prototype.adsManagerLoadedHandler = function adsManagerLoadedHandler(adsManagerLoadedEvent) {
			// Get the ads manager.
			var adsRenderingSettings = new google.ima.AdsRenderingSettings();
			adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;
			this.adsManager = adsManagerLoadedEvent.getAdsManager(this.video.videoEl, adsRenderingSettings);
	
			// Add listeners to the required events.
			this.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.adErrorHandler);
			this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.contentPauseRequestHandler);
			this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.contentResumeRequestHandler);
			this.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this.adEventHandler);
	
			// Listen to any additional events, if necessary.
			this.adsManager.addEventListener(google.ima.AdEvent.Type.LOADED, this.adEventHandler);
			this.adsManager.addEventListener(google.ima.AdEvent.Type.STARTED, this.adEventHandler);
			this.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.adEventHandler);
	
			this.adsLoaded = true;
			this.startAds();
		};
	
		VideoAds.prototype.startAds = function startAds() {
	
			// For ads to play correctly both the video and the advert video need to be ready to
			// play; this function needs to be called after the two flags in adsManagerLoadedHandler()
			// and playAdEventHandler() have been set.
			// So if the video hasn't loaded yet, wait until it has.
			if (!this.videoLoaded) {
				return;
			}
	
			// If ads have failed to load, which resets the advertising support flag, play the video
			// instead; otherwise, wait until the ads have loaded.
			if (!this.video.opts.advertising) {
				this.video.videoEl.play();
			} else if (!this.adsLoaded) {
				return;
			}
	
			try {
				// Initialize the ads manager. Ad rules playlist will start at this time.
				this.adsManager.init(this.video.videoEl.clientWidth, this.video.videoEl.clientHeight, google.ima.ViewMode.NORMAL);
				// Call play to start showing the ad. Single video and overlay ads will
				// start at this time; the call will be ignored for ad rules.
				this.adsManager.start();
			} catch (adError) {
				// An error may be thrown if there was a problem with the VAST response.
				this.video.videoEl.play();
			}
		};
	
		VideoAds.prototype.playAdEventHandler = function playAdEventHandler() {
			var _this = this;
	
			// Sets the styling now so the ad occupies the space of the video
			this.adContainerEl.classList.add('o-video__ad');
	
			this.adDisplayContainer.initialize();
	
			var loadedmetadataHandler = function loadedmetadataHandler() {
				_this.videoLoaded = true;
				_this.startAds();
				_this.video.videoEl.removeEventListener('loadedmetadata', loadedmetadataHandler);
			};
			this.video.videoEl.addEventListener('loadedmetadata', loadedmetadataHandler);
	
			// Initialize the video. Must be done via a user action on mobile devices.
			this.video.videoEl.load();
	
			this.overlayEl && this.overlayEl.removeEventListener('click', this.playAdEventHandler);
			this.overlayEl && this.video.containerEl.removeChild(this.overlayEl);
			delete this.overlayEl;
		};
	
		VideoAds.prototype.adEventHandler = function adEventHandler(adEvent) {
			// Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)
			// don't have ad object associated.
			var ad = adEvent.getAd();
			switch (adEvent.type) {
				case google.ima.AdEvent.Type.LOADED:
					// This is the first event sent for an ad - it is possible to
					// determine whether the ad is a video ad or an overlay.
					if (!ad.isLinear()) {
						// Position AdDisplayContainer correctly for overlay.
						// Use ad.width and ad.height.
						this.video.videoEl.play();
					}
					break;
				case google.ima.AdEvent.Type.STARTED:
					// This event indicates the ad has started - the video player
					// can adjust the UI, for example display a pause button and
					// remaining time.
					if (ad.isLinear()) {
						// For a linear ad, a timer can be started to poll for
						// the remaining time.
						// TODO: We could use this to add a skip ad button
						// Currently not used, could be used in an interval
						// const remainingTime = this.adsManager.getRemainingTime();
					}
					break;
				case google.ima.AdEvent.Type.COMPLETE:
					if (ad.isLinear()) {
						// Would be used to clear the interval
					}
					break;
			}
		};
	
		VideoAds.prototype.adErrorHandler = function adErrorHandler() {
			this.adsManager && this.adsManager.destroy();
			this.video.containerEl.removeChild(this.adContainerEl);
			if (this.overlayEl) {
				this.overlayEl.removeEventListener('click', this.playAdEventHandler);
				this.video.containerEl.removeChild(this.overlayEl);
				delete this.overlayEl;
			}
			this.video.placeholderEl && this.video.placeholderEl.removeEventListener('click', this.playAdEventHandler);
			this.video.opts.advertising = false;
			this.startAds();
		};
	
		VideoAds.prototype.contentPauseRequestHandler = function contentPauseRequestHandler() {
			this.video.videoEl.pause();
		};
	
		VideoAds.prototype.contentResumeRequestHandler = function contentResumeRequestHandler() {
			this.video.containerEl.removeChild(this.adContainerEl);
			this.video.videoEl.play();
		};
	
		return VideoAds;
	}();
	
	exports.default = VideoAds;
	module.exports = exports['default'];

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function formatBrand(tags) {
		var regex = /brand:/i;
		var tag = tags && tags.find(function (tag) {
			return regex.test(tag);
		});
	
		return tag && tag.replace(regex, '');
	}
	
	function formatDuration(lengthInMs) {
		var lengthInSeconds = Math.ceil(lengthInMs / 1000);
		var minutes = '' + Math.floor(lengthInSeconds / 60);
		var seconds = '' + lengthInSeconds % 60;
	
		return minutes + ':' + (seconds.length === 1 ? '0' + seconds : seconds);
	}
	
	var VideoInfo = function () {
		function VideoInfo(video) {
			(0, _classCallCheck3.default)(this, VideoInfo);
	
			this.video = video;
	
			this.opts = this.video.opts.placeholderInfo.reduce(function (map, key) {
				map[key] = true;
				return map;
			}, {});
	
			this.infoEl = document.createElement('div');
			this.infoEl.className = 'o-video__info';
	
			if (this.opts.brand) {
				this.brandEl = document.createElement('span');
				this.brandEl.className = 'o-video__info-brand';
				this.infoEl.appendChild(this.brandEl);
			}
	
			if (this.opts.duration) {
				this.durationEl = document.createElement('span');
				this.durationEl.className = 'o-video__info-duration';
				this.infoEl.appendChild(this.durationEl);
			}
	
			if (this.opts.title) {
				this.titleEl = document.createElement('h4');
				this.titleEl.className = 'o-video__info-title';
				this.infoEl.appendChild(this.titleEl);
			}
	
			if (this.opts.description) {
				this.descriptionEl = document.createElement('p');
				this.descriptionEl.className = 'o-video__info-description';
				this.infoEl.appendChild(this.descriptionEl);
			}
	
			this.update();
	
			this.video.placeholderEl.appendChild(this.infoEl);
		}
	
		VideoInfo.prototype.update = function update() {
			if (this.brandEl) {
				this.brandEl.textContent = formatBrand(this.video.videoData.tags);
			}
	
			if (this.durationEl) {
				this.durationEl.textContent = formatDuration(this.video.videoData.length);
			}
	
			if (this.titleEl) {
				this.titleEl.textContent = this.video.videoData.name;
			}
	
			if (this.descriptionEl) {
				this.descriptionEl.textContent = this.video.videoData.shortDescription;
			}
		};
	
		VideoInfo.prototype.teardown = function teardown() {
			this.video.placeholderEl.removeChild(this.infoEl);
	
			delete this.infoEl;
			delete this.brandEl;
			delete this.titleEl;
			delete this.durationEl;
			delete this.descriptionEl;
		};
	
		return VideoInfo;
	}();
	
	exports.default = VideoInfo;
	module.exports = exports['default'];

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Playlist = function () {
		function Playlist(opts) {
			(0, _classCallCheck3.default)(this, Playlist);
	
			this.opts = opts;
	
			// find the currently playing video, always deal with strings
			var currentId = opts.player.videoData ? opts.player.videoData.id : opts.player.opts.id;
			this.currentIndex = currentId ? opts.queue.indexOf(currentId.toString()) : -1;
	
			this.cache = {};
	
			if (this.opts.autoplay) {
				this.opts.player.containerEl.addEventListener('ended', this.next.bind(this), true);
	
				if (this.currentIndex === -1) {
					this.next();
				}
			}
		}
	
		Playlist.prototype.next = function next() {
			this.goto(this.currentIndex + 1);
		};
	
		Playlist.prototype.prev = function prev() {
			this.goto(this.currentIndex - 1);
		};
	
		Playlist.prototype.goto = function goto(index) {
			var _this = this;
	
			if (index < 0) {
				this.currentIndex = this.opts.queue.length - 1;
			} else if (index >= this.opts.queue.length) {
				this.currentIndex = 0;
			} else {
				this.currentIndex = index;
			}
	
			// store the current data for quick access later
			var currentVideoId = this.opts.player.videoData && this.opts.player.videoData.id;
	
			if (currentVideoId && !this.cache[currentVideoId]) {
				this.cache[currentVideoId] = this.opts.player.videoData;
			}
	
			var nextVideoId = this.opts.queue[this.currentIndex];
	
			var nextVideoOpts = {
				id: nextVideoId,
				data: this.cache[nextVideoId]
			};
	
			return this.opts.player.update(nextVideoOpts).then(function () {
				_this.opts.player.videoEl && _this.opts.player.videoEl.play();
			});
		};
	
		return Playlist;
	}();
	
	exports.default = Playlist;
	module.exports = exports['default'];

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(389);


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var ReactChildren = __webpack_require__(392);
	var ReactComponent = __webpack_require__(404);
	var ReactPureComponent = __webpack_require__(407);
	var ReactClass = __webpack_require__(408);
	var ReactDOMFactories = __webpack_require__(413);
	var ReactElement = __webpack_require__(396);
	var ReactPropTypes = __webpack_require__(418);
	var ReactVersion = __webpack_require__(419);
	
	var onlyChild = __webpack_require__(420);
	var warning = __webpack_require__(398);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(414);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 390 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 391 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(393);
	var ReactElement = __webpack_require__(396);
	
	var emptyFunction = __webpack_require__(399);
	var traverseAllChildren = __webpack_require__(401);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 394 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var ReactCurrentOwner = __webpack_require__(397);
	
	var warning = __webpack_require__(398);
	var canDefineProperty = __webpack_require__(400);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 397 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(399);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 399 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactElement = __webpack_require__(396);
	
	var getIteratorFn = __webpack_require__(402);
	var invariant = __webpack_require__(395);
	var KeyEscapeUtils = __webpack_require__(403);
	var warning = __webpack_require__(398);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 402 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 403 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactNoopUpdateQueue = __webpack_require__(405);
	
	var canDefineProperty = __webpack_require__(400);
	var emptyObject = __webpack_require__(406);
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(398);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var ReactComponent = __webpack_require__(404);
	var ReactNoopUpdateQueue = __webpack_require__(405);
	
	var emptyObject = __webpack_require__(406);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var ReactComponent = __webpack_require__(404);
	var ReactElement = __webpack_require__(396);
	var ReactPropTypeLocations = __webpack_require__(409);
	var ReactPropTypeLocationNames = __webpack_require__(411);
	var ReactNoopUpdateQueue = __webpack_require__(405);
	
	var emptyObject = __webpack_require__(406);
	var invariant = __webpack_require__(395);
	var keyMirror = __webpack_require__(410);
	var keyOf = __webpack_require__(412);
	var warning = __webpack_require__(398);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(410);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 412 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(396);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(414);
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactComponentTreeHook = __webpack_require__(415);
	var ReactElement = __webpack_require__(396);
	var ReactPropTypeLocations = __webpack_require__(409);
	
	var checkReactTypeSpec = __webpack_require__(416);
	
	var canDefineProperty = __webpack_require__(400);
	var getIteratorFn = __webpack_require__(402);
	var warning = __webpack_require__(398);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	    }
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactCurrentOwner = __webpack_require__(397);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var itemMap;
	var rootIDSet;
	
	var itemByKey;
	var rootByKey;
	
	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}
	
	var unmountedIDs = [];
	
	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}
	
	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}
	
	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}
	
	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };
	
	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}
	
	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}
	
	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}
	
	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}
	
	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}
	
	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRegisteredIDs: getRegisteredIDs,
	
	  getRootIDs: getRootIDs
	};
	
	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactPropTypeLocationNames = __webpack_require__(411);
	var ReactPropTypesSecret = __webpack_require__(417);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(415);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(415);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 417 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(396);
	var ReactPropTypeLocationNames = __webpack_require__(411);
	var ReactPropTypesSecret = __webpack_require__(417);
	
	var emptyFunction = __webpack_require__(399);
	var getIteratorFn = __webpack_require__(402);
	var warning = __webpack_require__(398);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;
	
	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 419 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '15.3.1';

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactElement = __webpack_require__(396);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(422);


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactDefaultInjection = __webpack_require__(426);
	var ReactMount = __webpack_require__(549);
	var ReactReconciler = __webpack_require__(446);
	var ReactUpdates = __webpack_require__(443);
	var ReactVersion = __webpack_require__(419);
	
	var findDOMNode = __webpack_require__(554);
	var getHostComponentFromComposite = __webpack_require__(555);
	var renderSubtreeIntoContainer = __webpack_require__(556);
	var warning = __webpack_require__(398);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(436);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(449);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(557);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(558);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}
	
	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var DOMProperty = __webpack_require__(424);
	var ReactDOMComponentFlags = __webpack_require__(425);
	
	var invariant = __webpack_require__(395);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 425 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(427);
	var ChangeEventPlugin = __webpack_require__(442);
	var DefaultEventPluginOrder = __webpack_require__(460);
	var EnterLeaveEventPlugin = __webpack_require__(461);
	var HTMLDOMPropertyConfig = __webpack_require__(466);
	var ReactComponentBrowserEnvironment = __webpack_require__(467);
	var ReactDOMComponent = __webpack_require__(481);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactDOMEmptyComponent = __webpack_require__(520);
	var ReactDOMTreeTraversal = __webpack_require__(521);
	var ReactDOMTextComponent = __webpack_require__(522);
	var ReactDefaultBatchingStrategy = __webpack_require__(523);
	var ReactEventListener = __webpack_require__(524);
	var ReactInjection = __webpack_require__(527);
	var ReactReconcileTransaction = __webpack_require__(528);
	var SVGDOMPropertyConfig = __webpack_require__(536);
	var SelectEventPlugin = __webpack_require__(537);
	var SimpleEventPlugin = __webpack_require__(538);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(428);
	var EventPropagators = __webpack_require__(429);
	var ExecutionEnvironment = __webpack_require__(436);
	var FallbackCompositionState = __webpack_require__(437);
	var SyntheticCompositionEvent = __webpack_require__(439);
	var SyntheticInputEvent = __webpack_require__(441);
	
	var keyOf = __webpack_require__(412);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(410);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(428);
	var EventPluginHub = __webpack_require__(430);
	var EventPluginUtils = __webpack_require__(432);
	
	var accumulateInto = __webpack_require__(434);
	var forEachAccumulated = __webpack_require__(435);
	var warning = __webpack_require__(398);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var EventPluginRegistry = __webpack_require__(431);
	var EventPluginUtils = __webpack_require__(432);
	var ReactErrorUtils = __webpack_require__(433);
	
	var accumulateInto = __webpack_require__(434);
	var forEachAccumulated = __webpack_require__(435);
	var invariant = __webpack_require__(395);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var EventConstants = __webpack_require__(428);
	var ReactErrorUtils = __webpack_require__(433);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 435 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 436 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var PooledClass = __webpack_require__(393);
	
	var getTextContentAccessor = __webpack_require__(438);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var PooledClass = __webpack_require__(393);
	
	var emptyFunction = __webpack_require__(399);
	var warning = __webpack_require__(398);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(428);
	var EventPluginHub = __webpack_require__(430);
	var EventPropagators = __webpack_require__(429);
	var ExecutionEnvironment = __webpack_require__(436);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactUpdates = __webpack_require__(443);
	var SyntheticEvent = __webpack_require__(440);
	
	var getEventTarget = __webpack_require__(457);
	var isEventSupported = __webpack_require__(458);
	var isTextInputElement = __webpack_require__(459);
	var keyOf = __webpack_require__(412);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var CallbackQueue = __webpack_require__(444);
	var PooledClass = __webpack_require__(393);
	var ReactFeatureFlags = __webpack_require__(445);
	var ReactReconciler = __webpack_require__(446);
	var Transaction = __webpack_require__(456);
	
	var invariant = __webpack_require__(395);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var PooledClass = __webpack_require__(393);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 445 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(447);
	var ReactInstrumentation = __webpack_require__(449);
	
	var warning = __webpack_require__(398);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(448);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(450);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(451);
	var ReactHostOperationHistoryHook = __webpack_require__(452);
	var ReactComponentTreeHook = __webpack_require__(415);
	var ReactChildrenMutationWarningHook = __webpack_require__(453);
	var ExecutionEnvironment = __webpack_require__(436);
	
	var performanceNow = __webpack_require__(454);
	var warning = __webpack_require__(398);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();
	
	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onError: function (debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	ReactDebugTool.addHook(ReactChildrenMutationWarningHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningHook
	 */
	
	'use strict';
	
	var warning = __webpack_require__(398);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 452 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryHook
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningHook
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(415);
	
	var warning = __webpack_require__(398);
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  if (!Array.isArray(element._shadowChildren) || isMutated) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Component\'s children should not be mutated.%s', ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	var ReactChildrenMutationWarningHook = {
	  onMountComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  },
	  onUpdateComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  }
	};
	
	module.exports = ReactChildrenMutationWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(455);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 457 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 459 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(412);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(428);
	var EventPropagators = __webpack_require__(429);
	var ReactDOMComponentTree = __webpack_require__(423);
	var SyntheticMouseEvent = __webpack_require__(462);
	
	var keyOf = __webpack_require__(412);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(463);
	var ViewportMetrics = __webpack_require__(464);
	
	var getEventModifierState = __webpack_require__(465);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	var getEventTarget = __webpack_require__(457);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 464 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 465 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(424);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(468);
	var ReactDOMIDOperations = __webpack_require__(480);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(469);
	var Danger = __webpack_require__(475);
	var ReactMultiChildUpdateTypes = __webpack_require__(479);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactInstrumentation = __webpack_require__(449);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(472);
	var setInnerHTML = __webpack_require__(471);
	var setTextContent = __webpack_require__(473);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(470);
	var setInnerHTML = __webpack_require__(471);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(472);
	var setTextContent = __webpack_require__(473);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 470 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	var DOMNamespaces = __webpack_require__(470);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(472);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 472 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	var escapeTextContentForBrowser = __webpack_require__(474);
	var setInnerHTML = __webpack_require__(471);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 474 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var DOMLazyTree = __webpack_require__(469);
	var ExecutionEnvironment = __webpack_require__(436);
	
	var createNodesFromMarkup = __webpack_require__(476);
	var emptyFunction = __webpack_require__(399);
	var invariant = __webpack_require__(395);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var createArrayFromMixed = __webpack_require__(477);
	var getMarkupWrap = __webpack_require__(478);
	var invariant = __webpack_require__(395);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(410);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(468);
	var ReactDOMComponentTree = __webpack_require__(423);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var AutoFocusUtils = __webpack_require__(482);
	var CSSPropertyOperations = __webpack_require__(484);
	var DOMLazyTree = __webpack_require__(469);
	var DOMNamespaces = __webpack_require__(470);
	var DOMProperty = __webpack_require__(424);
	var DOMPropertyOperations = __webpack_require__(492);
	var EventConstants = __webpack_require__(428);
	var EventPluginHub = __webpack_require__(430);
	var EventPluginRegistry = __webpack_require__(431);
	var ReactBrowserEventEmitter = __webpack_require__(494);
	var ReactDOMButton = __webpack_require__(497);
	var ReactDOMComponentFlags = __webpack_require__(425);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactDOMInput = __webpack_require__(499);
	var ReactDOMOption = __webpack_require__(501);
	var ReactDOMSelect = __webpack_require__(502);
	var ReactDOMTextarea = __webpack_require__(503);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactMultiChild = __webpack_require__(504);
	var ReactServerRenderingTransaction = __webpack_require__(516);
	
	var emptyFunction = __webpack_require__(399);
	var escapeTextContentForBrowser = __webpack_require__(474);
	var invariant = __webpack_require__(395);
	var isEventSupported = __webpack_require__(458);
	var keyOf = __webpack_require__(412);
	var shallowEqual = __webpack_require__(511);
	var validateDOMNesting = __webpack_require__(519);
	var warning = __webpack_require__(398);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(423);
	
	var focusNode = __webpack_require__(483);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 483 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(485);
	var ExecutionEnvironment = __webpack_require__(436);
	var ReactInstrumentation = __webpack_require__(449);
	
	var camelizeStyleName = __webpack_require__(486);
	var dangerousStyleValue = __webpack_require__(488);
	var hyphenateStyleName = __webpack_require__(489);
	var memoizeStringOnly = __webpack_require__(491);
	var warning = __webpack_require__(398);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 485 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(487);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 487 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(485);
	var warning = __webpack_require__(398);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(490);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 490 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 491 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(424);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactInstrumentation = __webpack_require__(449);
	
	var quoteAttributeValueForBrowser = __webpack_require__(493);
	var warning = __webpack_require__(398);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(474);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var EventConstants = __webpack_require__(428);
	var EventPluginRegistry = __webpack_require__(431);
	var ReactEventEmitterMixin = __webpack_require__(495);
	var ViewportMetrics = __webpack_require__(464);
	
	var getVendorPrefixedEventName = __webpack_require__(496);
	var isEventSupported = __webpack_require__(458);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(430);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(498);
	
	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 498 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var DisabledInputUtils = __webpack_require__(498);
	var DOMPropertyOperations = __webpack_require__(492);
	var LinkedValueUtils = __webpack_require__(500);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactUpdates = __webpack_require__(443);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactPropTypes = __webpack_require__(418);
	var ReactPropTypeLocations = __webpack_require__(409);
	var ReactPropTypesSecret = __webpack_require__(417);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var ReactChildren = __webpack_require__(392);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactDOMSelect = __webpack_require__(502);
	
	var warning = __webpack_require__(398);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var DisabledInputUtils = __webpack_require__(498);
	var LinkedValueUtils = __webpack_require__(500);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactUpdates = __webpack_require__(443);
	
	var warning = __webpack_require__(398);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var DisabledInputUtils = __webpack_require__(498);
	var LinkedValueUtils = __webpack_require__(500);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactUpdates = __webpack_require__(443);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactComponentEnvironment = __webpack_require__(505);
	var ReactInstanceMap = __webpack_require__(506);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactMultiChildUpdateTypes = __webpack_require__(479);
	
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactReconciler = __webpack_require__(446);
	var ReactChildReconciler = __webpack_require__(507);
	
	var emptyFunction = __webpack_require__(399);
	var flattenChildren = __webpack_require__(515);
	var invariant = __webpack_require__(395);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 506 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(446);
	
	var instantiateReactComponent = __webpack_require__(508);
	var KeyEscapeUtils = __webpack_require__(403);
	var shouldUpdateReactComponent = __webpack_require__(512);
	var traverseAllChildren = __webpack_require__(401);
	var warning = __webpack_require__(398);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(415);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(415);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var ReactCompositeComponent = __webpack_require__(509);
	var ReactEmptyComponent = __webpack_require__(513);
	var ReactHostComponent = __webpack_require__(514);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var ReactComponentEnvironment = __webpack_require__(505);
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactElement = __webpack_require__(396);
	var ReactErrorUtils = __webpack_require__(433);
	var ReactInstanceMap = __webpack_require__(506);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactNodeTypes = __webpack_require__(510);
	var ReactPropTypeLocations = __webpack_require__(409);
	var ReactReconciler = __webpack_require__(446);
	
	var checkReactTypeSpec = __webpack_require__(416);
	var emptyObject = __webpack_require__(406);
	var invariant = __webpack_require__(395);
	var shallowEqual = __webpack_require__(511);
	var shouldUpdateReactComponent = __webpack_require__(512);
	var warning = __webpack_require__(398);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var selfDebugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      selfDebugID = this._debugID;
	    }
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), selfDebugID);
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = this._debugID;
	      }
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), selfDebugID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactElement = __webpack_require__(396);
	
	var invariant = __webpack_require__(395);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 511 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 512 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 513 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var invariant = __webpack_require__(395);
	
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(403);
	var traverseAllChildren = __webpack_require__(401);
	var warning = __webpack_require__(398);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(415);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(415);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var PooledClass = __webpack_require__(393);
	var Transaction = __webpack_require__(456);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactServerUpdateQueue = __webpack_require__(517);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(518);
	var Transaction = __webpack_require__(456);
	var warning = __webpack_require__(398);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */
	
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactInstanceMap = __webpack_require__(506);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactUpdates = __webpack_require__(443);
	
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var emptyFunction = __webpack_require__(399);
	var warning = __webpack_require__(398);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var DOMLazyTree = __webpack_require__(469);
	var ReactDOMComponentTree = __webpack_require__(423);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var invariant = __webpack_require__(395);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394),
	    _assign = __webpack_require__(391);
	
	var DOMChildrenOperations = __webpack_require__(468);
	var DOMLazyTree = __webpack_require__(469);
	var ReactDOMComponentTree = __webpack_require__(423);
	
	var escapeTextContentForBrowser = __webpack_require__(474);
	var invariant = __webpack_require__(395);
	var validateDOMNesting = __webpack_require__(519);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var ReactUpdates = __webpack_require__(443);
	var Transaction = __webpack_require__(456);
	
	var emptyFunction = __webpack_require__(399);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var EventListener = __webpack_require__(525);
	var ExecutionEnvironment = __webpack_require__(436);
	var PooledClass = __webpack_require__(393);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactUpdates = __webpack_require__(443);
	
	var getEventTarget = __webpack_require__(457);
	var getUnboundedScrollPosition = __webpack_require__(526);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(399);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 526 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(424);
	var EventPluginHub = __webpack_require__(430);
	var EventPluginUtils = __webpack_require__(432);
	var ReactComponentEnvironment = __webpack_require__(505);
	var ReactClass = __webpack_require__(408);
	var ReactEmptyComponent = __webpack_require__(513);
	var ReactBrowserEventEmitter = __webpack_require__(494);
	var ReactHostComponent = __webpack_require__(514);
	var ReactUpdates = __webpack_require__(443);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(391);
	
	var CallbackQueue = __webpack_require__(444);
	var PooledClass = __webpack_require__(393);
	var ReactBrowserEventEmitter = __webpack_require__(494);
	var ReactInputSelection = __webpack_require__(529);
	var ReactInstrumentation = __webpack_require__(449);
	var Transaction = __webpack_require__(456);
	var ReactUpdateQueue = __webpack_require__(518);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(530);
	
	var containsNode = __webpack_require__(532);
	var focusNode = __webpack_require__(483);
	var getActiveElement = __webpack_require__(535);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(436);
	
	var getNodeForCharacterOffset = __webpack_require__(531);
	var getTextContentAccessor = __webpack_require__(438);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 531 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(533);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(534);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 534 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 535 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 536 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(428);
	var EventPropagators = __webpack_require__(429);
	var ExecutionEnvironment = __webpack_require__(436);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactInputSelection = __webpack_require__(529);
	var SyntheticEvent = __webpack_require__(440);
	
	var getActiveElement = __webpack_require__(535);
	var isTextInputElement = __webpack_require__(459);
	var keyOf = __webpack_require__(412);
	var shallowEqual = __webpack_require__(511);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var EventConstants = __webpack_require__(428);
	var EventListener = __webpack_require__(525);
	var EventPropagators = __webpack_require__(429);
	var ReactDOMComponentTree = __webpack_require__(423);
	var SyntheticAnimationEvent = __webpack_require__(539);
	var SyntheticClipboardEvent = __webpack_require__(540);
	var SyntheticEvent = __webpack_require__(440);
	var SyntheticFocusEvent = __webpack_require__(541);
	var SyntheticKeyboardEvent = __webpack_require__(542);
	var SyntheticMouseEvent = __webpack_require__(462);
	var SyntheticDragEvent = __webpack_require__(545);
	var SyntheticTouchEvent = __webpack_require__(546);
	var SyntheticTransitionEvent = __webpack_require__(547);
	var SyntheticUIEvent = __webpack_require__(463);
	var SyntheticWheelEvent = __webpack_require__(548);
	
	var emptyFunction = __webpack_require__(399);
	var getEventCharCode = __webpack_require__(543);
	var invariant = __webpack_require__(395);
	var keyOf = __webpack_require__(412);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(463);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(463);
	
	var getEventCharCode = __webpack_require__(543);
	var getEventKey = __webpack_require__(544);
	var getEventModifierState = __webpack_require__(465);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 543 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(543);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(462);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(463);
	
	var getEventModifierState = __webpack_require__(465);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(440);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(462);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var DOMLazyTree = __webpack_require__(469);
	var DOMProperty = __webpack_require__(424);
	var ReactBrowserEventEmitter = __webpack_require__(494);
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactDOMContainerInfo = __webpack_require__(550);
	var ReactDOMFeatureFlags = __webpack_require__(551);
	var ReactElement = __webpack_require__(396);
	var ReactFeatureFlags = __webpack_require__(445);
	var ReactInstanceMap = __webpack_require__(506);
	var ReactInstrumentation = __webpack_require__(449);
	var ReactMarkupChecksum = __webpack_require__(552);
	var ReactReconciler = __webpack_require__(446);
	var ReactUpdateQueue = __webpack_require__(518);
	var ReactUpdates = __webpack_require__(443);
	
	var emptyObject = __webpack_require__(406);
	var instantiateReactComponent = __webpack_require__(508);
	var invariant = __webpack_require__(395);
	var setInnerHTML = __webpack_require__(471);
	var shouldUpdateReactComponent = __webpack_require__(512);
	var warning = __webpack_require__(398);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(519);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 551 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(553);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 553 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(394);
	
	var ReactCurrentOwner = __webpack_require__(397);
	var ReactDOMComponentTree = __webpack_require__(423);
	var ReactInstanceMap = __webpack_require__(506);
	
	var getHostComponentFromComposite = __webpack_require__(555);
	var invariant = __webpack_require__(395);
	var warning = __webpack_require__(398);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(510);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(549);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyHook
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(424);
	var EventPluginRegistry = __webpack_require__(431);
	var ReactComponentTreeHook = __webpack_require__(415);
	
	var warning = __webpack_require__(398);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropHook
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(415);
	
	var warning = __webpack_require__(398);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _grid = __webpack_require__(376);
	
	var _grid2 = _interopRequireDefault(_grid);
	
	var _tracking = __webpack_require__(560);
	
	var _tracking2 = _interopRequireDefault(_tracking);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var commentsIcon = __webpack_require__(561);
	var commentsSkeleton = __webpack_require__(567);
	
	var loadSources = function loadSources(sources, resolve) {
		sources.forEach(function (source) {
			var fileType = source.split('.').pop();
			var element = void 0;
			if (fileType === 'js') {
				element = document.createElement('script');
				element.src = source;
			} else {
				element = document.createElement('link');
				element.setAttribute('rel', 'stylesheet');
				element.href = source;
			}
			document.head.appendChild(element);
		});
	
		resolve();
	};
	
	var intersectionCallback = function intersectionCallback(observer, changes, sources, resolve) {
		changes.forEach(function (change) {
			loadSources(sources, resolve);
			observer.unobserve(change.target);
		});
	};
	
	function loadComments(commentsEl, opts) {
	
		return new _promise2.default(function (resolve, reject) {
			var sources = [commentsEl.getAttribute('data-comments-js'), commentsEl.getAttribute('data-comments-css')];
	
			if (!opts.lazy) {
				window.FT.commentsRumLoadStart = Date.now();
				loadSources(sources, resolve);
			}
	
			var intersectionTarget = document.querySelector(opts.targetSelector);
	
			if (intersectionTarget) {
	
				if (window.IntersectionObserver) {
					var observer = new IntersectionObserver(function (changes) {
						intersectionCallback(this, changes, sources, resolve);
						window.FT.commentsRumLoadStart = Date.now();
					}, { rootMargin: opts.threshold + 'px' });
					observer.observe(intersectionTarget);
				} else {
					window.FT.commentsRumLoadStart = Date.now();
					loadSources(sources, resolve);
				}
			} else {
				reject('no element found to attach intersection observer to');
			}
		});
	}
	
	module.exports = {
		init: function init() {
	
			window.FT = window.FT || {};
	
			var commentsEl = document.getElementById('comments');
	
			commentsIcon.init();
			commentsSkeleton.init();
	
			var loadOpts = { lazy: false };
			// before turning on lazy loading check first that lazy loading is enabled
			// and the user has not followed a link to the comments section
			if (commentsEl.getAttribute('data-comments-lazy-load') === 'true' && !/#lf-content|#comments|#lf-comments/.test(window.location.hash)) {
				var initialEngagement = _tracking2.default.getInitialEngagement();
				if (['default', 'S'].indexOf(_grid2.default.getCurrentLayout()) > -1) {
					if (initialEngagement !== 'active') {
						loadOpts = {
							targetSelector: '.n-content-copyright',
							threshold: initialEngagement === 'passive' ? 600 : 0,
							lazy: true
						};
					}
				} else {
					if (initialEngagement !== 'active') {
						loadOpts = {
							targetSelector: '#comments',
							threshold: 600,
							lazy: true
						};
					}
				}
			}
	
			loadComments(commentsEl, loadOpts);
	
			_tracking2.default.init();
		}
	};

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _utils = __webpack_require__(203);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var superstore = __webpack_require__(217);
	
	var engagementKey = 'next.comments.engagement';
	var initialCommentEngagement = void 0;
	
	function isWithinNDays(timestamp, n) {
		return Date.now() - timestamp < 1000 * 60 * 60 * 24 * n;
	}
	
	function getCommentEngagement() {
		var value = superstore.local.get(engagementKey);
		if (!value) {
			return 'none';
		}
	
		// if has actively sought aout/interacted with comments in the last 30 days
		if (value.active && isWithinNDays(value.active, 30)) {
			return 'active';
		}
	
		if (value.passive) {
			// if scrolled as far as comments once in the last 5 days or 4 times in the last month
			if (isWithinNDays(value.passive[0], 5) || value.passive.filter(function (timestamp) {
				return isWithinNDays(timestamp, 30);
			}).length > 3) {
				return 'passive';
			}
		}
	
		return 'previous';
	}
	
	function logCommentEngagement(type) {
		var value = superstore.local.get(engagementKey);
		value = value || { active: null, passive: [] };
		if (type === 'active') {
			value.active = Date.now();
		} else {
			value.passive.unshift(Date.now());
			if (value.passive.length > 10) {
				value.passive = value.passive.slice(0, 10);
			}
		}
		superstore.local.set(engagementKey, value);
	}
	
	function getInitialEngagement() {
		if (!initialCommentEngagement) {
			initialCommentEngagement = getCommentEngagement();
		}
		return initialCommentEngagement;
	}
	
	module.exports = {
		init: function init() {
			getInitialEngagement();
	
			var rumIndicatorEl = document.querySelector('.comments__rum-indicator');
			var rumObserver = new IntersectionObserver(function () {
				window.FT.commentsRumInView = Date.now();
	
				(0, _utils.broadcast)('oTracking.event', {
					action: 'view',
					category: 'comments',
					context: {
						product: 'next',
						source: 'next-article',
						uiIsDelayed: !window.FT.commentsRumLoaded,
						userEngagement: initialCommentEngagement
					}
				});
				logCommentEngagement('passive');
				rumObserver.unobserve(rumIndicatorEl);
			}, { rootMargin: '0px' });
			rumObserver.observe(rumIndicatorEl);
	
			document.body.addEventListener('oComments.widget.renderComplete', function () {
				window.FT.commentsRumLoaded = Date.now();
				// TODO - record number of comments fetched
				(0, _utils.broadcast)('oTracking.event', {
					category: 'comments',
					action: 'ready',
					context: {
						timeToLoad: window.FT.commentsRumLoaded - window.FT.commentsRumLoadStart,
						userIsViewing: !!window.FT.commentsRumInView,
						timeUserWaitedToView: window.FT.commentsRumInView ? window.FT.commentsRumLoaded - window.FT.commentsRumInView : 0,
						userEngagement: initialCommentEngagement
					}
				});
			});
	
			(0, _from2.default)(document.querySelectorAll('[href="#comments"]')).forEach(function (el) {
				el.addEventListener('click', function () {
					return logCommentEngagement('active');
				});
			});
	
			document.body.addEventListener('oComments.tracking.postComment', function () {
				return logCommentEngagement('active');
			});
	
			document.body.addEventListener('oComments.tracking.likeComment', function () {
				return logCommentEngagement('active');
			});
	
			document.body.addEventListener('oComments.tracking.shareComment', function () {
				return logCommentEngagement('active');
			});
		},
		getInitialEngagement: getInitialEngagement
	
	};

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var createIcon = {
		init: function init() {
			var CommentCount = __webpack_require__(562);
			var uuid = document.querySelector('article[data-content-id]').getAttribute('data-content-id');
			var articleShareList = document.querySelectorAll('.article__share');
			var articleShareArray = Array.prototype.slice.call(articleShareList);
	
			CommentCount.setConfig({
				'template': '{count}'
			});
			articleShareArray.forEach(function (articleShare) {
				var commentLink = document.createElement('a');
				new CommentCount(commentLink, {
					articleId: uuid
				});
				commentLink.setAttribute('href', '#comments');
				commentLink.setAttribute('data-trackable', 'view-comments');
				commentLink.className = 'article__share__comments';
				articleShare.appendChild(commentLink);
			});
		}
	};
	
	module.exports = createIcon;

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(563);

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var config = __webpack_require__(564);
	var oCommentApi = __webpack_require__(97);
	var defaultConfig = __webpack_require__(565);
	var oCommentUtilities = __webpack_require__(6);
	var Widget = __webpack_require__(566);
	
	/**
	 * Default config (prod) is set.
	 */
	config.set(defaultConfig);
	
	/**
	 * Enable data caching.
	 */
	oCommentApi.setConfig('cache', true);
	
	/**
	 * Widget.js exposed as main constructor
	 * @type {object}
	 */
	module.exports = Widget;
	
	/**
	 * Adds or overrides configuration options.
	 *
	 * @param  {string|object} keyOrObject Key or actually an object with key-value pairs.
	 * @param  {anything} value Optional. Should be specified only if keyOrObject is actually a key (string).
	 * @return {undefined}
	 */
	module.exports.setConfig = function () {
		config.set.apply(this, arguments);
	};
	
	module.exports.init = function (el) {
		return oCommentUtilities.initDomConstruct({
			context: el,
			classNamespace: 'o-comment-count',
			eventNamespace: 'oCommentCount',
			module: module.exports
		});
	};
	module.exports.utilities = oCommentUtilities;
	module.exports.dataService = oCommentApi;
	
	/**
	 * Enables logging.
	 * @return {undefined}
	 */
	module.exports.enableLogging = function () {
		oCommentUtilities.logger.enable.apply(this, arguments);
	};
	
	/**
	 * Disables logging.
	 * @return {undefined}
	 */
	module.exports.disableLogging = function () {
		oCommentUtilities.logger.disable.apply(this, arguments);
	};
	
	/**
	 * Sets logging level.
	 * @return {undefined}
	 */
	module.exports.setLoggingLevel = function () {
		oCommentUtilities.logger.setLevel.apply(this, arguments);
	};
	
	document.addEventListener('o.DOMContentLoaded', function () {
		try {
			var configInDomEl = document.querySelector('script[type="application/json"][data-o-comment-count-config]');
			if (configInDomEl) {
				var configInDom = JSON.parse(configInDomEl.innerHTML);
	
				module.exports.setConfig(configInDom);
			}
		} catch (e) {
			oCommentUtilities.logger.log('Invalid config in the DOM.', e);
		}
	
		oCommentUtilities.initDomConstruct({
			classNamespace: 'o-comment-count',
			eventNamespace: 'oCommentCount',
			module: module.exports,
			auto: true
		});
	});

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var EnvConfig = __webpack_require__(6).EnvConfig;
	
	module.exports = new EnvConfig();

/***/ },
/* 565 */
/***/ function(module, exports) {

	"use strict";
	
	module.exports = {
		template: "{count} Comment{plural}"
	};

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var envConfig = __webpack_require__(564);
	var oCommentUtilities = __webpack_require__(6);
	var oCommentApi = __webpack_require__(97);
	
	var Widget = function Widget(rootEl, config) {
		var widgetEl = void 0;
	
		try {
			if (!rootEl) {
				rootEl = document.body;
			} else if (!(rootEl instanceof HTMLElement)) {
				// could throw exception in IE
				rootEl = document.querySelector(rootEl);
			}
		} catch (e) {
			var el = void 0;
			if (typeof rootEl === 'string') {
				el = document.querySelector(rootEl);
			}
	
			if (el) {
				rootEl = el;
			} else {
				rootEl = document.body;
			}
		}
	
		rootEl.setAttribute('data-o-comment-count-js', '');
	
		widgetEl = rootEl;
	
		/**
	  * Validation of the initial configuration object.
	  */
		if (!config) {
			throw new Error("No configuration is provided.");
		}
	
		if (!config.articleId) {
			if (!config.articleid) {
				throw new Error("Article ID is missing.");
			} else {
				config.articleId = config.articleid;
			}
		}
	
		var template = envConfig.get('template');
		if (config.template) {
			template = config.template;
		}
	
		function render() {
			getCommentCount(function (err, count) {
				if (err) {
					return;
				}
	
				if (count === 0 && config.hideIfZero === true) {
					widgetEl.style.visibility = 'hidden';
				} else {
					widgetEl.style.visibility = 'visible';
					widgetEl.innerHTML = template.replace('{count}', count).replace('{plural}', count > 1 ? 's' : '');
				}
			});
		}
	
		function getCommentCount(callback) {
			oCommentApi.api.getCommentCount(config.articleId, function (err, count) {
				if (err) {
					callback(err);
	
					oCommentUtilities.logger.error('Error fetching the comment count', err);
					return;
				}
	
				callback(null, count);
			});
		}
	
		var refreshInitialized = false;
		function init() {
			render();
	
			if ((config.autoRefresh === true || config.autoRefresh === 'true') && !refreshInitialized) {
				refreshInitialized = true;
	
				setInterval(function () {
					render();
				}, 60 * 1000); // update every minute
			}
		}
	
		if (config.autoInit !== false) {
			init();
		}
	
		return {
			init: init,
			getCommentCount: getCommentCount
		};
	};
	
	module.exports = Widget;

/***/ },
/* 567 */
/***/ function(module, exports) {

	'use strict';
	
	var createSkeleton = {
		init: function init() {
			var skeleton = document.createElement('div');
			var skeletonInner = document.createElement('div');
			var skeletonAvatar = document.createElement('div');
			var skeletonPod = document.createElement('div');
			var commentsEl = document.querySelector('#comments');
	
			skeleton.className = 'skeleton';
			skeleton.setAttribute('data-skeleton', 'comments');
			skeletonInner.className = 'skeleton__inner';
			skeletonAvatar.className = 'skeleton__avatar';
			skeletonPod.className = 'skeleton__text';
	
			skeletonInner.appendChild(skeletonAvatar);
			skeletonInner.appendChild(skeletonPod);
			skeleton.innerHTML += skeletonInner.outerHTML;
			skeleton.innerHTML += skeletonInner.outerHTML;
			skeleton.innerHTML += skeletonInner.outerHTML;
			commentsEl.parentNode.insertBefore(skeleton, commentsEl.nextSibling);
		}
	};
	
	module.exports = createSkeleton;

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(569);

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _emailOnlySignup = __webpack_require__(570);
	
	var emailOnlySignup = _interopRequireWildcard(_emailOnlySignup);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = {
		init: function init() {
			var el = arguments.length <= 0 || arguments[0] === undefined ? document.body : arguments[0];
			var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
			var utmTermParam = /[?&]utm_term(=([^&#]*)|&|#|$)/i.exec(window.location.href);
			var positionMvt = document.querySelector('[data-o-email-only-signup-position-mvt]');
	
			var userIsFromLightSignupEmail = void 0;
	
			if (utmTermParam) {
				userIsFromLightSignupEmail = utmTermParam[2] === 'lightsignup';
			}
	
			if (!(el instanceof HTMLElement)) {
				el = document.querySelector(el);
			}
	
			if (!el.matches('[data-o-component~="o-email-only-signup"]')) {
				el = el.querySelector('[data-o-component~="o-email-only-signup"]');
			}
	
			if (!userIsFromLightSignupEmail && el) {
	
				// Article Position MVT: move the component and ensure visible
				if (positionMvt) {
					positionMvt.appendChild(el);
				}
				el.classList.remove('o-email-only-signup__visually-hidden');
				el.setAttribute('aria-hidden', false);
	
				emailOnlySignup.init(el, options);
			}
		}
	};
	module.exports = exports['default'];

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _from = __webpack_require__(172);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	exports.getResponseMsg = getResponseMsg;
	exports.init = init;
	
	var _defaultsDeep = __webpack_require__(571);
	
	var _defaultsDeep2 = _interopRequireDefault(_defaultsDeep);
	
	var _kebabCase = __webpack_require__(607);
	
	var _kebabCase2 = _interopRequireDefault(_kebabCase);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*
	 * convert a response 'code' to html message
	 * @param {String} response
	 * @param {String} pageLocation
	 * @returns {HTMLString}
	 */
	function getResponseMsg(response, pageLocation) {
		var responseMsg = {
			'SUBSCRIPTION_SUCCESSFUL': 'Thanks – look out for your first briefing soon.',
			'INVALID_REQUEST': 'Sorry, something went wrong. Please try again.',
			'ALREADY_SUBSCRIBED': 'It looks like you’re currently receiving the daily top stories summary email. If you’re interested in getting access to more FT content, why not <a target="_blank" style="text-decoration:none;color:#27757B;" href="/products?segID=0801043" data-trackable="trial-existing">sign up to a 4 week Trial</a>?',
			'USER_ARCHIVED': 'It looks like you’ve signed up to the daily top stories summary email before. If you’re interested in getting access to more FT content, why not <a target="_blank" style="text-decoration:none;color:#27757B;" href="/products?segID=0801043" data-trackable="trial-archived">sign up to a 4 week Trial</a>?',
			'USER_NOT_ANONYMOUS': 'It looks like you already have an account with us. <a target="_blank" href="/login?location=' + pageLocation + '" style="text-decoration:none;color:#27757B;" data-trackable="sign-in">Sign in</a>.',
			'USER_CONTRACT_FOUND': 'It looks like you\'re already an FT subscriber. To sign up to exclusive newsletters go to <a target="_blank" href="/newsletters" style="text-decoration:none;color:#27757B;" data-trackable="newsletters">ft.com/newsletters</a>'
		};
		return responseMsg[response] ? responseMsg[response] : responseMsg.INVALID_REQUEST;
	}
	
	/*
	 * Init component
	 * @param {Element} element - the element containing the form
	 * @options {Object} options - custom options
	 */
	function init(element) {
		var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	
		var pageLocation = window.location.href;
	
		var VISUALLY_HIDDEN_CLASS = 'o-email-only-signup__visually-hidden';
		var FORM_ERROR_CLASS = 'o-forms--error';
		var SELECT_INACTIVE_CLASS = 'o-email-only-signup__select--inactive';
	
		var o = {
			self: element,
			closeButton: element.querySelector('[data-o-email-only-signup-close]'),
			content: element.querySelector('[data-o-email-only-signup-content]') || null,
			contentFocusables: null,
			discreetContent: element.querySelector('[data-o-email-only-signup-discreet-content]') || null,
			discreetContentFocusables: null,
			displaySection: element.querySelector('[data-o-email-only-signup-completion-message]'),
			emailField: element.querySelector('input[name=email]'),
			form: element.querySelector('[data-o-email-only-signup-form]'),
			invalidEmailMessage: element.querySelector('[data-o-email-only-signup-email-error]'),
			openButton: element.querySelector('[data-o-email-only-signup-open]') || null,
			topicSelect: element.querySelector('[data-o-email-only-signup-dropdown]') || null,
			ariaControls: toArray(element.querySelectorAll('[aria-controls]')) || null
		};
	
		var defaultOptions = {
			signupUrl: '/signup/api/light-signup',
			collapsible: o.openButton && o.content && o.discreetContent
		};
	
		(0, _defaultsDeep2.default)(options, optionsFromData(element, defaultOptions), defaultOptions);
	
		enhanceComponent();
	
		// Event Listeners
		o.form.addEventListener('submit', function (e) {
			e.preventDefault();
	
			if (isValidEmail(o.emailField.value)) {
				var opts = {
					method: 'POST',
					headers: {
						'Content-type': 'application/x-www-form-urlencoded'
					},
					credentials: 'include',
					body: serializeFormInputs(e.target)
				};
	
				fetch(options.signupUrl, opts).then(function (response) {
					return response.text();
				}).then(function (response) {
					displayComponentMessage(getResponseMsg(response, pageLocation));
				}).catch(function (err) {
					return console.log(err);
				});
			} else {
				toggleComponentValidationErrors();
			}
		});
	
		o.emailField.addEventListener('click', function () {
			if (o.emailField.classList.contains(FORM_ERROR_CLASS)) {
				toggleComponentValidationErrors();
			}
		});
	
		if (o.closeButton) {
			o.closeButton.addEventListener('click', function () {
				if (options.collapsible) {
					showComponentCollapsed(true);
				} else {
					o.self.style.display = 'none';
					o.self.setAttribute('aria-hidden', true);
					updateComponentAriaControls();
				}
			});
		}
	
		if (o.topicSelect) {
			o.topicSelect.addEventListener('focus', toggleComponentSelectInactive);
			o.topicSelect.addEventListener('blur', toggleComponentSelectInactive);
		}
	
		if (options.collapsible) {
			o.openButton.addEventListener('click', function () {
				showComponentCollapsed(false);
			});
		}
	
		// transfrom core to enhanced experience
		function enhanceComponent() {
			if (o.closeButton) {
				removeClass(VISUALLY_HIDDEN_CLASS, o.closeButton);
			}
			updateComponentAriaControls();
			if (options.collapsible) {
				o.contentFocusables = findFocusablesInEl(o.content);
				o.discreetContentFocusables = findFocusablesInEl(o.discreetContent);
			}
		}
	
		// toggle the email validation errors
		function toggleComponentValidationErrors() {
			toggleClass(FORM_ERROR_CLASS, o.emailField);
			toggleClass(VISUALLY_HIDDEN_CLASS, o.invalidEmailMessage);
		}
	
		// collapse component, aka. show discreet state
		function showComponentCollapsed(showCollapsed) {
	
			o.content.setAttribute('aria-hidden', showCollapsed);
			toggleClass(VISUALLY_HIDDEN_CLASS, o.content, showCollapsed);
			o.contentFocusables.forEach(function (el) {
				toggleTabIndex(el, !showCollapsed);
			});
	
			o.discreetContent.setAttribute('aria-hidden', !showCollapsed);
			toggleClass(VISUALLY_HIDDEN_CLASS, o.discreetContent, !showCollapsed);
			o.discreetContentFocusables.forEach(function (el) {
				toggleTabIndex(el, showCollapsed);
			});
	
			updateComponentAriaControls();
		}
	
		// toggle the inactive styles on dropdown component to allow mock 'placeholder'
		function toggleComponentSelectInactive(event) {
			var isPlaceholderSelected = event.target.options[event.target.selectedIndex].getAttribute('placeholder') !== null;
	
			if (event.type === 'focus') {
				removeClass(SELECT_INACTIVE_CLASS, o.topicSelect);
			}
	
			if (event.type === 'blur' && isPlaceholderSelected) {
				addClass(SELECT_INACTIVE_CLASS, o.topicSelect);
			}
		}
	
		/*
	  * display a message in the component
	  * @param {HTML String} message - content to inject
	  */
		function displayComponentMessage(message) {
			o.displaySection.innerHTML = message;
		}
	
		//update 'aria-expanded' attr to match an 'aria-controls' element target state
		function updateComponentAriaControls() {
			if (o.ariaControls) {
				o.ariaControls.forEach(function (el) {
					var target = o.self.querySelector('#' + el.getAttribute('aria-controls'));
					if (target) {
						var targetIsHidden = target && target.getAttribute('aria-hidden') === 'true';
						el.setAttribute('aria-expanded', !targetIsHidden);
					}
				});
			}
		}
	};
	
	/*
	 * Extract options from element data attributes
	 * @param {Element} el
	 * @param {Object} options - Containing keys to match attrs
	 * @returns {Object}
	 */
	function optionsFromData(el, opts) {
		var options = {};
		(0, _keys2.default)(opts).forEach(function (key) {
			// convert optionKeyLikeThis to data-o-email-only-signup-option-key-like-this
			var attr = 'data-o-email-only-signup-' + (0, _kebabCase2.default)(key);
			if (el.hasAttribute(attr)) {
				options[key] = el.getAttribute(attr);
			}
		});
		return options;
	}
	
	/*
	 * find and return an array of 'focusable' elements in a given element
	 * @param {Element} el
	 * @returns {Array} - Array of Elements, can be empty
	 */
	function findFocusablesInEl(el) {
		var arr = [];
		['input', 'button', 'a'].forEach(function (selector) {
			var nodeList = el.querySelectorAll(selector);
			if (nodeList && nodeList.length > 0) {
				arr = arr.concat(toArray(nodeList));
			}
		});
		return arr;
	}
	
	/*
	 * regex from: https://www.w3.org/TR/html5/forms.html#valid-e-mail-address
	 * @param {String} email - string to validate as email
	 * @returns {Boolean} - true: string is a valid email, false: not valid
	 */
	function isValidEmail(email) {
		return (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(email)
		);
	}
	
	/*
	 * For application/x-www-form-urlencoded, spaces are to be replaced by '+',
	 * so follow with an additional replacement of "%20" with "+"
	 * @param {String} string - string to encode
	 * @returns {String}
	 */
	function encodeComponent(string) {
		return encodeURIComponent(string.trim()).replace('%20', '+');
	}
	
	/*
	 * serialize a forms inputs
	 * @param {Element} form - the form Element to serialize
	 * @returns {String}
	 */
	function serializeFormInputs(form) {
		var inputs = toArray(form.elements);
		var str = [];
		inputs.forEach(function (el) {
			if (el.name && el.type !== 'submit' && el.type !== 'button') {
				str.push(encodeComponent(el.name) + '=' + encodeComponent(el.value));
			}
		});
		return str.join('&');
	}
	
	// add css class to element
	function addClass(cssClass, el) {
		el.classList.add(cssClass);
	}
	
	// remove css class from element
	function removeClass(cssClass, el) {
		el.classList.remove(cssClass);
	}
	
	/*
	 * toggle css class on element
	 * @param {Boolean} force - true: add the class, false: remove the class
	 */
	function toggleClass(cssClass, el, force) {
		if (force === false) {
			removeClass(cssClass, el);
		} else if (force === true || el.classList.contains(cssClass) === false) {
			addClass(cssClass, el);
		} else {
			removeClass(cssClass, el);
		}
	}
	
	// toggle tabindex on element
	function toggleTabIndex(el, boolean) {
		var index = boolean ? 0 : -1;
		el.setAttribute('tabindex', index);
	}
	
	// check array-like and return converted array
	function toArray(arrayLike) {
		if (arrayLike && arrayLike.length > 0) {
			return (0, _from2.default)(arrayLike);
		}
	}

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var createDefaults = __webpack_require__(572),
	    merge = __webpack_require__(574),
	    mergeDefaults = __webpack_require__(606);
	
	/**
	 * This method is like `_.defaults` except that it recursively assigns
	 * default properties.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	 * // => { 'user': { 'name': 'barney', 'age': 36 } }
	 *
	 */
	var defaultsDeep = createDefaults(merge, mergeDefaults);
	
	module.exports = defaultsDeep;

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var restParam = __webpack_require__(573);
	
	/**
	 * Creates a `_.defaults` or `_.defaultsDeep` function.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @param {Function} customizer The function to customize assigned values.
	 * @returns {Function} Returns the new defaults function.
	 */
	function createDefaults(assigner, customizer) {
	  return restParam(function (args) {
	    var object = args[0];
	    if (object == null) {
	      return object;
	    }
	    args.push(customizer);
	    return assigner.apply(undefined, args);
	  });
	}
	
	module.exports = createDefaults;

/***/ },
/* 573 */
/***/ function(module, exports) {

	'use strict';
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as an array.
	 *
	 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.restParam(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function restParam(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? func.length - 1 : +start || 0, 0);
	  return function () {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        rest = Array(length);
	
	    while (++index < length) {
	      rest[index] = args[start + index];
	    }
	    switch (start) {
	      case 0:
	        return func.call(this, rest);
	      case 1:
	        return func.call(this, args[0], rest);
	      case 2:
	        return func.call(this, args[0], args[1], rest);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = rest;
	    return func.apply(this, otherArgs);
	  };
	}
	
	module.exports = restParam;

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseMerge = __webpack_require__(575),
	    createAssigner = __webpack_require__(602);
	
	/**
	 * Recursively merges own enumerable properties of the source object(s), that
	 * don't resolve to `undefined` into the destination object. Subsequent sources
	 * overwrite property assignments of previous sources. If `customizer` is
	 * provided it's invoked to produce the merged values of the destination and
	 * source properties. If `customizer` returns `undefined` merging is handled
	 * by the method instead. The `customizer` is bound to `thisArg` and invoked
	 * with five arguments: (objectValue, sourceValue, key, object, source).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {*} [thisArg] The `this` binding of `customizer`.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var users = {
	 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	 * };
	 *
	 * var ages = {
	 *   'data': [{ 'age': 36 }, { 'age': 40 }]
	 * };
	 *
	 * _.merge(users, ages);
	 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	 *
	 * // using a customizer callback
	 * var object = {
	 *   'fruits': ['apple'],
	 *   'vegetables': ['beet']
	 * };
	 *
	 * var other = {
	 *   'fruits': ['banana'],
	 *   'vegetables': ['carrot']
	 * };
	 *
	 * _.merge(object, other, function(a, b) {
	 *   if (_.isArray(a)) {
	 *     return a.concat(b);
	 *   }
	 * });
	 * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	 */
	var merge = createAssigner(baseMerge);
	
	module.exports = merge;

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var arrayEach = __webpack_require__(576),
	    baseMergeDeep = __webpack_require__(577),
	    isArray = __webpack_require__(585),
	    isArrayLike = __webpack_require__(580),
	    isObject = __webpack_require__(589),
	    isObjectLike = __webpack_require__(584),
	    isTypedArray = __webpack_require__(597),
	    keys = __webpack_require__(600);
	
	/**
	 * The base implementation of `_.merge` without support for argument juggling,
	 * multiple sources, and `this` binding `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Array} [stackA=[]] Tracks traversed source objects.
	 * @param {Array} [stackB=[]] Associates values with source counterparts.
	 * @returns {Object} Returns `object`.
	 */
	function baseMerge(object, source, customizer, stackA, stackB) {
	  if (!isObject(object)) {
	    return object;
	  }
	  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
	      props = isSrcArr ? undefined : keys(source);
	
	  arrayEach(props || source, function (srcValue, key) {
	    if (props) {
	      key = srcValue;
	      srcValue = source[key];
	    }
	    if (isObjectLike(srcValue)) {
	      stackA || (stackA = []);
	      stackB || (stackB = []);
	      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
	    } else {
	      var value = object[key],
	          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	          isCommon = result === undefined;
	
	      if (isCommon) {
	        result = srcValue;
	      }
	      if ((result !== undefined || isSrcArr && !(key in object)) && (isCommon || (result === result ? result !== value : value === value))) {
	        object[key] = result;
	      }
	    }
	  });
	  return object;
	}
	
	module.exports = baseMerge;

/***/ },
/* 576 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * A specialized version of `_.forEach` for arrays without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var arrayCopy = __webpack_require__(578),
	    isArguments = __webpack_require__(579),
	    isArray = __webpack_require__(585),
	    isArrayLike = __webpack_require__(580),
	    isPlainObject = __webpack_require__(590),
	    isTypedArray = __webpack_require__(597),
	    toPlainObject = __webpack_require__(598);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Array} [stackA=[]] Tracks traversed source objects.
	 * @param {Array} [stackB=[]] Associates values with source counterparts.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
	  var length = stackA.length,
	      srcValue = source[key];
	
	  while (length--) {
	    if (stackA[length] == srcValue) {
	      object[key] = stackB[length];
	      return;
	    }
	  }
	  var value = object[key],
	      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	      isCommon = result === undefined;
	
	  if (isCommon) {
	    result = srcValue;
	    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
	      result = isArray(value) ? value : isArrayLike(value) ? arrayCopy(value) : [];
	    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {};
	    } else {
	      isCommon = false;
	    }
	  }
	  // Add the source value to the stack of traversed objects and associate
	  // it with its merged value.
	  stackA.push(srcValue);
	  stackB.push(result);
	
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
	  } else if (result === result ? result !== value : value === value) {
	    object[key] = result;
	  }
	}
	
	module.exports = baseMergeDeep;

/***/ },
/* 578 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function arrayCopy(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = arrayCopy;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArrayLike = __webpack_require__(580),
	    isObjectLike = __webpack_require__(584);
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Native method references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is classified as an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	    return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
	}
	
	module.exports = isArguments;

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getLength = __webpack_require__(581),
	    isLength = __webpack_require__(583);
	
	/**
	 * Checks if `value` is array-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value));
	}
	
	module.exports = isArrayLike;

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseProperty = __webpack_require__(582);
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	module.exports = getLength;

/***/ },
/* 582 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function (object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;

/***/ },
/* 583 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) == 'object';
	}
	
	module.exports = isObjectLike;

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getNative = __webpack_require__(586),
	    isLength = __webpack_require__(583),
	    isObjectLike = __webpack_require__(584);
	
	/** `Object#toString` result references. */
	var arrayTag = '[object Array]';
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeIsArray = getNative(Array, 'isArray');
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(function() { return arguments; }());
	 * // => false
	 */
	var isArray = nativeIsArray || function (value) {
	  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	};
	
	module.exports = isArray;

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isNative = __webpack_require__(587);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	module.exports = getNative;

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isFunction = __webpack_require__(588),
	    isObjectLike = __webpack_require__(584);
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = isNative;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isObject = __webpack_require__(589);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]';
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 which returns 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	module.exports = isFunction;

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseForIn = __webpack_require__(591),
	    isArguments = __webpack_require__(579),
	    isObjectLike = __webpack_require__(584);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * **Note:** This method assumes objects created by the `Object` constructor
	 * have no inherited enumerable properties.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  var Ctor;
	
	  // Exit early for non `Object` objects.
	  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || !hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) {
	    return false;
	  }
	  // IE < 9 iterates inherited properties before own properties. If the first
	  // iterated property is an object's own property then there are no inherited
	  // enumerable properties.
	  var result;
	  // In most environments an object's own properties are iterated before
	  // its inherited properties. If the last iterated property is an object's
	  // own property then there are no inherited enumerable properties.
	  baseForIn(value, function (subValue, key) {
	    result = key;
	  });
	  return result === undefined || hasOwnProperty.call(value, result);
	}
	
	module.exports = isPlainObject;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseFor = __webpack_require__(592),
	    keysIn = __webpack_require__(595);
	
	/**
	 * The base implementation of `_.forIn` without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForIn(object, iteratee) {
	  return baseFor(object, iteratee, keysIn);
	}
	
	module.exports = baseForIn;

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var createBaseFor = __webpack_require__(593);
	
	/**
	 * The base implementation of `baseForIn` and `baseForOwn` which iterates
	 * over `object` properties returned by `keysFunc` invoking `iteratee` for
	 * each property. Iteratee functions may exit iteration early by explicitly
	 * returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var toObject = __webpack_require__(594);
	
	/**
	 * Creates a base function for `_.forIn` or `_.forInRight`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function (object, iteratee, keysFunc) {
	    var iterable = toObject(object),
	        props = keysFunc(object),
	        length = props.length,
	        index = fromRight ? length : -1;
	
	    while (fromRight ? index-- : ++index < length) {
	      var key = props[index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isObject = __webpack_require__(589);
	
	/**
	 * Converts `value` to an object if it's not one.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {Object} Returns the object.
	 */
	function toObject(value) {
	  return isObject(value) ? value : Object(value);
	}
	
	module.exports = toObject;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArguments = __webpack_require__(579),
	    isArray = __webpack_require__(585),
	    isIndex = __webpack_require__(596),
	    isLength = __webpack_require__(583),
	    isObject = __webpack_require__(589);
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  if (object == null) {
	    return [];
	  }
	  if (!isObject(object)) {
	    object = Object(object);
	  }
	  var length = object.length;
	  length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;
	
	  var Ctor = object.constructor,
	      index = -1,
	      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	      result = Array(length),
	      skipIndexes = length > 0;
	
	  while (++index < length) {
	    result[index] = index + '';
	  }
	  for (var key in object) {
	    if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keysIn;

/***/ },
/* 596 */
/***/ function(module, exports) {

	'use strict';
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^\d+$/;
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = typeof value == 'number' || reIsUint.test(value) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}
	
	module.exports = isIndex;

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isLength = __webpack_require__(583),
	    isObjectLike = __webpack_require__(584);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
	}
	
	module.exports = isTypedArray;

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseCopy = __webpack_require__(599),
	    keysIn = __webpack_require__(595);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable
	 * properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return baseCopy(value, keysIn(value));
	}
	
	module.exports = toPlainObject;

/***/ },
/* 599 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property names to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @returns {Object} Returns `object`.
	 */
	function baseCopy(source, props, object) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	    object[key] = source[key];
	  }
	  return object;
	}
	
	module.exports = baseCopy;

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getNative = __webpack_require__(586),
	    isArrayLike = __webpack_require__(580),
	    isObject = __webpack_require__(589),
	    shimKeys = __webpack_require__(601);
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeKeys = getNative(Object, 'keys');
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	var keys = !nativeKeys ? shimKeys : function (object) {
	  var Ctor = object == null ? undefined : object.constructor;
	  if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && isArrayLike(object)) {
	    return shimKeys(object);
	  }
	  return isObject(object) ? nativeKeys(object) : [];
	};
	
	module.exports = keys;

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArguments = __webpack_require__(579),
	    isArray = __webpack_require__(585),
	    isIndex = __webpack_require__(596),
	    isLength = __webpack_require__(583),
	    keysIn = __webpack_require__(595);
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A fallback implementation of `Object.keys` which creates an array of the
	 * own enumerable property names of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function shimKeys(object) {
	  var props = keysIn(object),
	      propsLength = props.length,
	      length = propsLength && object.length;
	
	  var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));
	
	  var index = -1,
	      result = [];
	
	  while (++index < propsLength) {
	    var key = props[index];
	    if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = shimKeys;

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var bindCallback = __webpack_require__(603),
	    isIterateeCall = __webpack_require__(605),
	    restParam = __webpack_require__(573);
	
	/**
	 * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return restParam(function (object, sources) {
	    var index = -1,
	        length = object == null ? 0 : sources.length,
	        customizer = length > 2 ? sources[length - 2] : undefined,
	        guard = length > 2 ? sources[2] : undefined,
	        thisArg = length > 1 ? sources[length - 1] : undefined;
	
	    if (typeof customizer == 'function') {
	      customizer = bindCallback(customizer, thisArg, 5);
	      length -= 2;
	    } else {
	      customizer = typeof thisArg == 'function' ? thisArg : undefined;
	      length -= customizer ? 1 : 0;
	    }
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var identity = __webpack_require__(604);
	
	/**
	 * A specialized version of `baseCallback` which only supports `this` binding
	 * and specifying the number of arguments to provide to `func`.
	 *
	 * @private
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {number} [argCount] The number of arguments to provide to `func`.
	 * @returns {Function} Returns the callback.
	 */
	function bindCallback(func, thisArg, argCount) {
	  if (typeof func != 'function') {
	    return identity;
	  }
	  if (thisArg === undefined) {
	    return func;
	  }
	  switch (argCount) {
	    case 1:
	      return function (value) {
	        return func.call(thisArg, value);
	      };
	    case 3:
	      return function (value, index, collection) {
	        return func.call(thisArg, value, index, collection);
	      };
	    case 4:
	      return function (accumulator, value, index, collection) {
	        return func.call(thisArg, accumulator, value, index, collection);
	      };
	    case 5:
	      return function (value, other, key, object, source) {
	        return func.call(thisArg, value, other, key, object, source);
	      };
	  }
	  return function () {
	    return func.apply(thisArg, arguments);
	  };
	}
	
	module.exports = bindCallback;

/***/ },
/* 604 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * This method returns the first argument provided to it.
	 *
	 * @static
	 * @memberOf _
	 * @category Utility
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.identity(object) === object;
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isArrayLike = __webpack_require__(580),
	    isIndex = __webpack_require__(596),
	    isObject = __webpack_require__(589);
	
	/**
	 * Checks if the provided arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index === 'undefined' ? 'undefined' : (0, _typeof3.default)(index);
	  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
	    var other = object[index];
	    return value === value ? value === other : other !== other;
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var merge = __webpack_require__(574);
	
	/**
	 * Used by `_.defaultsDeep` to customize its `_.merge` use.
	 *
	 * @private
	 * @param {*} objectValue The destination object property value.
	 * @param {*} sourceValue The source object property value.
	 * @returns {*} Returns the value to assign to the destination object.
	 */
	function mergeDefaults(objectValue, sourceValue) {
	  return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);
	}
	
	module.exports = mergeDefaults;

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var createCompounder = __webpack_require__(608);
	
	/**
	 * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the kebab cased string.
	 * @example
	 *
	 * _.kebabCase('Foo Bar');
	 * // => 'foo-bar'
	 *
	 * _.kebabCase('fooBar');
	 * // => 'foo-bar'
	 *
	 * _.kebabCase('__foo_bar__');
	 * // => 'foo-bar'
	 */
	var kebabCase = createCompounder(function (result, word, index) {
	  return result + (index ? '-' : '') + word.toLowerCase();
	});
	
	module.exports = kebabCase;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var deburr = __webpack_require__(609),
	    words = __webpack_require__(612);
	
	/**
	 * Creates a function that produces compound words out of the words in a
	 * given string.
	 *
	 * @private
	 * @param {Function} callback The function to combine each word.
	 * @returns {Function} Returns the new compounder function.
	 */
	function createCompounder(callback) {
	  return function (string) {
	    var index = -1,
	        array = words(deburr(string)),
	        length = array.length,
	        result = '';
	
	    while (++index < length) {
	      result = callback(result, array[index], index);
	    }
	    return result;
	  };
	}
	
	module.exports = createCompounder;

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseToString = __webpack_require__(610),
	    deburrLetter = __webpack_require__(611);
	
	/** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */
	var reComboMark = /[\u0300-\u036f\ufe20-\ufe23]/g;
	
	/** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
	
	/**
	 * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	 * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to deburr.
	 * @returns {string} Returns the deburred string.
	 * @example
	 *
	 * _.deburr('déjà vu');
	 * // => 'deja vu'
	 */
	function deburr(string) {
	  string = baseToString(string);
	  return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	}
	
	module.exports = deburr;

/***/ },
/* 610 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Converts `value` to a string if it's not one. An empty string is returned
	 * for `null` or `undefined` values.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  return value == null ? '' : value + '';
	}
	
	module.exports = baseToString;

/***/ },
/* 611 */
/***/ function(module, exports) {

	'use strict';
	
	/** Used to map latin-1 supplementary letters to basic latin letters. */
	var deburredLetters = {
	  '\xc0': 'A', '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	  '\xe0': 'a', '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	  '\xc7': 'C', '\xe7': 'c',
	  '\xd0': 'D', '\xf0': 'd',
	  '\xc8': 'E', '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	  '\xe8': 'e', '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	  '\xcC': 'I', '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	  '\xeC': 'i', '\xed': 'i', '\xee': 'i', '\xef': 'i',
	  '\xd1': 'N', '\xf1': 'n',
	  '\xd2': 'O', '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	  '\xf2': 'o', '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	  '\xd9': 'U', '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	  '\xf9': 'u', '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	  '\xdd': 'Y', '\xfd': 'y', '\xff': 'y',
	  '\xc6': 'Ae', '\xe6': 'ae',
	  '\xde': 'Th', '\xfe': 'th',
	  '\xdf': 'ss'
	};
	
	/**
	 * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	 *
	 * @private
	 * @param {string} letter The matched letter to deburr.
	 * @returns {string} Returns the deburred letter.
	 */
	function deburrLetter(letter) {
	  return deburredLetters[letter];
	}
	
	module.exports = deburrLetter;

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var baseToString = __webpack_require__(610),
	    isIterateeCall = __webpack_require__(605);
	
	/** Used to match words to create compound words. */
	var reWords = function () {
	  var upper = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
	      lower = '[a-z\\xdf-\\xf6\\xf8-\\xff]+';
	
	  return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');
	}();
	
	/**
	 * Splits `string` into an array of its words.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {RegExp|string} [pattern] The pattern to match words.
	 * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	 * @returns {Array} Returns the words of `string`.
	 * @example
	 *
	 * _.words('fred, barney, & pebbles');
	 * // => ['fred', 'barney', 'pebbles']
	 *
	 * _.words('fred, barney, & pebbles', /[^, ]+/g);
	 * // => ['fred', 'barney', '&', 'pebbles']
	 */
	function words(string, pattern, guard) {
	  if (guard && isIterateeCall(string, pattern, guard)) {
	    pattern = undefined;
	  }
	  string = baseToString(string);
	  return string.match(pattern || reWords) || [];
	}
	
	module.exports = words;

/***/ },
/* 613 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
		preset: 'complete'
	};

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(203);
	
	var fetchres = __webpack_require__(337);
	var Gallery = __webpack_require__(615);
	
	
	module.exports = function (els) {
		[].slice.call(els).forEach(function (el) {
			var uuid = el.getAttribute('data-uuid');
			var syncid = el.getAttribute('data-syncid');
			if (uuid) {
				(function () {
					var picturesSeen = [];
					var totalPictures = void 0;
					var fireBeacon = function fireBeacon(picture) {
						if (picturesSeen.indexOf(picture) > -1) {
							return;
						}
						picturesSeen.push(picture);
						var data = {
							action: 'gallery',
							category: 'page',
							meta: {
								picture: picture,
								totalPictures: totalPictures,
								percentageThrough: 100 / totalPictures * (picturesSeen.length + 1)
							},
							context: {
								product: 'next',
								source: 'next-article'
							}
						};
						(0, _utils.broadcast)('oTracking.event', data);
					};
					fetch('/embedded-components/slideshow/' + uuid + '?syncid=' + syncid, { credentials: 'same-origin' }).then(fetchres.text).then(function (data) {
						var container = document.createElement('div');
						container.setAttribute('class', 'article__gallery');
						container.innerHTML = data;
						el.parentNode.replaceChild(container, el);
						return container;
					}).then(function (el) {
						el.addEventListener('oGallery.itemSelect', function (ev) {
							if (ev.target.classList.contains('o-gallery--slideshow')) {
								fireBeacon(ev.detail.itemID + 1);
							}
						});
						el.addEventListener('oGallery.ready', function (ev) {
							totalPictures = ev.target.querySelectorAll('.o-gallery__item').length;
							fireBeacon(1);
						});
						return Gallery.init(el);
					}).catch(function (err) {
						setTimeout(function () {
							throw err;
						});
					});
				})();
			}
		});
	};

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(616);

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	/*global require, module*/
	'use strict';
	
	var oGallery = __webpack_require__(617);
	var constructAll = function constructAll() {
		oGallery.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	module.exports = oGallery;

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	/*global require, module*/
	'use strict';
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var oDom = __webpack_require__(148),
	    DomDelegate = __webpack_require__(141),
	    FTScroller = __webpack_require__(618).FTScroller,
	    oViewport = __webpack_require__(143),
	    galleryDom = __webpack_require__(622),
	    SimpleScroller = __webpack_require__(623);
	
	function Gallery(containerEl, config) {
	
		var viewportEl;
		var titleEl;
		var allItemsEl;
		var itemEls;
		var selectedItemIndex;
		var shownItemIndex;
		var scroller;
		var debounceScroll;
		var prevControlDiv;
		var nextControlDiv;
		var propertyAttributeMap = {
			component: "data-o-component",
			syncID: "data-o-gallery-syncid",
			multipleItemsPerPage: "data-o-gallery-multipleitemsperpage",
			touch: "data-o-gallery-touch",
			captions: "data-o-gallery-captions",
			captionMinHeight: "data-o-gallery-captionminheight",
			captionMaxHeight: "data-o-gallery-captionmaxheight",
			title: "data-o-gallery-title"
		};
		var defaultConfig = {
			component: "o-gallery",
			multipleItemsPerPage: false,
			captions: true,
			captionMinHeight: 24,
			captionMaxHeight: 52,
			touch: false,
			syncID: "o-gallery-" + new Date().getTime()
		};
		var allowTransitions = false;
		var bodyDomDelegate;
		var containerDomDelegate;
	
		function supportsCssTransforms() {
			var b = document.body || document.documentElement,
			    s = b.style,
			    p = 'Transition';
			var v = ['', 'Moz', 'webkit', 'Webkit', 'Khtml', 'O', 'ms'];
	
			for (var i = 0; i < v.length; i++) {
				if (typeof s[v[i] + p] === 'string' || typeof s[v[i] + p.toLowerCase()] === 'string') return true;
			}
			return false;
		}
	
		function isDataSource() {
			return config.items && config.items.length > 0;
		}
	
		function setWidths() {
			var totalWidth = 0;
			var itemWidth;
	
			if (config.multipleItemsPerPage) {
				itemWidth = parseInt(itemEls[selectedItemIndex].clientWidth, 10);
			} else {
				itemWidth = containerEl.clientWidth;
			}
			for (var i = 0; i < itemEls.length; i++) {
				itemEls[i].style.width = itemWidth + "px";
				totalWidth += itemWidth;
			}
			allItemsEl.style.width = totalWidth + "px";
			// Makes sure Scroller know about the width change
			scroller.updateDimensions();
		}
	
		function isValidItem(n) {
			return typeof n === "number" && n > -1 && n < itemEls.length;
		}
	
		function getSelectedItem() {
			var selectedItem = 0;
			for (var i = 0; i < itemEls.length; i++) {
				if (itemEls[i].getAttribute('aria-selected') === 'true') {
					selectedItem = i;
					break;
				}
			}
			return selectedItem;
		}
	
		function selectOnClick(evt) {
			var clickedItemNum = oDom.getIndex(oDom.getClosestMatch(evt.srcElement, ".o-gallery__item"));
			selectItem(clickedItemNum, true, "user");
		}
	
		function addUiControls() {
			prevControlDiv = galleryDom.createElement("div", "", "o-gallery__control o-gallery__control--prev");
			nextControlDiv = galleryDom.createElement("div", "", "o-gallery__control o-gallery__control--next");
			containerEl.appendChild(prevControlDiv);
			containerEl.appendChild(nextControlDiv);
			containerDomDelegate.on('click', '.o-gallery__control--prev', prev);
			containerDomDelegate.on('click', '.o-gallery__control--next', next);
			if (config.multipleItemsPerPage) {
				containerDomDelegate.on('click', '.o-gallery__viewport', selectOnClick);
			}
		}
	
		function updateControlStates() {
			prevControlDiv.setAttribute('aria-hidden', String(scroller.scrollLeft <= 0));
			nextControlDiv.setAttribute('aria-hidden', String(scroller.scrollLeft >= allItemsEl.clientWidth - viewportEl.clientWidth));
		}
	
		function getTitleEl() {
			titleEl = containerEl.querySelector(".o-gallery__title");
			if (config.title) {
				if (titleEl) {
					titleEl.innerHTML = config.title;
				} else {
					titleEl = galleryDom.createElement('div', config.title, 'o-gallery__title');
					containerEl.appendChild(titleEl);
				}
			}
		}
	
		function setCaptionSizes() {
			for (var i = 0; i < itemEls.length; i++) {
				var itemEl = itemEls[i];
				itemEl.style.paddingBottom = config.captionMinHeight + "px";
				var captionEl = itemEl.querySelector(".o-gallery__item__caption");
				if (captionEl) {
					captionEl.style.minHeight = config.captionMinHeight + "px";
					captionEl.style.maxHeight = config.captionMaxHeight + "px";
				}
			}
		}
	
		function insertItemContent(n) {
			var itemNums = n instanceof Array ? n : [n];
			if (config.items) {
				for (var i = 0; i < itemNums.length; i++) {
					var itemNum = itemNums[i];
					if (isValidItem(itemNum) && !config.items[itemNum].inserted) {
						galleryDom.insertItemContent(config, config.items[itemNum], itemEls[itemNum]);
						config.items[itemNum].inserted = true;
						setCaptionSizes();
					}
				}
			}
		}
	
		function isWholeItemInPageView(itemNum, l, r) {
			return itemEls[itemNum].offsetLeft >= l && itemEls[itemNum].offsetLeft + itemEls[itemNum].clientWidth <= r;
		}
	
		function isAnyPartOfItemInPageView(itemNum, l, r) {
			return itemEls[itemNum].offsetLeft >= l - itemEls[itemNum].clientWidth && itemEls[itemNum].offsetLeft <= r;
		}
	
		function getItemsInPageView(l, r, whole) {
			var itemsInView = [];
			var onlyWhole = typeof whole !== "boolean" ? true : whole;
			for (var i = 0; i < itemEls.length; i++) {
				if (onlyWhole && isWholeItemInPageView(i, l, r) || !onlyWhole && isAnyPartOfItemInPageView(i, l, r)) {
					itemsInView.push(i);
				}
			}
			return itemsInView;
		}
	
		function onGalleryCustomEvent(evt) {
			if (evt.srcElement !== containerEl && evt.detail.syncID === config.syncID && evt.detail.source === "user") {
				selectItem(evt.detail.itemID, true);
			}
		}
	
		function listenForSyncEvents() {
			bodyDomDelegate.on('oGallery.itemSelect', onGalleryCustomEvent);
		}
	
		function triggerEvent(name, data) {
			data.syncID = config.syncID;
			var event = new CustomEvent(name, {
				'bubbles': true,
				'cancelable': true,
				'detail': data || {}
			});
			containerEl.dispatchEvent(event);
		}
	
		function moveViewport(left) {
			scroller.scrollTo(left, 0, allowTransitions ? true : 0);
			insertItemContent(getItemsInPageView(left, left + viewportEl.clientWidth, false));
		}
	
		function alignItemLeft(n) {
			moveViewport(itemEls[n].offsetLeft);
		}
	
		function alignItemRight(n) {
			var newScrollLeft = itemEls[n].offsetLeft - (viewportEl.clientWidth - itemEls[n].clientWidth);
			moveViewport(newScrollLeft);
		}
	
		function bringItemIntoView(n) {
			if (!isValidItem(n)) {
				return;
			}
			var viewportL = scroller.scrollLeft;
			var viewportR = viewportL + viewportEl.clientWidth;
			var itemL = itemEls[n].offsetLeft;
			var itemR = itemL + itemEls[n].clientWidth;
			if (itemL > viewportL && itemR < viewportR) {
				return;
			}
			if (itemL < viewportL) {
				alignItemLeft(n);
			} else if (itemR > viewportR) {
				alignItemRight(n);
			}
		}
	
		function showItem(n) {
			if (isValidItem(n)) {
				bringItemIntoView(n);
				shownItemIndex = n;
				updateControlStates();
			}
		}
	
		function showPrevItem() {
			var prev = shownItemIndex - 1 >= 0 ? shownItemIndex - 1 : itemEls.length - 1;
			showItem(prev);
		}
	
		function showNextItem() {
			var next = shownItemIndex + 1 < itemEls.length ? shownItemIndex + 1 : 0;
			showItem(next);
		}
	
		function showPrevPage() {
			if (scroller.scrollLeft > 0) {
				var prevPageWholeItems = getItemsInPageView(scroller.scrollLeft - viewportEl.clientWidth, scroller.scrollLeft);
				var prevPageItem = prevPageWholeItems.pop() || 0;
				alignItemRight(prevPageItem);
			}
		}
	
		function showNextPage() {
			if (scroller.scrollLeft < allItemsEl.clientWidth - viewportEl.clientWidth) {
				var currentWholeItemsInView = getItemsInPageView(scroller.scrollLeft, scroller.scrollLeft + viewportEl.clientWidth);
				var lastWholeItemInView = currentWholeItemsInView.pop();
				alignItemLeft(lastWholeItemInView + 1);
			}
		}
	
		function selectItem(n, show, source) {
			if (!source) {
				source = "api";
			}
			if (isValidItem(n)) {
				if (show) {
					showItem(n);
				}
				if (n !== selectedItemIndex) {
					itemEls[selectedItemIndex].setAttribute('aria-selected', 'false');
					selectedItemIndex = n;
					itemEls[selectedItemIndex].setAttribute('aria-selected', 'true');
					triggerEvent("oGallery.itemSelect", {
						itemID: selectedItemIndex,
						source: source
					});
				}
			}
		}
	
		function selectPrevItem(show, source) {
			var prev = selectedItemIndex - 1 >= 0 ? selectedItemIndex - 1 : itemEls.length - 1;
			selectItem(prev, show, source);
		}
	
		function selectNextItem(show, source) {
			var next = selectedItemIndex + 1 < itemEls.length ? selectedItemIndex + 1 : 0;
			selectItem(next, show, source);
		}
	
		function prev() {
			if (config.multipleItemsPerPage) {
				showPrevPage();
			} else {
				selectPrevItem(true, "user");
			}
		}
	
		function next() {
			if (config.multipleItemsPerPage) {
				showNextPage();
			} else {
				selectNextItem(true, "user");
			}
		}
	
		function onResize() {
			setWidths();
			if (!config.multipleItemsPerPage) {
				// correct the alignment of item in view
				showItem(shownItemIndex);
			} else {
				var newScrollLeft = scroller.scrollLeft;
				insertItemContent(getItemsInPageView(newScrollLeft, newScrollLeft + viewportEl.clientWidth, false));
			}
		}
	
		function extendObjects(objs) {
			var newObj = {};
			for (var i = 0; i < objs.length; i++) {
				var obj = objs[i];
				for (var prop in obj) {
					if (obj.hasOwnProperty(prop)) {
						newObj[prop] = obj[prop];
					}
				}
			}
			return newObj;
		}
	
		function updateDataAttributes() {
			galleryDom.setAttributesFromProperties(containerEl, config, propertyAttributeMap, ["items"]);
		}
	
		function getSyncID() {
			return config.syncID;
		}
	
		function syncWith(galleryInstance) {
			config.syncID = galleryInstance.getSyncID();
			updateDataAttributes();
		}
	
		function onScroll(evt) {
			updateControlStates();
			insertItemContent(getItemsInPageView(evt.scrollLeft, evt.scrollLeft + viewportEl.clientWidth, false));
		}
	
		function destroy() {
			// Destroy objects before manipulating the dom. Order is important for gallery to be destroyed properly
			// It won't instantiate again nicely if it's the other way round
			containerDomDelegate.destroy();
			bodyDomDelegate.destroy();
			window.removeEventListener("oViewport.resize", onResize, false);
			clearTimeout(debounceScroll);
			scroller.destroy(true);
			prevControlDiv.parentNode.removeChild(prevControlDiv);
			prevControlDiv = null;
			nextControlDiv.parentNode.removeChild(nextControlDiv);
			nextControlDiv = null;
			for (var prop in propertyAttributeMap) {
				if (propertyAttributeMap.hasOwnProperty(prop)) {
					containerEl.removeAttribute(propertyAttributeMap[prop]);
				}
			}
			containerEl.removeAttribute('data-o-gallery--js');
		}
	
		if (!containerEl) {
			containerEl = document.body;
		} else if (containerEl.nodeType !== 1) {
			containerEl = document.querySelector(containerEl);
		}
	
		containerEl.setAttribute('data-o-gallery--js', '');
		bodyDomDelegate = new DomDelegate(document.body);
		containerDomDelegate = new DomDelegate(containerEl);
		if (isDataSource()) {
			galleryDom.emptyElement(containerEl);
			containerEl.classList.add("o-gallery");
			allItemsEl = galleryDom.createItemsList(containerEl);
			itemEls = galleryDom.createItems(allItemsEl, config.items);
		}
		config = extendObjects([defaultConfig, galleryDom.getPropertiesFromAttributes(containerEl, propertyAttributeMap), config]);
		updateDataAttributes();
		getTitleEl();
		allItemsEl = allItemsEl || containerEl.querySelector(".o-gallery__items");
		itemEls = itemEls || containerEl.querySelectorAll(".o-gallery__item");
		selectedItemIndex = getSelectedItem();
		shownItemIndex = selectedItemIndex;
	
		// Generate an array of item indexes
		insertItemContent((0, _keys2.default)(itemEls));
		setCaptionSizes();
		if (supportsCssTransforms()) {
			scroller = new FTScroller(containerEl, {
				scrollbars: false,
				scrollingY: false,
				updateOnWindowResize: true,
				snapping: !config.multipleItemsPerPage,
				/* Can't use fling/inertial scroll as after user input is finished and scroll continues, scroll events are no
	    longer fired, and value of scrollLeft doesn't change until scrollend. */
				flinging: false,
				disabledInputMethods: {
					touch: !config.touch,
					scroll: true
				}
			});
			scroller.addEventListener("scroll", function (evt) {
				clearTimeout(debounceScroll);
				debounceScroll = setTimeout(function () {
					onScroll(evt);
				}, 50);
			});
			scroller.addEventListener("scrollend", function (evt) {
				onScroll(evt);
				triggerEvent('oGallery.scrollEnd', evt);
			});
			scroller.addEventListener("segmentwillchange", function () {
				if (!config.multipleItemsPerPage) {
					selectItem(scroller.currentSegment.x, false, "user");
				}
			});
		} else {
			scroller = new SimpleScroller(containerEl);
			containerEl.addEventListener("scrollend", function (evt) {
				onScroll(evt);
				triggerEvent('oGallery.scrollEnd', evt);
			});
		}
		viewportEl = scroller.contentContainerNode.parentNode;
		viewportEl.classList.add("o-gallery__viewport");
		if (titleEl && supportsCssTransforms()) {
			// Title needs to be moved into the viewport so it stays visible when pages change
			titleEl.parentNode.removeChild(titleEl);
			viewportEl.appendChild(titleEl);
		}
		addUiControls();
		showItem(selectedItemIndex);
		if (config.multipleItemsPerPage === true) {
			allowTransitions = true;
		}
		updateControlStates();
		listenForSyncEvents();
	
		// If it's the thumbnails gallery, check that the thumbnails' clientwidth has been set before resizing
		// as this takes time in IE8
		var resizeLimit = 50;
		function forceResize() {
			if (!config.multipleItemsPerPage || parseInt(itemEls[selectedItemIndex].clientWidth, 10) !== 0) {
				onResize();
			} else if (resizeLimit > 0) {
				setTimeout(forceResize, 150);
				resizeLimit--;
			}
		}
		oViewport.listenTo('resize');
		window.addEventListener("oViewport.resize", onResize, false);
		// Force an initial resize in case all images are loaded before o.DOMContentLoaded is fired and the resize event hasn't
		forceResize();
	
		this.showItem = showItem;
		this.getSelectedItem = getSelectedItem;
		this.showPrevItem = showPrevItem;
		this.showNextItem = showNextItem;
		this.showPrevPage = showPrevPage;
		this.showNextPage = showNextPage;
		this.selectItem = selectItem;
		this.selectPrevItem = selectPrevItem;
		this.selectNextItem = selectNextItem;
		this.next = next;
		this.prev = prev;
		this.getSyncID = getSyncID;
		this.syncWith = syncWith;
		this.onResize = onResize;
		this.getGalleryElement = function () {
			return containerEl;
		};
		this.destroy = destroy;
	
		triggerEvent("oGallery.ready", {
			gallery: this
		});
	}
	
	Gallery.init = function (el, config) {
		var conf = config || {};
		var gEls;
		var galleries = [];
		if (!el) {
			el = document.body;
		} else if (el.nodeType !== 1) {
			el = document.querySelector(el);
		}
		if (el.querySelectorAll) {
			gEls = el.querySelectorAll("[data-o-component~=o-gallery]");
			for (var i = 0; i < gEls.length; i++) {
				if (!gEls[i].hasAttribute('data-o-gallery--js')) {
					galleries.push(new Gallery(gEls[i], conf));
				}
			}
		}
		return galleries;
	};
	
	module.exports = Gallery;

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';var _defineProperties=__webpack_require__(619);var _defineProperties2=_interopRequireDefault(_defineProperties);var _typeof2=__webpack_require__(9);var _typeof3=_interopRequireDefault(_typeof2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
	 * FTScroller: touch and mouse-based scrolling for DOM elements larger than their containers.
	 *
	 * While this is a rewrite, it is heavily inspired by two projects:
	 * 1) Uxebu TouchScroll (https://github.com/davidaurelio/TouchScroll), BSD licensed:
	 *    Copyright (c) 2010 uxebu Consulting Ltd. & Co. KG
	 *    Copyright (c) 2010 David Aurelio
	 * 2) Zynga Scroller (https://github.com/zynga/scroller), MIT licensed:
	 *    Copyright 2011, Zynga Inc.
	 *    Copyright 2011, Deutsche Telekom AG
	 *
	 * Includes CubicBezier:
	 *
	 * Copyright (C) 2008 Apple Inc. All Rights Reserved.
	 * Copyright (C) 2010 David Aurelio. All Rights Reserved.
	 * Copyright (C) 2010 uxebu Consulting Ltd. & Co. KG. All Rights Reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions
	 * are met:
	 * 1. Redistributions of source code must retain the above copyright
	 *    notice, this list of conditions and the following disclaimer.
	 * 2. Redistributions in binary form must reproduce the above copyright
	 *    notice, this list of conditions and the following disclaimer in the
	 *    documentation and/or other materials provided with the distribution.
	 *
	 * THIS SOFTWARE IS PROVIDED BY APPLE INC., DAVID AURELIO, AND UXEBU
	 * CONSULTING LTD. & CO. KG ``AS IS'' AND ANY EXPRESS OR IMPLIED
	 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
	 * IN NO EVENT SHALL APPLE INC. OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
	 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
	 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 *
	 * @copyright The Financial Times Ltd [All rights reserved]
	 * @codingstandard ftlabs-jslint
	 * @version 0.6.2
	 *//**
	 * @license FTScroller is (c) 2012 The Financial Times Ltd [All rights reserved] and licensed under the MIT license.
	 *
	 * Inspired by Uxebu TouchScroll, (c) 2010 uxebu Consulting Ltd. & Co. KG and David Aurelio, which is BSD licensed (https://github.com/davidaurelio/TouchScroll)
	 * Inspired by Zynga Scroller, (c) 2011 Zynga Inc and Deutsche Telekom AG, which is MIT licensed (https://github.com/zynga/scroller)
	 * Includes CubicBezier, (c) 2008 Apple Inc [All rights reserved], (c) 2010 David Aurelio and uxebu Consulting Ltd. & Co. KG. [All rights reserved], which is 2-clause BSD licensed (see above or https://github.com/davidaurelio/TouchScroll).
	 *//*jslint nomen: true, vars: true, browser: true, continue: true, white: true*//*globals FTScrollerOptions*/var _FTScroller,CubicBezier;(function(){'use strict';// Determine the browser engine and prefix, trying to use the unprefixed version where available.
	var _vendorCSSPrefix,_vendorStylePropertyPrefix,_vendorTransformLookup,_pointerEventsPrefixed,_setPointerCapture,_releasePointerCapture,_lostPointerCapture,_trackPointerEvents,_pointerTypeTouch;if(document.createElement('div').style.transform!==undefined){_vendorCSSPrefix='';_vendorStylePropertyPrefix='';_vendorTransformLookup='transform';}else if(window.opera&&Object.prototype.toString.call(window.opera)==='[object Opera]'){_vendorCSSPrefix='-o-';_vendorStylePropertyPrefix='O';_vendorTransformLookup='OTransform';}else if(document.documentElement.style.MozTransform!==undefined){_vendorCSSPrefix='-moz-';_vendorStylePropertyPrefix='Moz';_vendorTransformLookup='MozTransform';}else if(document.documentElement.style.webkitTransform!==undefined){_vendorCSSPrefix='-webkit-';_vendorStylePropertyPrefix='webkit';_vendorTransformLookup='-webkit-transform';}else if(typeof navigator.cpuClass==='string'){_vendorCSSPrefix='-ms-';_vendorStylePropertyPrefix='ms';_vendorTransformLookup='-ms-transform';}// Pointer Events are unprefixed in IE11
	if('pointerEnabled'in window.navigator){_pointerEventsPrefixed=false;_trackPointerEvents=window.navigator.pointerEnabled;_setPointerCapture='setPointerCapture';_releasePointerCapture='releasePointerCapture';_lostPointerCapture='lostpointercapture';_pointerTypeTouch='touch';}else if('msPointerEnabled'in window.navigator){_pointerEventsPrefixed=true;_trackPointerEvents=window.navigator.msPointerEnabled;_setPointerCapture='msSetPointerCapture';_releasePointerCapture='msReleasePointerCapture';_lostPointerCapture='MSLostPointerCapture';_pointerTypeTouch=2;// PointerEvent.MSPOINTER_TYPE_TOUCH = 2 in IE10
	}// Global flag to determine if any scroll is currently active.  This prevents
	// issues when using multiple scrollers, particularly when they're nested.
	var _ftscrollerMoving=false;// Determine whether pointer events or touch events can be used
	var _trackTouchEvents=!_trackPointerEvents;// Determine whether to use modern hardware acceleration rules or dynamic/toggleable rules.
	// Certain older browsers - particularly Android browsers - have problems with hardware
	// acceleration, so being able to toggle the behaviour dynamically via a CSS cascade is desirable.
	var _useToggleableHardwareAcceleration=false;if('hasOwnProperty'in window){_useToggleableHardwareAcceleration=!window.hasOwnProperty('ArrayBuffer');}// Feature detection
	var _canClearSelection=window.Selection&&window.Selection.prototype.removeAllRanges;// If hardware acceleration is using the standard path, but perspective doesn't seem to be supported,
	// 3D transforms likely aren't supported either
	if(!_useToggleableHardwareAcceleration&&document.createElement('div').style[_vendorStylePropertyPrefix+(_vendorStylePropertyPrefix?'P':'p')+'erspective']===undefined){_useToggleableHardwareAcceleration=true;}// Style prefixes
	var _transformProperty=_vendorStylePropertyPrefix+(_vendorStylePropertyPrefix?'T':'t')+'ransform';var _transitionProperty=_vendorStylePropertyPrefix+(_vendorStylePropertyPrefix?'T':'t')+'ransition';var _translateRulePrefix=_useToggleableHardwareAcceleration?'translate(':'translate3d(';var _transformPrefixes={x:'',y:'0,'};var _transformSuffixes={x:',0'+(_useToggleableHardwareAcceleration?')':',0)'),y:_useToggleableHardwareAcceleration?')':',0)'};// Constants.  Note that the bezier curve should be changed along with the friction!
	var _kFriction=0.998;var _kMinimumSpeed=0.01;// Create a global stylesheet to set up stylesheet rules and track dynamic entries
	(function(){var stylesheetContainerNode=document.getElementsByTagName('head')[0]||document.documentElement;var newStyleNode=document.createElement('style');var hardwareAccelerationRule;var _styleText;newStyleNode.type='text/css';// Determine the hardware acceleration logic to use
	if(_useToggleableHardwareAcceleration){hardwareAccelerationRule=_vendorCSSPrefix+'transform-style: preserve-3d;';}else{hardwareAccelerationRule=_vendorCSSPrefix+'transform: translateZ(0);';}// Add our rules
	_styleText=['.ftscroller_container { overflow: hidden; position: relative; max-height: 100%; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); -ms-touch-action: none }','.ftscroller_hwaccelerated { '+hardwareAccelerationRule+' }','.ftscroller_x, .ftscroller_y { position: relative; min-width: 100%; min-height: 100%; overflow: hidden }','.ftscroller_x { display: inline-block }','.ftscroller_scrollbar { pointer-events: none; position: absolute; width: 5px; height: 5px; border: 1px solid rgba(255, 255, 255, 0.3); -webkit-border-radius: 3px; border-radius: 6px; opacity: 0; '+_vendorCSSPrefix+'transition: opacity 350ms; z-index: 10; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box }','.ftscroller_scrollbarx { bottom: 2px; left: 2px }','.ftscroller_scrollbary { right: 2px; top: 2px }','.ftscroller_scrollbarinner { height: 100%; background: #000; -webkit-border-radius: 2px; border-radius: 4px / 6px }','.ftscroller_scrollbar.active { opacity: 0.5; '+_vendorCSSPrefix+'transition: none; -o-transition: all 0 none }'];if(newStyleNode.styleSheet){newStyleNode.styleSheet.cssText=_styleText.join('\n');}else{newStyleNode.appendChild(document.createTextNode(_styleText.join('\n')));}// Add the stylesheet
	stylesheetContainerNode.insertBefore(newStyleNode,stylesheetContainerNode.firstChild);})();/**
		 * Master constructor for the scrolling function, including which element to
		 * construct the scroller in, and any scrolling options.
		 * Note that app-wide options can also be set using a global FTScrollerOptions
		 * object.
		 */_FTScroller=function FTScroller(domNode,options){var key;var destroy,setSnapSize,scrollTo,scrollBy,updateDimensions,addEventListener,removeEventListener,setDisabledInputMethods,_startScroll,_updateScroll,_endScroll,_finalizeScroll,_interruptScroll,_flingScroll,_snapScroll,_getSnapPositionForIndexes,_getSnapIndexForPosition,_constrainAndRenderTargetScrollPosition,_limitToBounds,_initializeDOM,_existingDOMValid,_domChanged,_updateDimensions,_updateScrollbarDimensions,_updateElementPosition,_updateSegments,_setAxisPosition,_getPosition,_scheduleAxisPosition,_fireEvent,_childFocused,_modifyDistanceBeyondBounds,_distancesBeyondBounds,_startAnimation,_scheduleRender,_cancelAnimation,_addEventHandlers,_removeEventHandlers,_resetEventHandlers,_onTouchStart,_onTouchMove,_onTouchEnd,_onMouseDown,_onMouseMove,_onMouseUp,_onPointerDown,_onPointerMove,_onPointerUp,_onPointerCancel,_onPointerCaptureEnd,_onClick,_onMouseScroll,_captureInput,_releaseInputCapture,_getBoundingRect;/* Note that actual object instantiation occurs at the end of the closure to avoid jslint errors *//*                         Options                       */var _instanceOptions={// Whether to display scrollbars as appropriate
	scrollbars:true,// Enable scrolling on the X axis if content is available
	scrollingX:true,// Enable scrolling on the Y axis if content is available
	scrollingY:true,// The initial movement required to trigger a scroll, in pixels; this is the point at which
	// the scroll is exclusive to this particular FTScroller instance.
	scrollBoundary:1,// The initial movement required to trigger a visual indication that scrolling is occurring,
	// in pixels.  This is enforced to be less than or equal to the scrollBoundary, and is used to
	// define when the scroller starts drawing changes in response to an input, even if the scroll
	// is not treated as having begun/locked yet.
	scrollResponseBoundary:1,// Whether to always enable scrolling, even if the content of the scroller does not
	// require the scroller to function.  This makes the scroller behave more like an
	// element set to "overflow: scroll", with bouncing always occurring if enabled.
	alwaysScroll:false,// The content width to use when determining scroller dimensions.  If this
	// is false, the width will be detected based on the actual content.
	contentWidth:undefined,// The content height to use when determining scroller dimensions.  If this
	// is false, the height will be detected based on the actual content.
	contentHeight:undefined,// Enable snapping of content to 'pages' or a pixel grid
	snapping:false,// Define the horizontal interval of the pixel grid; snapping must be enabled for this to
	// take effect.  If this is not defined, snapping will use intervals based on container size.
	snapSizeX:undefined,// Define the vertical interval of the pixel grid; snapping must be enabled for this to
	// take effect.  If this is not defined, snapping will use intervals based on container size.
	snapSizeY:undefined,// Control whether snapping should be curtailed to only ever flick to the next page
	// and not beyond.  Snapping needs to be enabled for this to take effect.
	singlePageScrolls:false,// Allow scroll bouncing and elasticity near the ends and grid
	bouncing:true,// Allow a fast scroll to continue with momentum when released
	flinging:true,// Automatically detects changes to the contained markup and
	// updates its dimensions whenever the content changes. This is
	// set to false if a contentWidth or contentHeight are supplied.
	updateOnChanges:true,// Automatically catches changes to the window size and updates
	// its dimensions.
	updateOnWindowResize:false,// The alignment to use if the content is smaller than the container;
	// this also applies to initial positioning of scrollable content.
	// Valid alignments are -1 (top or left), 0 (center), and 1 (bottom or right).
	baseAlignments:{x:-1,y:-1},// Whether to use a window scroll flag, eg window.foo, to control whether
	// to allow scrolling to start or now.  If the window flag is set to true,
	// this element will not start scrolling; this element will also toggle
	// the variable while scrolling
	windowScrollingActiveFlag:undefined,// Instead of always using translate3d for transforms, a mix of translate3d
	// and translate with a hardware acceleration class used to trigger acceleration
	// is used; this is to allow CSS inheritance to be used to allow dynamic
	// disabling of backing layers on older platforms.
	hwAccelerationClass:'ftscroller_hwaccelerated',// While use of requestAnimationFrame is highly recommended on platforms
	// which support it, it can result in the animation being a further half-frame
	// behind the input method, increasing perceived lag slightly.  To disable this,
	// set this property to false.
	enableRequestAnimationFrameSupport:true,// Set the maximum time (ms) that a fling can take to complete; if
	// this is not set, flings will complete instantly
	maxFlingDuration:1000,// Whether to disable any input methods; on some multi-input devices
	// custom behaviour may be desired for some scrollers.  Use with care!
	disabledInputMethods:{mouse:false,touch:false,scroll:false,pointer:false,focus:false},// Define a scrolling class to be added to the scroller container
	// when scrolling is active.  Note that this can cause a relayout on
	// scroll start if defined, but allows custom styling in response to scrolls
	scrollingClassName:undefined,// Bezier curves defining the feel of the fling (momentum) deceleration,
	// the bounce decleration deceleration (as a fling exceeds the bounds),
	// and the bounce bezier (used for bouncing back).
	flingBezier:new CubicBezier(0.103,0.389,0.307,0.966),bounceDecelerationBezier:new CubicBezier(0,0.5,0.5,1),bounceBezier:new CubicBezier(0.7,0,0.9,0.6),// If the scroller is constrained to an x axis, convert y scroll to allow single-axis scroll
	// wheels to scroll constrained content.
	invertScrollWheel:true};/*                     Local variables                   */// Cache the DOM node and set up variables for other nodes
	var _publicSelf;var _self=this;var _scrollableMasterNode=domNode;var _containerNode;var _contentParentNode;var _scrollNodes={x:null,y:null};var _scrollbarNodes={x:null,y:null};// Dimensions of the container element and the content element
	var _metrics={container:{x:null,y:null},content:{x:null,y:null,rawX:null,rawY:null},scrollEnd:{x:null,y:null}};// Snapping details
	var _snapGridSize={x:false,y:false,userX:false,userY:false};var _snapIndex={x:0,y:0};var _baseSegment={x:0,y:0};var _activeSegment={x:0,y:0};// Track the identifier of any input being tracked
	var _inputIdentifier=false;var _inputIndex=0;var _inputCaptured=false;// Current scroll positions and tracking
	var _isScrolling=false;var _isDisplayingScroll=false;var _isAnimating=false;var _baseScrollPosition={x:0,y:0};var _lastScrollPosition={x:0,y:0};var _targetScrollPosition={x:0,y:0};var _scrollAtExtremity={x:null,y:null};var _preventClick=false;var _timeouts=[];var _hasBeenScrolled=false;// Gesture details
	var _baseScrollableAxes={};var _scrollableAxes={x:true,y:true};var _gestureStart={x:0,y:0,t:0};var _cumulativeScroll={x:0,y:0};var _eventHistory=[];// Allow certain events to be debounced
	var _domChangeDebouncer=false;var _scrollWheelEndDebouncer=false;// Performance switches on browsers supporting requestAnimationFrame
	var _animationFrameRequest=false;var _reqAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||false;var _cancelAnimationFrame=window.cancelAnimationFrame||window.cancelRequestAnimationFrame||window.mozCancelAnimationFrame||window.mozCancelRequestAnimationFrame||window.webkitCancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.msCancelAnimationFrame||window.msCancelRequestAnimationFrame||false;// Event listeners
	var _eventListeners={'scrollstart':[],'scroll':[],'scrollend':[],'segmentwillchange':[],'segmentdidchange':[],'reachedstart':[],'reachedend':[],'scrollinteractionend':[]};// MutationObserver instance, when supported and if DOM change sniffing is enabled
	var _mutationObserver;/* Parsing supplied options */// Override default instance options with global - or closure'd - options
	if((typeof FTScrollerOptions==='undefined'?'undefined':(0,_typeof3.default)(FTScrollerOptions))==='object'&&FTScrollerOptions){for(key in FTScrollerOptions){if(FTScrollerOptions.hasOwnProperty(key)&&_instanceOptions.hasOwnProperty(key)){_instanceOptions[key]=FTScrollerOptions[key];}}}// Override default and global options with supplied options
	if(options){for(key in options){if(options.hasOwnProperty(key)){// If a deprecated flag was passed in, warn, and convert to the new flag name
	if('paginatedSnap'===key){console.warn('FTScroller: "paginatedSnap" is deprecated; converting to "singlePageScrolls"');_instanceOptions.singlePageScrolls=options.paginatedSnap;continue;}if(_instanceOptions.hasOwnProperty(key)){_instanceOptions[key]=options[key];}}}// If snap grid size options were supplied, store them
	if(options.hasOwnProperty('snapSizeX')&&!isNaN(options.snapSizeX)){_snapGridSize.userX=_snapGridSize.x=options.snapSizeX;}if(options.hasOwnProperty('snapSizeY')&&!isNaN(options.snapSizeY)){_snapGridSize.userY=_snapGridSize.y=options.snapSizeY;}// If content width and height were defined, disable updateOnChanges for performance
	if(options.contentWidth&&options.contentHeight){options.updateOnChanges=false;}}// Validate the scroll response parameter
	_instanceOptions.scrollResponseBoundary=Math.min(_instanceOptions.scrollBoundary,_instanceOptions.scrollResponseBoundary);// Update base scrollable axes
	if(_instanceOptions.scrollingX){_baseScrollableAxes.x=true;}if(_instanceOptions.scrollingY){_baseScrollableAxes.y=true;}// Only enable animation frame support if the instance options permit it
	_reqAnimationFrame=_instanceOptions.enableRequestAnimationFrameSupport&&_reqAnimationFrame;_cancelAnimationFrame=_reqAnimationFrame&&_cancelAnimationFrame;/*                    Scoped Functions                   *//**
			 * Unbinds all event listeners to prevent circular references preventing items
			 * from being deallocated, and clean up references to dom elements. Pass in
			 * "removeElements" to also remove FTScroller DOM elements for special reuse cases.
			 */destroy=function destroy(removeElements){var i,l;_removeEventHandlers();_cancelAnimation();if(_domChangeDebouncer){window.clearTimeout(_domChangeDebouncer);_domChangeDebouncer=false;}for(i=0,l=_timeouts.length;i<l;i=i+1){window.clearTimeout(_timeouts[i]);}_timeouts.length=0;// Destroy DOM elements if required
	if(removeElements&&_scrollableMasterNode){while(_contentParentNode.firstChild){_scrollableMasterNode.appendChild(_contentParentNode.firstChild);}_scrollableMasterNode.removeChild(_containerNode);}_scrollableMasterNode=null;_containerNode=null;_contentParentNode=null;_scrollNodes.x=null;_scrollNodes.y=null;_scrollbarNodes.x=null;_scrollbarNodes.y=null;for(i in _eventListeners){if(_eventListeners.hasOwnProperty(i)){_eventListeners[i].length=0;}}// If this is currently tracked as a scrolling instance, clear the flag
	if(_ftscrollerMoving&&_ftscrollerMoving===_self){_ftscrollerMoving=false;if(_instanceOptions.windowScrollingActiveFlag){window[_instanceOptions.windowScrollingActiveFlag]=false;}}};/**
			 * Configures the snapping boundaries within the scrolling element if
			 * snapping is active.  If this is never called, snapping defaults to
			 * using the bounding box, eg page-at-a-time.
			 */setSnapSize=function setSnapSize(width,height){_snapGridSize.userX=width;_snapGridSize.userY=height;_snapGridSize.x=width;_snapGridSize.y=height;// Ensure the content dimensions conform to the grid
	_metrics.content.x=Math.ceil(_metrics.content.rawX/width)*width;_metrics.content.y=Math.ceil(_metrics.content.rawY/height)*height;_metrics.scrollEnd.x=_metrics.container.x-_metrics.content.x;_metrics.scrollEnd.y=_metrics.container.y-_metrics.content.y;_updateScrollbarDimensions();// Snap to the new grid if necessary
	_snapScroll();_updateSegments(true);};/**
			 * Scroll to a supplied position, including whether or not to animate the
			 * scroll and how fast to perform the animation (pass in true to select a
			 * dynamic duration).  The inputs will be constrained to bounds and snapped.
			 * If false is supplied for a position, that axis will not be scrolled.
			 */scrollTo=function scrollTo(left,top,animationDuration){var targetPosition,duration,positions,axis,maxDuration=0,scrollPositionsToApply={};// If a manual scroll is in progress, cancel it
	_endScroll(Date.now());// Move supplied coordinates into an object for iteration, also inverting the values into
	// our coordinate system
	positions={x:-left,y:-top};for(axis in _baseScrollableAxes){if(_baseScrollableAxes.hasOwnProperty(axis)){targetPosition=positions[axis];if(targetPosition===false){continue;}// Constrain to bounds
	targetPosition=Math.min(0,Math.max(_metrics.scrollEnd[axis],targetPosition));// Snap if appropriate
	if(_instanceOptions.snapping&&_snapGridSize[axis]){targetPosition=Math.round(targetPosition/_snapGridSize[axis])*_snapGridSize[axis];}// Get a duration
	duration=animationDuration||0;if(duration===true){duration=Math.sqrt(Math.abs(_baseScrollPosition[axis]-targetPosition))*20;}// Trigger the position change
	_setAxisPosition(axis,targetPosition,duration);scrollPositionsToApply[axis]=targetPosition;maxDuration=Math.max(maxDuration,duration);}}// If the scroll had resulted in a change in position, perform some additional actions:
	if(_baseScrollPosition.x!==positions.x||_baseScrollPosition.y!==positions.y){// Mark a scroll as having ever occurred
	_hasBeenScrolled=true;// If an animation duration is present, fire a scroll start event and a
	// scroll event for any listeners to act on
	_fireEvent('scrollstart',_getPosition());_fireEvent('scroll',_getPosition());}if(maxDuration){_timeouts.push(setTimeout(function(){var anAxis;for(anAxis in scrollPositionsToApply){if(scrollPositionsToApply.hasOwnProperty(anAxis)){_lastScrollPosition[anAxis]=scrollPositionsToApply[anAxis];}}_finalizeScroll();},maxDuration));}else{_finalizeScroll();}};/**
			 * Alter the current scroll position, including whether or not to animate
			 * the scroll and how fast to perform the animation (pass in true to
			 * select a dynamic duration).  The inputs will be checked against the
			 * current position.
			 */scrollBy=function scrollBy(horizontal,vertical,animationDuration){// Wrap the scrollTo function for simplicity
	scrollTo(parseFloat(horizontal)-_baseScrollPosition.x,parseFloat(vertical)-_baseScrollPosition.y,animationDuration);};/**
			 * Provide a public method to detect changes in dimensions for either the content or the
			 * container.
			 */updateDimensions=function updateDimensions(contentWidth,contentHeight,ignoreSnapScroll){options.contentWidth=contentWidth||options.contentWidth;options.contentHeight=contentHeight||options.contentHeight;// Currently just wrap the private API
	_updateDimensions(!!ignoreSnapScroll);};/**
			 * Add an event handler for a supported event.  Current events include:
			 * scroll - fired whenever the scroll position changes
			 * scrollstart - fired when a scroll movement starts
			 * scrollend - fired when a scroll movement ends
			 * segmentwillchange - fired whenever the segment changes, including during scrolling
			 * segmentdidchange - fired when a segment has conclusively changed, after scrolling.
			 */addEventListener=function addEventListener(eventname,eventlistener){// Ensure this is a valid event
	if(!_eventListeners.hasOwnProperty(eventname)){return false;}// Add the listener
	_eventListeners[eventname].push(eventlistener);return true;};/**
			 * Remove an event handler for a supported event.  The listener must be exactly the same as
			 * an added listener to be removed.
			 */removeEventListener=function removeEventListener(eventname,eventlistener){var i;// Ensure this is a valid event
	if(!_eventListeners.hasOwnProperty(eventname)){return false;}for(i=_eventListeners[eventname].length;i>=0;i=i-1){if(_eventListeners[eventname][i]===eventlistener){_eventListeners[eventname].splice(i,1);}}return true;};/**
			 * Set the input methods to disable. No inputs methods are disabled by default.
			 * (object, default { mouse: false, touch: false, scroll: false, pointer: false, focus: false })
			 */setDisabledInputMethods=function setDisabledInputMethods(disabledInputMethods){var i,changed;for(i in _instanceOptions.disabledInputMethods){disabledInputMethods[i]=!!disabledInputMethods[i];if(_instanceOptions.disabledInputMethods[i]!==disabledInputMethods[i])changed=true;_instanceOptions.disabledInputMethods[i]=disabledInputMethods[i];}if(changed){_resetEventHandlers();}};/**
			 * Start a scroll tracking input - this could be mouse, webkit-style touch,
			 * or ms-style pointer events.
			 */_startScroll=function _startScroll(inputX,inputY,inputTime,rawEvent){var triggerScrollInterrupt=_isAnimating;// Opera fix
	if(inputTime<=0){inputTime=Date.now();}// If a window scrolling flag is set, and evaluates to true, don't start checking touches
	if(_instanceOptions.windowScrollingActiveFlag&&window[_instanceOptions.windowScrollingActiveFlag]){return false;}// If an animation is in progress, stop the scroll.
	if(triggerScrollInterrupt){_interruptScroll();}else{// Allow clicks again, but only if a scroll was not interrupted
	_preventClick=false;}// Store the initial event coordinates
	_gestureStart.x=inputX;_gestureStart.y=inputY;_gestureStart.t=inputTime;_targetScrollPosition.x=_lastScrollPosition.x;_targetScrollPosition.y=_lastScrollPosition.y;// Clear event history and add the start touch
	_eventHistory.length=0;_eventHistory.push({x:inputX,y:inputY,t:inputTime});if(triggerScrollInterrupt){_updateScroll(inputX,inputY,inputTime,rawEvent,triggerScrollInterrupt);}return true;};/**
			 * Continue a scroll as a result of an updated position
			 */_updateScroll=function _updateScroll(inputX,inputY,inputTime,rawEvent,scrollInterrupt){var axis,otherScrollerActive,distancesBeyondBounds;var initialScroll=false;var gesture={x:inputX-_gestureStart.x,y:inputY-_gestureStart.y};// Opera fix
	if(inputTime<=0){inputTime=Date.now();}// Update base target positions
	_targetScrollPosition.x=_baseScrollPosition.x+gesture.x;_targetScrollPosition.y=_baseScrollPosition.y+gesture.y;// If scrolling has not yet locked to this scroller, check whether to stop scrolling
	if(!_isScrolling){// Check the internal flag to determine if another FTScroller is scrolling
	if(_ftscrollerMoving&&_ftscrollerMoving!==_self){otherScrollerActive=true;}// Otherwise, check the window scrolling flag to see if anything else has claimed scrolling
	else if(_instanceOptions.windowScrollingActiveFlag&&window[_instanceOptions.windowScrollingActiveFlag]){otherScrollerActive=true;}// If another scroller was active, clean up and stop processing.
	if(otherScrollerActive){_releaseInputCapture();_inputIdentifier=false;if(_isDisplayingScroll){_cancelAnimation();if(!_snapScroll(true)){_finalizeScroll(true);}}return;}}// If not yet displaying a scroll, determine whether that triggering boundary
	// has been exceeded
	if(!_isDisplayingScroll){// Determine scroll distance beyond bounds
	distancesBeyondBounds=_distancesBeyondBounds(_targetScrollPosition);// Determine whether to prevent the default scroll event - if the scroll could still
	// be triggered, prevent the default to avoid problems (particularly on PlayBook)
	if(_instanceOptions.bouncing||scrollInterrupt||_scrollableAxes.x&&gesture.x&&distancesBeyondBounds.x<0||_scrollableAxes.y&&gesture.y&&distancesBeyondBounds.y<0){rawEvent.preventDefault();}// Check scrolled distance against the boundary limit to see if scrolling can be triggered.
	// If the scroll has been interrupted, trigger at once
	if(!scrollInterrupt&&(!_scrollableAxes.x||Math.abs(gesture.x)<_instanceOptions.scrollResponseBoundary)&&(!_scrollableAxes.y||Math.abs(gesture.y)<_instanceOptions.scrollResponseBoundary)){return;}// If bouncing is disabled, and already at an edge and scrolling beyond the edge, ignore the scroll for
	// now - this allows other scrollers to claim if appropriate, allowing nicer nested scrolls.
	if(!_instanceOptions.bouncing&&!scrollInterrupt&&(!_scrollableAxes.x||!gesture.x||distancesBeyondBounds.x>0)&&(!_scrollableAxes.y||!gesture.y||distancesBeyondBounds.y>0)){// Prevent the original click now that scrolling would be triggered
	_preventClick=true;return;}// Trigger the start of visual scrolling
	_startAnimation();_isDisplayingScroll=true;_hasBeenScrolled=true;_isAnimating=true;initialScroll=true;}else{// Prevent the event default.  It is safe to call this in IE10 because the event is never
	// a window.event, always a "true" event.
	rawEvent.preventDefault();}// If not yet locked to a scroll, determine whether to do so
	if(!_isScrolling){// If the gesture distance has exceeded the scroll lock distance, or snapping is active
	// and the scroll has been interrupted, enter exclusive scrolling.
	if(scrollInterrupt&&_instanceOptions.snapping||_scrollableAxes.x&&Math.abs(gesture.x)>=_instanceOptions.scrollBoundary||_scrollableAxes.y&&Math.abs(gesture.y)>=_instanceOptions.scrollBoundary){_isScrolling=true;_preventClick=true;_ftscrollerMoving=_self;if(_instanceOptions.windowScrollingActiveFlag){window[_instanceOptions.windowScrollingActiveFlag]=_self;}_fireEvent('scrollstart',_getPosition());}}// Capture pointer if necessary
	if(_isScrolling){_captureInput();}// Cancel text selections while dragging a cursor
	if(_canClearSelection){window.getSelection().removeAllRanges();}// Ensure the target scroll position is affected by bounds and render if needed
	_constrainAndRenderTargetScrollPosition();// To aid render/draw coalescing, perform other one-off actions here
	if(initialScroll){if(gesture.x>0){_baseScrollPosition.x-=_instanceOptions.scrollResponseBoundary;}else if(gesture.x<0){_baseScrollPosition.x+=_instanceOptions.scrollResponseBoundary;}if(gesture.y>0){_baseScrollPosition.y-=_instanceOptions.scrollResponseBoundary;}else if(gesture.y<0){_baseScrollPosition.y+=_instanceOptions.scrollResponseBoundary;}_targetScrollPosition.x=_baseScrollPosition.x+gesture.x;_targetScrollPosition.y=_baseScrollPosition.y+gesture.y;if(_instanceOptions.scrollingClassName){_containerNode.className+=' '+_instanceOptions.scrollingClassName;}if(_instanceOptions.scrollbars){for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){_scrollbarNodes[axis].className+=' active';}}}}// Add an event to the event history, keeping it around twenty events long
	_eventHistory.push({x:inputX,y:inputY,t:inputTime});if(_eventHistory.length>30){_eventHistory.splice(0,15);}};/**
			 * Complete a scroll with a final event time if available (it may
			 * not be, depending on the input type); this may continue the scroll
			 * with a fling and/or bounceback depending on options.
			 */_endScroll=function _endScroll(inputTime,rawEvent){_releaseInputCapture();_inputIdentifier=false;_cancelAnimation();_fireEvent('scrollinteractionend',{});if(!_isScrolling){if(!_snapScroll(true)&&_isDisplayingScroll){_finalizeScroll(true);}return;}// Modify the last movement event to include the end event time
	_eventHistory[_eventHistory.length-1].t=inputTime;// Update flags
	_isScrolling=false;_isDisplayingScroll=false;_ftscrollerMoving=false;if(_instanceOptions.windowScrollingActiveFlag){window[_instanceOptions.windowScrollingActiveFlag]=false;}// Stop the event default.  It is safe to call this in IE10 because
	// the event is never a window.event, always a "true" event.
	if(rawEvent){rawEvent.preventDefault();}// Trigger a fling or bounceback if necessary
	if(!_flingScroll()&&!_snapScroll()){_finalizeScroll();}};/**
			 * Remove the scrolling class, cleaning up display.
			 */_finalizeScroll=function _finalizeScroll(scrollCancelled){var i,l,axis,scrollEvent,scrollRegex;_isAnimating=false;_isDisplayingScroll=false;// Remove scrolling class if set
	if(_instanceOptions.scrollingClassName){scrollRegex=new RegExp('(?:^|\\s)'+_instanceOptions.scrollingClassName+'(?!\\S)','g');_containerNode.className=_containerNode.className.replace(scrollRegex,'');}if(_instanceOptions.scrollbars){for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){_scrollbarNodes[axis].className=_scrollbarNodes[axis].className.replace(/ ?active/g,'');}}}// Store final position if scrolling occurred
	_baseScrollPosition.x=_lastScrollPosition.x;_baseScrollPosition.y=_lastScrollPosition.y;scrollEvent=_getPosition();if(!scrollCancelled){_fireEvent('scroll',scrollEvent);_updateSegments(true);}// Always fire the scroll end event, including an argument indicating whether
	// the scroll was cancelled
	scrollEvent.cancelled=scrollCancelled;_fireEvent('scrollend',scrollEvent);// Restore transitions
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){_scrollNodes[axis].style[_transitionProperty]='';if(_instanceOptions.scrollbars){_scrollbarNodes[axis].style[_transitionProperty]='';}}}// Clear any remaining timeouts
	for(i=0,l=_timeouts.length;i<l;i=i+1){window.clearTimeout(_timeouts[i]);}_timeouts.length=0;};/**
			 * Interrupt a current scroll, allowing a start scroll during animation to trigger a new scroll
			 */_interruptScroll=function _interruptScroll(){var axis,i,l;_isAnimating=false;// Update the stored base position
	_updateElementPosition();// Ensure the parsed positions are set, also clearing transitions
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){_setAxisPosition(axis,_baseScrollPosition[axis],16,_instanceOptions.bounceDecelerationBezier);}}// Update segment tracking if snapping is active
	_updateSegments(false);// Clear any remaining timeouts
	for(i=0,l=_timeouts.length;i<l;i=i+1){window.clearTimeout(_timeouts[i]);}_timeouts.length=0;};/**
			 * Determine whether a scroll fling or bounceback is required, and set up the styles and
			 * timeouts required.
			 */_flingScroll=function _flingScroll(){var i,axis,movementTime,movementSpeed,lastPosition,comparisonPosition,flingDuration,flingDistance,flingPosition,bounceDelay,bounceDistance,bounceDuration,bounceTarget,boundsBounce,modifiedDistance,flingBezier,timeProportion,boundsCrossDelay,flingStartSegment,beyondBoundsFlingDistance,baseFlingComponent;var maxAnimationTime=0;var moveRequired=false;var scrollPositionsToApply={};// If we only have the start event available, or flinging is disabled,
	// or the scroll was triggered by a scrollwheel, no action required.
	if(_eventHistory.length===1||!_instanceOptions.flinging||_inputIdentifier==='scrollwheel'){return false;}for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){bounceDuration=350;bounceDistance=0;boundsBounce=false;bounceTarget=false;boundsCrossDelay=undefined;// Re-set a default bezier curve for the animation for potential modification
	flingBezier=_instanceOptions.flingBezier;// Get the last movement speed, in pixels per millisecond.  To do this, look at the events
	// in the last 100ms and average out the speed, using a minimum number of two points.
	lastPosition=_eventHistory[_eventHistory.length-1];comparisonPosition=_eventHistory[_eventHistory.length-2];for(i=_eventHistory.length-3;i>=0;i=i-1){if(lastPosition.t-_eventHistory[i].t>100){break;}comparisonPosition=_eventHistory[i];}// Get the last movement time.  If this is zero - as can happen with
	// some scrollwheel events on some platforms - increase it to 16ms as
	// if the movement occurred over a single frame at 60fps.
	movementTime=lastPosition.t-comparisonPosition.t;if(!movementTime){movementTime=16;}// Derive the movement speed
	movementSpeed=(lastPosition[axis]-comparisonPosition[axis])/movementTime;// If there is little speed, no further action required except for a bounceback, below.
	if(Math.abs(movementSpeed)<_kMinimumSpeed){flingDuration=0;flingDistance=0;}else{/* Calculate the fling duration.  As per TouchScroll, the speed at any particular
							point in time can be calculated as:
								{ speed } = { initial speed } * ({ friction } to the power of { duration })
							...assuming all values are in equal pixels/millisecond measurements.  As we know the
							minimum target speed, this can be altered to:
								{ duration } = log( { speed } / { initial speed } ) / log( { friction } )
							*/flingDuration=Math.log(_kMinimumSpeed/Math.abs(movementSpeed))/Math.log(_kFriction);/* Calculate the fling distance (before any bouncing or snapping).  As per
							TouchScroll, the total distance covered can be approximated by summing
							the distance per millisecond, per millisecond of duration - a divergent series,
							and so rather tricky to model otherwise!
							So using values in pixels per millisecond:
								{ distance } = { initial speed } * (1 - ({ friction } to the power
									of { duration + 1 }) / (1 - { friction })
							*/flingDistance=movementSpeed*(1-Math.pow(_kFriction,flingDuration+1))/(1-_kFriction);}// Determine a target fling position
	flingPosition=Math.floor(_lastScrollPosition[axis]+flingDistance);// If bouncing is disabled, and the last scroll position and fling position are both at a bound,
	// reset the fling position to the bound
	if(!_instanceOptions.bouncing){if(_lastScrollPosition[axis]===0&&flingPosition>0){flingPosition=0;}else if(_lastScrollPosition[axis]===_metrics.scrollEnd[axis]&&flingPosition<_lastScrollPosition[axis]){flingPosition=_lastScrollPosition[axis];}}// In single-page-scroll mode, determine the page to snap to - maximum one page
	// in either direction from the *start* page.
	if(_instanceOptions.singlePageScrolls&&_instanceOptions.snapping){flingStartSegment=-_lastScrollPosition[axis]/_snapGridSize[axis];if(_baseSegment[axis]<flingStartSegment){flingStartSegment=Math.floor(flingStartSegment);}else{flingStartSegment=Math.ceil(flingStartSegment);}// If the target position will end up beyond another page, target that page edge
	if(flingPosition>-(_baseSegment[axis]-1)*_snapGridSize[axis]){bounceDistance=flingPosition+(_baseSegment[axis]-1)*_snapGridSize[axis];}else if(flingPosition<-(_baseSegment[axis]+1)*_snapGridSize[axis]){bounceDistance=flingPosition+(_baseSegment[axis]+1)*_snapGridSize[axis];// Otherwise, if the movement speed was above the minimum velocity, continue
	// in the move direction.
	}else if(Math.abs(movementSpeed)>_kMinimumSpeed){// Determine the target segment
	if(movementSpeed<0){flingPosition=Math.floor(_lastScrollPosition[axis]/_snapGridSize[axis])*_snapGridSize[axis];}else{flingPosition=Math.ceil(_lastScrollPosition[axis]/_snapGridSize[axis])*_snapGridSize[axis];}flingDuration=Math.min(_instanceOptions.maxFlingDuration,flingDuration*(flingPosition-_lastScrollPosition[axis])/flingDistance);}// In non-paginated snapping mode, snap to the nearest grid location to the target
	}else if(_instanceOptions.snapping){bounceDistance=flingPosition-Math.round(flingPosition/_snapGridSize[axis])*_snapGridSize[axis];}// Deal with cases where the target is beyond the bounds
	if(flingPosition-bounceDistance>0){bounceDistance=flingPosition;boundsBounce=true;}else if(flingPosition-bounceDistance<_metrics.scrollEnd[axis]){bounceDistance=flingPosition-_metrics.scrollEnd[axis];boundsBounce=true;}// Amend the positions and bezier curve if necessary
	if(bounceDistance){// If the fling moves the scroller beyond the normal scroll bounds, and
	// the bounce is snapping the scroll back after the fling:
	if(boundsBounce&&_instanceOptions.bouncing&&flingDistance){flingDistance=Math.floor(flingDistance);if(flingPosition>0){beyondBoundsFlingDistance=flingPosition-Math.max(0,_lastScrollPosition[axis]);}else{beyondBoundsFlingDistance=flingPosition-Math.min(_metrics.scrollEnd[axis],_lastScrollPosition[axis]);}baseFlingComponent=flingDistance-beyondBoundsFlingDistance;// Determine the time proportion the original bound is along the fling curve
	if(!flingDistance||!flingDuration){timeProportion=0;}else{timeProportion=flingBezier._getCoordinateForT(flingBezier.getTForY((flingDistance-beyondBoundsFlingDistance)/flingDistance,1/flingDuration),flingBezier._p1.x,flingBezier._p2.x);boundsCrossDelay=timeProportion*flingDuration;}// Eighth the distance beyonds the bounds
	modifiedDistance=Math.ceil(beyondBoundsFlingDistance/8);// Further limit the bounce to half the container dimensions
	if(Math.abs(modifiedDistance)>_metrics.container[axis]/2){if(modifiedDistance<0){modifiedDistance=-Math.floor(_metrics.container[axis]/2);}else{modifiedDistance=Math.floor(_metrics.container[axis]/2);}}if(flingPosition>0){bounceTarget=0;}else{bounceTarget=_metrics.scrollEnd[axis];}// If the entire fling is a bounce, modify appropriately
	if(timeProportion===0){flingDuration=flingDuration/6;flingPosition=_lastScrollPosition[axis]+baseFlingComponent+modifiedDistance;bounceDelay=flingDuration;// Otherwise, take a new curve and add it to the timeout stack for the bounce
	}else{// The new bounce delay is the pre-boundary fling duration, plus a
	// sixth of the post-boundary fling.
	bounceDelay=(timeProportion+(1-timeProportion)/6)*flingDuration;_scheduleAxisPosition(axis,_lastScrollPosition[axis]+baseFlingComponent+modifiedDistance,(1-timeProportion)*flingDuration/6,_instanceOptions.bounceDecelerationBezier,boundsCrossDelay);// Modify the fling to match, clipping to prevent over-fling
	flingBezier=flingBezier.divideAtX(bounceDelay/flingDuration,1/flingDuration)[0];flingDuration=bounceDelay;flingPosition=_lastScrollPosition[axis]+baseFlingComponent+modifiedDistance;}// If the fling requires snapping to a snap location, and the bounce needs to
	// reverse the fling direction after the fling completes:
	}else if(flingDistance<0&&bounceDistance<flingDistance||flingDistance>0&&bounceDistance>flingDistance){// Shorten the original fling duration to reflect the bounce
	flingPosition=flingPosition-Math.floor(flingDistance/2);bounceDistance=bounceDistance-Math.floor(flingDistance/2);bounceDuration=Math.sqrt(Math.abs(bounceDistance))*50;bounceTarget=flingPosition-bounceDistance;flingDuration=350;bounceDelay=flingDuration*0.97;// If the bounce is truncating the fling, or continuing the fling on in the same
	// direction to hit the next boundary:
	}else{flingPosition=flingPosition-bounceDistance;// If there was no fling distance originally, use the bounce details
	if(!flingDistance){flingDuration=bounceDuration;// If truncating the fling at a snapping edge:
	}else if(flingDistance<0&&bounceDistance<0||flingDistance>0&&bounceDistance>0){timeProportion=flingBezier._getCoordinateForT(flingBezier.getTForY((Math.abs(flingDistance)-Math.abs(bounceDistance))/Math.abs(flingDistance),1/flingDuration),flingBezier._p1.x,flingBezier._p2.x);flingBezier=flingBezier.divideAtX(timeProportion,1/flingDuration)[0];flingDuration=Math.round(flingDuration*timeProportion);// If extending the fling to reach the next snapping boundary, no further
	// action is required.
	}bounceDistance=0;bounceDuration=0;}}// If no fling or bounce is required, continue
	if(flingPosition===_lastScrollPosition[axis]&&!bounceDistance){continue;}moveRequired=true;// Perform the fling
	_setAxisPosition(axis,flingPosition,flingDuration,flingBezier,boundsCrossDelay);// Schedule a bounce if appropriate
	if(bounceDistance&&bounceDuration){_scheduleAxisPosition(axis,bounceTarget,bounceDuration,_instanceOptions.bounceBezier,bounceDelay);}maxAnimationTime=Math.max(maxAnimationTime,bounceDistance?bounceDelay+bounceDuration:flingDuration);scrollPositionsToApply[axis]=bounceTarget===false?flingPosition:bounceTarget;}}if(moveRequired&&maxAnimationTime){_timeouts.push(setTimeout(function(){var anAxis;// Update the stored scroll position ready for finalising
	for(anAxis in scrollPositionsToApply){if(scrollPositionsToApply.hasOwnProperty(anAxis)){_lastScrollPosition[anAxis]=scrollPositionsToApply[anAxis];}}_finalizeScroll();},maxAnimationTime));}return moveRequired;};/**
			 * Bounce back into bounds if necessary, or snap to a grid location.
			 */_snapScroll=function _snapScroll(scrollCancelled){var axis;var snapDuration=scrollCancelled?100:350;var targetPosition=_lastScrollPosition;// Get the current position and see if a snap is required
	if(_instanceOptions.snapping){// Store current snap index
	_snapIndex=_getSnapIndexForPosition(targetPosition);targetPosition=_getSnapPositionForIndexes(_snapIndex,targetPosition);}targetPosition=_limitToBounds(targetPosition);var snapRequired=false;for(axis in _baseScrollableAxes){if(_baseScrollableAxes.hasOwnProperty(axis)){if(targetPosition[axis]!==_lastScrollPosition[axis]){snapRequired=true;}}}if(!snapRequired){return false;}// Perform the snap
	for(axis in _baseScrollableAxes){if(_baseScrollableAxes.hasOwnProperty(axis)){_setAxisPosition(axis,targetPosition[axis],snapDuration);}}_timeouts.push(setTimeout(function(){// Update the stored scroll position ready for finalizing
	_lastScrollPosition=targetPosition;_finalizeScroll(scrollCancelled);},snapDuration));return true;};/**
			 * Get an appropriate snap index for a supplied point.
			 */_getSnapIndexForPosition=function _getSnapIndexForPosition(coordinates){var axis;var indexes={x:0,y:0};for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)&&_snapGridSize[axis]){indexes[axis]=Math.round(coordinates[axis]/_snapGridSize[axis]);}}return indexes;};/**
			 * Get an appropriate snap point for a supplied index.
			 */_getSnapPositionForIndexes=function _getSnapPositionForIndexes(indexes,currentCoordinates){var axis;var coordinatesToReturn={x:currentCoordinates.x,y:currentCoordinates.y};for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){coordinatesToReturn[axis]=indexes[axis]*_snapGridSize[axis];}}return coordinatesToReturn;};/**
			 * Update the scroll position while scrolling is active, checking the position
			 * within bounds and rubberbanding/constraining as appropriate; also triggers a
			 * scroll position render if a requestAnimationFrame loop isn't active
			 */_constrainAndRenderTargetScrollPosition=function _constrainAndRenderTargetScrollPosition(){var axis,upperBound,lowerBound;// Update axes target positions if beyond bounds
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){// Set bounds to the left and right of the container
	upperBound=0;lowerBound=_metrics.scrollEnd[axis];if(_instanceOptions.singlePageScrolls&&_instanceOptions.snapping){// For a single-page-scroll, set the bounds to the left and right of the
	// current segment
	upperBound=Math.min(upperBound,-(_baseSegment[axis]-1)*_snapGridSize[axis]);lowerBound=Math.max(lowerBound,-(_baseSegment[axis]+1)*_snapGridSize[axis]);}if(_targetScrollPosition[axis]>upperBound){_targetScrollPosition[axis]=upperBound+_modifyDistanceBeyondBounds(_targetScrollPosition[axis]-upperBound,axis);}else if(_targetScrollPosition[axis]<lowerBound){_targetScrollPosition[axis]=lowerBound+_modifyDistanceBeyondBounds(_targetScrollPosition[axis]-lowerBound,axis);}}}// Trigger a scroll position update for platforms not using requestAnimationFrames
	if(!_reqAnimationFrame){_scheduleRender();}};/**
			 * Limit coordinates within the bounds of the scrollable viewport.
			 */_limitToBounds=function _limitToBounds(coordinates){var axis;var coordinatesToReturn={x:coordinates.x,y:coordinates.y};for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){// If the coordinate is beyond the edges of the scroller, use the closest edge
	if(coordinates[axis]>0){coordinatesToReturn[axis]=0;continue;}if(coordinates[axis]<_metrics.scrollEnd[axis]){coordinatesToReturn[axis]=_metrics.scrollEnd[axis];continue;}}}return coordinatesToReturn;};/**
			 * Sets up the DOM around the node to be scrolled.
			 */_initializeDOM=function _initializeDOM(){var offscreenFragment,offscreenNode,scrollYParent;// Check whether the DOM is already present and valid - if so, no further action required.
	if(_existingDOMValid()){return;}// Otherwise, the DOM needs to be created inside the originally supplied node.  The node
	// has a container inserted inside it - which acts as an anchor element with constraints -
	// and then the scrollable layers as appropriate.
	// Create a new document fragment to temporarily hold the scrollable content
	offscreenFragment=_scrollableMasterNode.ownerDocument.createDocumentFragment();offscreenNode=document.createElement('DIV');offscreenFragment.appendChild(offscreenNode);// Drop in the wrapping HTML
	offscreenNode.innerHTML=_FTScroller.prototype.getPrependedHTML(!_instanceOptions.scrollingX,!_instanceOptions.scrollingY,_instanceOptions.hwAccelerationClass)+_FTScroller.prototype.getAppendedHTML(!_instanceOptions.scrollingX,!_instanceOptions.scrollingY,_instanceOptions.hwAccelerationClass,_instanceOptions.scrollbars);// Update references as appropriate
	_containerNode=offscreenNode.firstElementChild;scrollYParent=_containerNode;if(_instanceOptions.scrollingX){_scrollNodes.x=_containerNode.firstElementChild;scrollYParent=_scrollNodes.x;if(_instanceOptions.scrollbars){_scrollbarNodes.x=_containerNode.getElementsByClassName('ftscroller_scrollbarx')[0];}}if(_instanceOptions.scrollingY){_scrollNodes.y=scrollYParent.firstElementChild;if(_instanceOptions.scrollbars){_scrollbarNodes.y=_containerNode.getElementsByClassName('ftscroller_scrollbary')[0];}_contentParentNode=_scrollNodes.y;}else{_contentParentNode=_scrollNodes.x;}// Take the contents of the scrollable element, and copy them into the new container
	while(_scrollableMasterNode.firstChild){_contentParentNode.appendChild(_scrollableMasterNode.firstChild);}// Move the wrapped elements back into the document
	_scrollableMasterNode.appendChild(_containerNode);};/**
			 * Attempts to use any existing DOM scroller nodes if possible, returning true if so;
			 * updates all internal element references.
			 */_existingDOMValid=function _existingDOMValid(){var scrollerContainer,layerX,layerY,yParent,scrollerX,scrollerY,candidates,i,l;// Check that there's an initial child node, and make sure it's the container class
	scrollerContainer=_scrollableMasterNode.firstElementChild;if(!scrollerContainer||scrollerContainer.className.indexOf('ftscroller_container')===-1){return;}// If x-axis scrolling is enabled, find and verify the x scroller layer
	if(_instanceOptions.scrollingX){// Find and verify the x scroller layer
	layerX=scrollerContainer.firstElementChild;if(!layerX||layerX.className.indexOf('ftscroller_x')===-1){return;}yParent=layerX;// Find and verify the x scrollbar if enabled
	if(_instanceOptions.scrollbars){candidates=scrollerContainer.getElementsByClassName('ftscroller_scrollbarx');if(candidates){for(i=0,l=candidates.length;i<l;i=i+1){if(candidates[i].parentNode===scrollerContainer){scrollerX=candidates[i];break;}}}if(!scrollerX){return;}}}else{yParent=scrollerContainer;}// If y-axis scrolling is enabled, find and verify the y scroller layer
	if(_instanceOptions.scrollingY){// Find and verify the x scroller layer
	layerY=yParent.firstElementChild;if(!layerY||layerY.className.indexOf('ftscroller_y')===-1){return;}// Find and verify the y scrollbar if enabled
	if(_instanceOptions.scrollbars){candidates=scrollerContainer.getElementsByClassName('ftscroller_scrollbary');if(candidates){for(i=0,l=candidates.length;i<l;i=i+1){if(candidates[i].parentNode===scrollerContainer){scrollerY=candidates[i];break;}}}if(!scrollerY){return;}}}// Elements found and verified - update the references and return success
	_containerNode=scrollerContainer;if(layerX){_scrollNodes.x=layerX;}if(layerY){_scrollNodes.y=layerY;}if(scrollerX){_scrollbarNodes.x=scrollerX;}if(scrollerY){_scrollbarNodes.y=scrollerY;}if(_instanceOptions.scrollingY){_contentParentNode=layerY;}else{_contentParentNode=layerX;}return true;};_domChanged=function _domChanged(e){// If the timer is active, clear it
	if(_domChangeDebouncer){window.clearTimeout(_domChangeDebouncer);}// React to resizes at once
	if(e&&e.type==='resize'){_updateDimensions();// For other changes, which may occur in groups, set up the DOM changed timer
	}else{_domChangeDebouncer=setTimeout(function(){_updateDimensions();},100);}};_updateDimensions=function _updateDimensions(ignoreSnapScroll){var axis;// Only update dimensions if the container node exists (DOM elements can go away if
	// the scroller instance is not destroyed correctly)
	if(!_containerNode||!_contentParentNode){return false;}if(_domChangeDebouncer){window.clearTimeout(_domChangeDebouncer);_domChangeDebouncer=false;}var containerWidth,containerHeight,startAlignments;// Calculate the starting alignment for comparison later
	startAlignments={x:false,y:false};for(axis in startAlignments){if(startAlignments.hasOwnProperty(axis)){if(_lastScrollPosition[axis]===0){startAlignments[axis]=-1;}else if(_lastScrollPosition[axis]<=_metrics.scrollEnd[axis]){startAlignments[axis]=1;}else if(_lastScrollPosition[axis]*2<=_metrics.scrollEnd[axis]+5&&_lastScrollPosition[axis]*2>=_metrics.scrollEnd[axis]-5){startAlignments[axis]=0;}}}containerWidth=_containerNode.offsetWidth;containerHeight=_containerNode.offsetHeight;// Grab the dimensions
	var rawScrollWidth=options.contentWidth||_contentParentNode.offsetWidth;var rawScrollHeight=options.contentHeight||_contentParentNode.offsetHeight;var scrollWidth=rawScrollWidth;var scrollHeight=rawScrollHeight;var targetPosition={x:_lastScrollPosition.x,y:_lastScrollPosition.y};// Update snap grid
	if(!_snapGridSize.userX){_snapGridSize.x=containerWidth;}if(!_snapGridSize.userY){_snapGridSize.y=containerHeight;}// If there is a grid, conform to the grid
	if(_instanceOptions.snapping){if(_snapGridSize.userX){scrollWidth=Math.ceil(scrollWidth/_snapGridSize.userX)*_snapGridSize.userX;}else{scrollWidth=Math.ceil(scrollWidth/_snapGridSize.x)*_snapGridSize.x;}if(_snapGridSize.userY){scrollHeight=Math.ceil(scrollHeight/_snapGridSize.userY)*_snapGridSize.userY;}else{scrollHeight=Math.ceil(scrollHeight/_snapGridSize.y)*_snapGridSize.y;}}// If no details have changed, return.
	if(_metrics.container.x===containerWidth&&_metrics.container.y===containerHeight&&_metrics.content.x===scrollWidth&&_metrics.content.y===scrollHeight){return;}// Update the sizes
	_metrics.container.x=containerWidth;_metrics.container.y=containerHeight;_metrics.content.x=scrollWidth;_metrics.content.rawX=rawScrollWidth;_metrics.content.y=scrollHeight;_metrics.content.rawY=rawScrollHeight;_metrics.scrollEnd.x=containerWidth-scrollWidth;_metrics.scrollEnd.y=containerHeight-scrollHeight;_updateScrollbarDimensions();// If scrolling is in progress, trigger a scroll update
	if(_isScrolling){_lastScrollPosition.x--;_lastScrollPosition.y--;_constrainAndRenderTargetScrollPosition();// If scrolling *isn't* in progress, snap and realign.
	}else{if(!ignoreSnapScroll&&_instanceOptions.snapping){// Ensure bounds are correct
	_updateSegments();targetPosition=_getSnapPositionForIndexes(_snapIndex,_lastScrollPosition);}// Apply base alignment if appropriate
	for(axis in targetPosition){if(targetPosition.hasOwnProperty(axis)){// If the container is smaller than the content, determine whether to apply the
	// alignment.  This occurs if a scroll has never taken place, or if the position
	// was previously at the correct "end" and can be maintained.
	if(_metrics.container[axis]<_metrics.content[axis]){if(_hasBeenScrolled&&_instanceOptions.baseAlignments[axis]!==startAlignments[axis]){continue;}}// Apply the alignment
	if(_instanceOptions.baseAlignments[axis]===1){targetPosition[axis]=_metrics.scrollEnd[axis];}else if(_instanceOptions.baseAlignments[axis]===0){targetPosition[axis]=Math.floor(_metrics.scrollEnd[axis]/2);}else if(_instanceOptions.baseAlignments[axis]===-1){targetPosition[axis]=0;}}}// Limit to bounds
	targetPosition=_limitToBounds(targetPosition);if(_instanceOptions.scrollingX&&targetPosition.x!==_lastScrollPosition.x){_setAxisPosition('x',targetPosition.x,0);_baseScrollPosition.x=targetPosition.x;}if(_instanceOptions.scrollingY&&targetPosition.y!==_lastScrollPosition.y){_setAxisPosition('y',targetPosition.y,0);_baseScrollPosition.y=targetPosition.y;}}};_updateScrollbarDimensions=function _updateScrollbarDimensions(){// Update scrollbar sizes
	if(_instanceOptions.scrollbars){if(_instanceOptions.scrollingX){_scrollbarNodes.x.style.width=Math.max(6,Math.round(_metrics.container.x*(_metrics.container.x/_metrics.content.x)-4))+'px';}if(_instanceOptions.scrollingY){_scrollbarNodes.y.style.height=Math.max(6,Math.round(_metrics.container.y*(_metrics.container.y/_metrics.content.y)-4))+'px';}}// Update scroll caches
	_scrollableAxes={};if(_instanceOptions.scrollingX&&(_metrics.content.x>_metrics.container.x||_instanceOptions.alwaysScroll)){_scrollableAxes.x=true;}if(_instanceOptions.scrollingY&&(_metrics.content.y>_metrics.container.y||_instanceOptions.alwaysScroll)){_scrollableAxes.y=true;}};_updateElementPosition=function _updateElementPosition(){var axis,computedStyle,splitStyle;// Retrieve the current position of each active axis.
	// Custom parsing is used instead of native matrix support for speed and for
	// backwards compatibility.
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){computedStyle=window.getComputedStyle(_scrollNodes[axis],null)[_vendorTransformLookup];splitStyle=computedStyle.split(', ');// For 2d-style transforms, pull out elements four or five
	if(splitStyle.length===6){_baseScrollPosition[axis]=parseInt(splitStyle[axis==='y'?5:4],10);// For 3d-style transforms, pull out elements twelve or thirteen
	}else{_baseScrollPosition[axis]=parseInt(splitStyle[axis==='y'?13:12],10);}_lastScrollPosition[axis]=_baseScrollPosition[axis];}}};_updateSegments=function _updateSegments(scrollFinalised){var axis;var newSegment={x:0,y:0};// If snapping is disabled, return without any further action required
	if(!_instanceOptions.snapping){return;}// Calculate the new segments
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){newSegment[axis]=Math.max(0,Math.min(Math.ceil(_metrics.content[axis]/_snapGridSize[axis])-1,Math.round(-_lastScrollPosition[axis]/_snapGridSize[axis])));}}// In all cases update the active segment if appropriate
	if(newSegment.x!==_activeSegment.x||newSegment.y!==_activeSegment.y){_activeSegment.x=newSegment.x;_activeSegment.y=newSegment.y;_fireEvent('segmentwillchange',{segmentX:newSegment.x,segmentY:newSegment.y});}// If the scroll has been finalised, also update the base segment
	if(scrollFinalised){if(newSegment.x!==_baseSegment.x||newSegment.y!==_baseSegment.y){_baseSegment.x=newSegment.x;_baseSegment.y=newSegment.y;_fireEvent('segmentdidchange',{segmentX:newSegment.x,segmentY:newSegment.y});}}};_setAxisPosition=function _setAxisPosition(axis,position,animationDuration,animationBezier,boundsCrossDelay){var transitionCSSString,newPositionAtExtremity=null;// Only update position if the axis node exists (DOM elements can go away if
	// the scroller instance is not destroyed correctly)
	if(!_scrollNodes[axis]){return false;}// Determine the transition property to apply to both the scroll element and the scrollbar
	if(animationDuration){if(!animationBezier){animationBezier=_instanceOptions.flingBezier;}transitionCSSString=_vendorCSSPrefix+'transform '+animationDuration+'ms '+animationBezier.toString();}else{transitionCSSString='';}// Apply the transition property to elements
	_scrollNodes[axis].style[_transitionProperty]=transitionCSSString;if(_instanceOptions.scrollbars){_scrollbarNodes[axis].style[_transitionProperty]=transitionCSSString;}// Update the positions
	_scrollNodes[axis].style[_transformProperty]=_translateRulePrefix+_transformPrefixes[axis]+position+'px'+_transformSuffixes[axis];if(_instanceOptions.scrollbars){_scrollbarNodes[axis].style[_transformProperty]=_translateRulePrefix+_transformPrefixes[axis]+-position*_metrics.container[axis]/_metrics.content[axis]+'px'+_transformSuffixes[axis];}// Determine whether the scroll is at an extremity.
	if(position>=0){newPositionAtExtremity='start';}else if(position<=_metrics.scrollEnd[axis]){newPositionAtExtremity='end';}// If the extremity status has changed, fire an appropriate event
	if(newPositionAtExtremity!==_scrollAtExtremity[axis]){if(newPositionAtExtremity!==null){if(animationDuration){_timeouts.push(setTimeout(function(){_fireEvent('reached'+newPositionAtExtremity,{axis:axis});},boundsCrossDelay||animationDuration));}else{_fireEvent('reached'+newPositionAtExtremity,{axis:axis});}}_scrollAtExtremity[axis]=newPositionAtExtremity;}// Update the recorded position if there's no duration
	if(!animationDuration){_lastScrollPosition[axis]=position;}};/**
			 * Retrieve the current position as an object with scrollLeft and scrollTop
			 * properties.
			 */_getPosition=function _getPosition(){return{scrollLeft:-_lastScrollPosition.x,scrollTop:-_lastScrollPosition.y};};_scheduleAxisPosition=function _scheduleAxisPosition(axis,position,animationDuration,animationBezier,afterDelay){_timeouts.push(setTimeout(function(){_setAxisPosition(axis,position,animationDuration,animationBezier);},afterDelay));};_fireEvent=function _fireEvent(eventName,eventObject){var i,l;eventObject.srcObject=_publicSelf;// Iterate through any listeners
	for(i=0,l=_eventListeners[eventName].length;i<l;i=i+1){// Execute each in a try/catch
	try{_eventListeners[eventName][i](eventObject);}catch(error){if(window.console&&window.console.error){if(error.message){window.console.error(error.message+' ('+error.sourceURL+', line '+error.line+')');}else{window.console.error('Error encountered executing FTScroller event listener callback for ['+eventName+']. Add a "debugger" statement here to obtain a full backtrace.');if(window.console.dir)window.console.dir(error);}}}}};/**
			 * Update the scroll position so that the child element is in view.
			 */_childFocused=function _childFocused(event){var offset,axis,visibleChildPortion;var focusedNodeRect=_getBoundingRect(event.target);var containerRect=_getBoundingRect(_containerNode);var edgeMap={x:'left',y:'top'};var opEdgeMap={x:'right',y:'bottom'};var dimensionMap={x:'width',y:'height'};// If an input is currently being tracked, ignore the focus event
	if(_inputIdentifier!==false){return;}for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)){// If the focussed node is entirely in view, there is no need to center it
	if(focusedNodeRect[edgeMap[axis]]>=containerRect[edgeMap[axis]]&&focusedNodeRect[opEdgeMap[axis]]<=containerRect[opEdgeMap[axis]]){continue;}// If the focussed node is larger than the container...
	if(focusedNodeRect[dimensionMap[axis]]>containerRect[dimensionMap[axis]]){visibleChildPortion=focusedNodeRect[dimensionMap[axis]]-Math.max(0,containerRect[edgeMap[axis]]-focusedNodeRect[edgeMap[axis]])-Math.max(0,focusedNodeRect[opEdgeMap[axis]]-containerRect[opEdgeMap[axis]]);// If more than half a container's portion of the focussed node is visible, there's no need to center it
	if(visibleChildPortion>=containerRect[dimensionMap[axis]]/2){continue;}}// Set the target offset to be in the middle of the container, or as close as bounds permit
	offset=-Math.round(focusedNodeRect[dimensionMap[axis]]/2-_lastScrollPosition[axis]+focusedNodeRect[edgeMap[axis]]-containerRect[edgeMap[axis]]-containerRect[dimensionMap[axis]]/2);offset=Math.min(0,Math.max(_metrics.scrollEnd[axis],offset));// Perform the scroll
	_setAxisPosition(axis,offset,0);_baseScrollPosition[axis]=offset;}}_fireEvent('scroll',_getPosition());};/**
			 * Given a relative distance beyond the element bounds, returns a modified version to
			 * simulate bouncy/springy edges.
			 */_modifyDistanceBeyondBounds=function _modifyDistanceBeyondBounds(distance,axis){if(!_instanceOptions.bouncing){return 0;}var e=Math.exp(distance/_metrics.container[axis]);return Math.round(_metrics.container[axis]*0.6*(e-1)/(e+1));};/**
			 * Given positions for each enabled axis, returns an object showing how far each axis is beyond
			 * bounds. If within bounds, -1 is returned; if at the bounds, 0 is returned.
			 */_distancesBeyondBounds=function _distancesBeyondBounds(positions){var axis,position;var distances={};for(axis in positions){if(positions.hasOwnProperty(axis)){position=positions[axis];// If the position is to the left/top, no further modification required
	if(position>=0){distances[axis]=position;// If it's within the bounds, use -1
	}else if(position>_metrics.scrollEnd[axis]){distances[axis]=-1;// Otherwise, amend by the distance of the maximum edge
	}else{distances[axis]=_metrics.scrollEnd[axis]-position;}}}return distances;};/**
			 * On platforms which support it, use RequestAnimationFrame to group
			 * position updates for speed.  Starts the render process.
			 */_startAnimation=function _startAnimation(){if(_reqAnimationFrame){_cancelAnimation();_animationFrameRequest=_reqAnimationFrame(_scheduleRender);}};/**
			 * On platforms which support RequestAnimationFrame, provide the rendering loop.
			 * Takes two arguments; the first is the render/position update function to
			 * be called, and the second is a string controlling the render type to
			 * allow previous changes to be cancelled - should be 'pan' or 'scroll'.
			 */_scheduleRender=function _scheduleRender(){var axis,positionUpdated;// If using requestAnimationFrame schedule the next update at once
	if(_reqAnimationFrame){_animationFrameRequest=_reqAnimationFrame(_scheduleRender);}// Perform the draw.
	for(axis in _scrollableAxes){if(_scrollableAxes.hasOwnProperty(axis)&&_targetScrollPosition[axis]!==_lastScrollPosition[axis]){_setAxisPosition(axis,_targetScrollPosition[axis]);positionUpdated=true;}}// If full, locked scrolling has enabled, fire any scroll and segment change events
	if(_isScrolling&&positionUpdated){_fireEvent('scroll',_getPosition());_updateSegments(false);}};/**
			 * Stops the animation process.
			 */_cancelAnimation=function _cancelAnimation(){if(_animationFrameRequest===false||!_cancelAnimationFrame){return;}_cancelAnimationFrame(_animationFrameRequest);_animationFrameRequest=false;};/**
			 * Remove then re-set event handlers
			 */_resetEventHandlers=function _resetEventHandlers(){_removeEventHandlers();_addEventHandlers();};/**
			 * Register event handlers
			 */_addEventHandlers=function _addEventHandlers(){var MutationObserver;// Only remove the event if the node exists (DOM elements can go away)
	if(!_containerNode){return;}if(_trackPointerEvents&&!_instanceOptions.disabledInputMethods.pointer){if(_pointerEventsPrefixed){_containerNode.addEventListener('MSPointerDown',_onPointerDown);_containerNode.addEventListener('MSPointerMove',_onPointerMove);_containerNode.addEventListener('MSPointerUp',_onPointerUp);_containerNode.addEventListener('MSPointerCancel',_onPointerCancel);}else{_containerNode.addEventListener('pointerdown',_onPointerDown);_containerNode.addEventListener('pointermove',_onPointerMove);_containerNode.addEventListener('pointerup',_onPointerUp);_containerNode.addEventListener('pointercancel',_onPointerCancel);}}else{if(_trackTouchEvents&&!_instanceOptions.disabledInputMethods.touch){_containerNode.addEventListener('touchstart',_onTouchStart);_containerNode.addEventListener('touchmove',_onTouchMove);_containerNode.addEventListener('touchend',_onTouchEnd);_containerNode.addEventListener('touchcancel',_onTouchEnd);}if(!_instanceOptions.disabledInputMethods.mouse){_containerNode.addEventListener('mousedown',_onMouseDown);}}if(!_instanceOptions.disabledInputMethods.scroll){_containerNode.addEventListener('DOMMouseScroll',_onMouseScroll);_containerNode.addEventListener('mousewheel',_onMouseScroll);}// If any of the input methods which would eventually trigger a click are
	// enabled, add a click event listener so that phantom clicks can be prevented
	// at the end of a scroll. Otherwise, don't add a listener and don't prevent
	// clicks.
	if(!_instanceOptions.disabledInputMethods.mouse||!_instanceOptions.disabledInputMethods.touch||!_instanceOptions.disabledInputMethods.pointer){// Add a click listener.  On IE, add the listener to the document, to allow
	// clicks to be cancelled if a scroll ends outside the bounds of the container; on
	// other platforms, add to the container node.
	if(_trackPointerEvents){document.addEventListener('click',_onClick,true);}else{_containerNode.addEventListener('click',_onClick,true);}}// Watch for changes inside the contained element to update bounds - de-bounced slightly.
	if(!_instanceOptions.disabledInputMethods.focus){_contentParentNode.addEventListener('focus',_childFocused);}if(_instanceOptions.updateOnChanges){// Try and reuse the old, disconnected observer instance if available
	// Otherwise, check for support before proceeding
	if(!_mutationObserver){MutationObserver=window.MutationObserver||window.WebKitMutationObserver||window[_vendorStylePropertyPrefix+'MutationObserver'];if(MutationObserver){_mutationObserver=new MutationObserver(_domChanged);}}if(_mutationObserver){_mutationObserver.observe(_contentParentNode,{childList:true,characterData:true,subtree:true});}else{_contentParentNode.addEventListener('DOMSubtreeModified',function(e){// Ignore changes to nested FT Scrollers - even updating a transform style
	// can trigger a DOMSubtreeModified in IE, causing nested scrollers to always
	// favour the deepest scroller as parent scrollers 'resize'/end scrolling.
	if(e&&(e.srcElement===_contentParentNode||e.srcElement.className.indexOf('ftscroller_')!==-1)){return;}_domChanged();},true);}_contentParentNode.addEventListener('load',_domChanged);}if(_instanceOptions.updateOnWindowResize){window.addEventListener('resize',_domChanged);}};/**
			 * Remove event handlers.
			 *
			 * The current flags may not match the state when the event handlers were set up,
			 * so remove all event handlers unconditionally, just in case they're bound.
			 */_removeEventHandlers=function _removeEventHandlers(){if(_containerNode){_containerNode.removeEventListener('MSPointerDown',_onPointerDown);_containerNode.removeEventListener('MSPointerMove',_onPointerMove);_containerNode.removeEventListener('MSPointerUp',_onPointerUp);_containerNode.removeEventListener('MSPointerCancel',_onPointerCancel);_containerNode.removeEventListener('pointerdown',_onPointerDown);_containerNode.removeEventListener('pointermove',_onPointerMove);_containerNode.removeEventListener('pointerup',_onPointerUp);_containerNode.removeEventListener('pointercancel',_onPointerCancel);_containerNode.removeEventListener('touchstart',_onTouchStart);_containerNode.removeEventListener('touchmove',_onTouchMove);_containerNode.removeEventListener('touchend',_onTouchEnd);_containerNode.removeEventListener('touchcancel',_onTouchEnd);_containerNode.removeEventListener('mousedown',_onMouseDown);_containerNode.removeEventListener('DOMMouseScroll',_onMouseScroll);_containerNode.removeEventListener('mousewheel',_onMouseScroll);_containerNode.removeEventListener('click',_onClick,true);}if(_contentParentNode){_contentParentNode.removeEventListener('focus',_childFocused);_contentParentNode.removeEventListener('DOMSubtreeModified',_domChanged);_contentParentNode.removeEventListener('load',_domChanged);}if(_mutationObserver){_mutationObserver.disconnect();}document.removeEventListener('mousemove',_onMouseMove);document.removeEventListener('mouseup',_onMouseUp);document.removeEventListener('click',_onClick,true);window.removeEventListener('resize',_domChanged);};/**
			 * Touch event handlers
			 */_onTouchStart=function _onTouchStart(startEvent){var i,l,touchEvent;// If a touch is already active, ensure that the index
	// is mapped to the correct finger, and return.
	if(_inputIdentifier){for(i=0,l=startEvent.touches.length;i<l;i=i+1){if(startEvent.touches[i].identifier===_inputIdentifier){_inputIndex=i;}}return;}// Track the new touch's identifier, reset index, and pass
	// the coordinates to the scroll start function.
	touchEvent=startEvent.touches[0];_inputIdentifier=touchEvent.identifier;_inputIndex=0;_startScroll(touchEvent.clientX,touchEvent.clientY,startEvent.timeStamp,startEvent);};_onTouchMove=function _onTouchMove(moveEvent){if(_inputIdentifier===false){return;}// Get the coordinates from the appropriate touch event and
	// pass them on to the scroll handler
	var touchEvent=moveEvent.touches[_inputIndex];_updateScroll(touchEvent.clientX,touchEvent.clientY,moveEvent.timeStamp,moveEvent);};_onTouchEnd=function _onTouchEnd(endEvent){var i,l;// Check whether the original touch event is still active,
	// if it is, update the index and return.
	if(endEvent.touches){for(i=0,l=endEvent.touches.length;i<l;i=i+1){if(endEvent.touches[i].identifier===_inputIdentifier){_inputIndex=i;return;}}}// Complete the scroll.  Note that touch end events
	// don't capture coordinates.
	_endScroll(endEvent.timeStamp,endEvent);};/**
			 * Mouse event handlers
			 */_onMouseDown=function _onMouseDown(startEvent){// Don't track the right mouse buttons, or a context menu
	if(startEvent.button&&startEvent.button===2||startEvent.ctrlKey){return;}// Capture if possible
	if(_containerNode.setCapture){_containerNode.setCapture();}// Add move & up handlers to the *document* to allow handling outside the element
	document.addEventListener('mousemove',_onMouseMove,true);document.addEventListener('mouseup',_onMouseUp,true);_inputIdentifier=startEvent.button||1;_inputIndex=0;_startScroll(startEvent.clientX,startEvent.clientY,startEvent.timeStamp,startEvent);};_onMouseMove=function _onMouseMove(moveEvent){if(!_inputIdentifier){return;}_updateScroll(moveEvent.clientX,moveEvent.clientY,moveEvent.timeStamp,moveEvent);};_onMouseUp=function _onMouseUp(endEvent){if(endEvent.button&&endEvent.button!==_inputIdentifier){return;}document.removeEventListener('mousemove',_onMouseMove,true);document.removeEventListener('mouseup',_onMouseUp,true);// Release capture if possible
	if(_containerNode.releaseCapture){_containerNode.releaseCapture();}_endScroll(endEvent.timeStamp,endEvent);};/**
			 * Pointer event handlers
			 */_onPointerDown=function _onPointerDown(startEvent){// If there is already a pointer event being tracked, ignore subsequent.
	// However, if this pointer is seen as the primary pointer, override that.
	if(_inputIdentifier&&!startEvent.isPrimary){return;}// Disable specific input types if specified in the config.  Separate
	// out touch and other events (eg treat both pen and mouse as "mouse")
	if(startEvent.pointerType===_pointerTypeTouch){if(_instanceOptions.disabledInputMethods.touch){return;}}else if(_instanceOptions.disabledInputMethods.mouse){return;}_inputIdentifier=startEvent.pointerId;_startScroll(startEvent.clientX,startEvent.clientY,startEvent.timeStamp,startEvent);};_onPointerMove=function _onPointerMove(moveEvent){if(_inputIdentifier!==moveEvent.pointerId){return;}_updateScroll(moveEvent.clientX,moveEvent.clientY,moveEvent.timeStamp,moveEvent);};_onPointerUp=function _onPointerUp(endEvent){if(_inputIdentifier!==endEvent.pointerId){return;}_endScroll(endEvent.timeStamp,endEvent);};_onPointerCancel=function _onPointerCancel(endEvent){_endScroll(endEvent.timeStamp,endEvent);};_onPointerCaptureEnd=function _onPointerCaptureEnd(event){// On pointer capture end - which can happen because of another element
	// releasing pointer capture - don't end scrolling, but do track that
	// input capture has been lost.  This will result in pointers leaving
	// the window possibly being lost, but further interactions will fix
	// the tracking again.
	_inputCaptured=false;};/**
			 * Prevents click actions if appropriate
			 */_onClick=function _onClick(clickEvent){// If a scroll action hasn't resulted in the next scroll being prevented, and a scroll
	// isn't currently in progress with a different identifier, allow the click
	if(!_preventClick){return true;}// Prevent clicks using the preventDefault() and stopPropagation() handlers on the event;
	// this is safe even in IE10 as this is always a "true" event, never a window.event.
	clickEvent.preventDefault();clickEvent.stopPropagation();if(!_inputIdentifier){_preventClick=false;}return false;};/**
			 * Process scroll wheel/input actions as scroller scrolls
			 */_onMouseScroll=function _onMouseScroll(event){var scrollDeltaX,scrollDeltaY;if(_inputIdentifier!=='scrollwheel'){if(_inputIdentifier!==false){return true;}_inputIdentifier='scrollwheel';_cumulativeScroll.x=0;_cumulativeScroll.y=0;// Start a scroll event
	if(!_startScroll(event.clientX,event.clientY,Date.now(),event)){return;}}// Convert the scrollwheel values to a scroll value
	if(event.wheelDelta){if(event.wheelDeltaX){scrollDeltaX=event.wheelDeltaX/2;scrollDeltaY=event.wheelDeltaY/2;}else{scrollDeltaX=0;scrollDeltaY=event.wheelDelta/2;}}else{if(event.axis&&event.axis===event.HORIZONTAL_AXIS){scrollDeltaX=event.detail*-10;scrollDeltaY=0;}else{scrollDeltaX=0;scrollDeltaY=event.detail*-10;}}// If the scroller is constrained to an x axis, convert y scroll to allow single-axis scroll
	// wheels to scroll constrained content.
	if(_instanceOptions.invertScrollWheel&&!_instanceOptions.scrollingY&&!scrollDeltaX){scrollDeltaX=scrollDeltaY;scrollDeltaY=0;}_cumulativeScroll.x=Math.round(_cumulativeScroll.x+scrollDeltaX);_cumulativeScroll.y=Math.round(_cumulativeScroll.y+scrollDeltaY);_updateScroll(_gestureStart.x+_cumulativeScroll.x,_gestureStart.y+_cumulativeScroll.y,event.timeStamp,event);// End scrolling state
	if(_scrollWheelEndDebouncer){clearTimeout(_scrollWheelEndDebouncer);}_scrollWheelEndDebouncer=setTimeout(function(){_releaseInputCapture();_inputIdentifier=false;_isScrolling=false;_preventClick=false;_isDisplayingScroll=false;_ftscrollerMoving=false;if(_instanceOptions.windowScrollingActiveFlag){window[_instanceOptions.windowScrollingActiveFlag]=false;}_cancelAnimation();if(!_snapScroll()){_finalizeScroll();}},300);};/**
			 * Capture and release input support, particularly allowing tracking
			 * of Metro pointers outside the docked view.  Note that _releaseInputCapture
			 * should be called before the input identifier is cleared.
			 */_captureInput=function _captureInput(){if(_inputCaptured||_inputIdentifier===false||_inputIdentifier==='scrollwheel'){return;}if(_trackPointerEvents){_containerNode[_setPointerCapture](_inputIdentifier);_containerNode.addEventListener(_lostPointerCapture,_onPointerCaptureEnd,false);}_inputCaptured=true;};_releaseInputCapture=function _releaseInputCapture(){if(!_inputCaptured){return;}if(_trackPointerEvents){_containerNode.removeEventListener(_lostPointerCapture,_onPointerCaptureEnd,false);_containerNode[_releasePointerCapture](_inputIdentifier);}_inputCaptured=false;};/**
			 * Utility function acting as a getBoundingClientRect polyfill.
			 */_getBoundingRect=function _getBoundingRect(anElement){if(anElement.getBoundingClientRect){return anElement.getBoundingClientRect();}var x=0,y=0,eachElement=anElement;while(eachElement){x=x+eachElement.offsetLeft-eachElement.scrollLeft;y=y+eachElement.offsetTop-eachElement.scrollTop;eachElement=eachElement.offsetParent;}return{left:x,top:y,width:anElement.offsetWidth,height:anElement.offsetHeight};};/*                     Instantiation                     */// Set up the DOM node if appropriate
	_initializeDOM();// Update sizes
	_updateDimensions();// Set up the event handlers
	_addEventHandlers();// Define a public API to be returned at the bottom - this is the public-facing interface.
	_publicSelf={destroy:destroy,setSnapSize:setSnapSize,scrollTo:scrollTo,scrollBy:scrollBy,updateDimensions:updateDimensions,addEventListener:addEventListener,removeEventListener:removeEventListener,setDisabledInputMethods:setDisabledInputMethods};if(_defineProperties2.default){(0,_defineProperties2.default)(_publicSelf,{'scrollHeight':{get:function get(){return _metrics.content.y;},set:function set(value){throw new SyntaxError('scrollHeight is currently read-only - ignoring '+value);}},'scrollLeft':{get:function get(){return-_lastScrollPosition.x;},set:function set(value){scrollTo(value,false,false);return-_lastScrollPosition.x;}},'scrollTop':{get:function get(){return-_lastScrollPosition.y;},set:function set(value){scrollTo(false,value,false);return-_lastScrollPosition.y;}},'scrollWidth':{get:function get(){return _metrics.content.x;},set:function set(value){throw new SyntaxError('scrollWidth is currently read-only - ignoring '+value);}},'segmentCount':{get:function get(){if(!_instanceOptions.snapping){return{x:NaN,y:NaN};}return{x:Math.ceil(_metrics.content.x/_snapGridSize.x),y:Math.ceil(_metrics.content.y/_snapGridSize.y)};},set:function set(value){throw new SyntaxError('segmentCount is currently read-only - ignoring '+value);}},'currentSegment':{get:function get(){return{x:_activeSegment.x,y:_activeSegment.y};},set:function set(value){throw new SyntaxError('currentSegment is currently read-only - ignoring '+value);}},'contentContainerNode':{get:function get(){return _contentParentNode;},set:function set(value){throw new SyntaxError('contentContainerNode is currently read-only - ignoring '+value);}}});}// Return the public interface.
	return _publicSelf;};/*          Prototype Functions and Properties           *//**
		 * The HTML to prepend to the scrollable content to wrap it. Used internally,
		 * and may be used to pre-wrap scrollable content.  Axes can optionally
		 * be excluded for speed improvements.
		 */_FTScroller.prototype.getPrependedHTML=function(excludeXAxis,excludeYAxis,hwAccelerationClass){if(!hwAccelerationClass){if((typeof FTScrollerOptions==='undefined'?'undefined':(0,_typeof3.default)(FTScrollerOptions))==='object'&&FTScrollerOptions.hwAccelerationClass){hwAccelerationClass=FTScrollerOptions.hwAccelerationClass;}else{hwAccelerationClass='ftscroller_hwaccelerated';}}var output='<div class="ftscroller_container">';if(!excludeXAxis){output+='<div class="ftscroller_x '+hwAccelerationClass+'">';}if(!excludeYAxis){output+='<div class="ftscroller_y '+hwAccelerationClass+'">';}return output;};/**
		 * The HTML to append to the scrollable content to wrap it; again, used internally,
		 * and may be used to pre-wrap scrollable content.
		 */_FTScroller.prototype.getAppendedHTML=function(excludeXAxis,excludeYAxis,hwAccelerationClass,scrollbars){if(!hwAccelerationClass){if((typeof FTScrollerOptions==='undefined'?'undefined':(0,_typeof3.default)(FTScrollerOptions))==='object'&&FTScrollerOptions.hwAccelerationClass){hwAccelerationClass=FTScrollerOptions.hwAccelerationClass;}else{hwAccelerationClass='ftscroller_hwaccelerated';}}var output='';if(!excludeXAxis){output+='</div>';}if(!excludeYAxis){output+='</div>';}if(scrollbars){if(!excludeXAxis){output+='<div class="ftscroller_scrollbar ftscroller_scrollbarx '+hwAccelerationClass+'"><div class="ftscroller_scrollbarinner"></div></div>';}if(!excludeYAxis){output+='<div class="ftscroller_scrollbar ftscroller_scrollbary '+hwAccelerationClass+'"><div class="ftscroller_scrollbarinner"></div></div>';}}output+='</div>';return output;};})();(function(){'use strict';function clamp(value){if(value>1.0)return 1.0;if(value<0.0)return 0.0;return value;}/**
		 * Represents a two-dimensional cubic bezier curve with the starting
		 * point (0, 0) and the end point (1, 1). The two control points p1 and p2
		 * have x and y coordinates between 0 and 1.
		 *
		 * This type of bezier curves can be used as CSS transform timing functions.
		 */CubicBezier=function CubicBezier(p1x,p1y,p2x,p2y){// Control points
	this._p1={x:clamp(p1x),y:clamp(p1y)};this._p2={x:clamp(p2x),y:clamp(p2y)};};CubicBezier.prototype._getCoordinateForT=function(t,p1,p2){var c=3*p1,b=3*(p2-p1)-c,a=1-c-b;return((a*t+b)*t+c)*t;};CubicBezier.prototype._getCoordinateDerivateForT=function(t,p1,p2){var c=3*p1,b=3*(p2-p1)-c,a=1-c-b;return(3*a*t+2*b)*t+c;};CubicBezier.prototype._getTForCoordinate=function(c,p1,p2,epsilon){if(!isFinite(epsilon)||epsilon<=0){throw new RangeError('"epsilon" must be a number greater than 0.');}var t2,i,c2,d2;// First try a few iterations of Newton's method -- normally very fast.
	for(t2=c,i=0;i<8;i=i+1){c2=this._getCoordinateForT(t2,p1,p2)-c;if(Math.abs(c2)<epsilon){return t2;}d2=this._getCoordinateDerivateForT(t2,p1,p2);if(Math.abs(d2)<1e-6){break;}t2=t2-c2/d2;}// Fall back to the bisection method for reliability.
	t2=c;var t0=0,t1=1;if(t2<t0){return t0;}if(t2>t1){return t1;}while(t0<t1){c2=this._getCoordinateForT(t2,p1,p2);if(Math.abs(c2-c)<epsilon){return t2;}if(c>c2){t0=t2;}else{t1=t2;}t2=(t1-t0)*0.5+t0;}// Failure.
	return t2;};/**
		 * Computes the point for a given t value.
		 *
		 * @param {number} t
		 * @returns {Object} Returns an object with x and y properties
		 */CubicBezier.prototype.getPointForT=function(t){// Special cases: starting and ending points
	if(t===0||t===1){return{x:t,y:t};}// Check for correct t value (must be between 0 and 1)
	if(t<0||t>1){_throwRangeError('t',t);}return{x:this._getCoordinateForT(t,this._p1.x,this._p2.x),y:this._getCoordinateForT(t,this._p1.y,this._p2.y)};};CubicBezier.prototype.getTForX=function(x,epsilon){return this._getTForCoordinate(x,this._p1.x,this._p2.x,epsilon);};CubicBezier.prototype.getTForY=function(y,epsilon){return this._getTForCoordinate(y,this._p1.y,this._p2.y,epsilon);};/**
		 * Computes auxiliary points using De Casteljau's algorithm.
		 *
		 * @param {number} t must be greater than 0 and lower than 1.
		 * @returns {Object} with members i0, i1, i2 (first iteration),
		 *    j1, j2 (second iteration) and k (the exact point for t)
		 */CubicBezier.prototype._getAuxPoints=function(t){if(t<=0||t>=1){_throwRangeError('t',t);}/* First series of auxiliary points */// First control point of the left curve
	var i0={x:t*this._p1.x,y:t*this._p1.y},i1={x:this._p1.x+t*(this._p2.x-this._p1.x),y:this._p1.y+t*(this._p2.y-this._p1.y)},// Second control point of the right curve
	i2={x:this._p2.x+t*(1-this._p2.x),y:this._p2.y+t*(1-this._p2.y)};/* Second series of auxiliary points */// Second control point of the left curve
	var j0={x:i0.x+t*(i1.x-i0.x),y:i0.y+t*(i1.y-i0.y)},// First control point of the right curve
	j1={x:i1.x+t*(i2.x-i1.x),y:i1.y+t*(i2.y-i1.y)};// The division point (ending point of left curve, starting point of right curve)
	var k={x:j0.x+t*(j1.x-j0.x),y:j0.y+t*(j1.y-j0.y)};return{i0:i0,i1:i1,i2:i2,j0:j0,j1:j1,k:k};};/**
		 * Divides the bezier curve into two bezier functions.
		 *
		 * De Casteljau's algorithm is used to compute the new starting, ending, and
		 * control points.
		 *
		 * @param {number} t must be greater than 0 and lower than 1.
		 *     t === 1 or t === 0 are the starting/ending points of the curve, so no
		 *     division is needed.
		 *
		 * @returns {CubicBezier[]} Returns an array containing two bezier curves
		 *     to the left and the right of t.
		 */CubicBezier.prototype.divideAtT=function(t){if(t<0||t>1){_throwRangeError('t',t);}// Special cases t = 0, t = 1: Curve can be cloned for one side, the other
	// side is a linear curve (with duration 0)
	if(t===0||t===1){var curves=[];curves[t]=CubicBezier.linear();curves[1-t]=this.clone();return curves;}var left={},right={},points=this._getAuxPoints(t);var i0=points.i0,i2=points.i2,j0=points.j0,j1=points.j1,k=points.k;// Normalize derived points, so that the new curves starting/ending point
	// coordinates are (0, 0) respectively (1, 1)
	var factorX=k.x,factorY=k.y;left.p1={x:i0.x/factorX,y:i0.y/factorY};left.p2={x:j0.x/factorX,y:j0.y/factorY};right.p1={x:(j1.x-factorX)/(1-factorX),y:(j1.y-factorY)/(1-factorY)};right.p2={x:(i2.x-factorX)/(1-factorX),y:(i2.y-factorY)/(1-factorY)};return[new CubicBezier(left.p1.x,left.p1.y,left.p2.x,left.p2.y),new CubicBezier(right.p1.x,right.p1.y,right.p2.x,right.p2.y)];};CubicBezier.prototype.divideAtX=function(x,epsilon){if(x<0||x>1){_throwRangeError('x',x);}var t=this.getTForX(x,epsilon);return this.divideAtT(t);};CubicBezier.prototype.divideAtY=function(y,epsilon){if(y<0||y>1){_throwRangeError('y',y);}var t=this.getTForY(y,epsilon);return this.divideAtT(t);};CubicBezier.prototype.clone=function(){return new CubicBezier(this._p1.x,this._p1.y,this._p2.x,this._p2.y);};CubicBezier.prototype.toString=function(){return"cubic-bezier("+[this._p1.x,this._p1.y,this._p2.x,this._p2.y].join(", ")+")";};CubicBezier.linear=function(){return new CubicBezier();};CubicBezier.ease=function(){return new CubicBezier(0.25,0.1,0.25,1.0);};CubicBezier.linear=function(){return new CubicBezier(0.0,0.0,1.0,1.0);};CubicBezier.easeIn=function(){return new CubicBezier(0.42,0,1.0,1.0);};CubicBezier.easeOut=function(){return new CubicBezier(0,0,0.58,1.0);};CubicBezier.easeInOut=function(){return new CubicBezier(0.42,0,0.58,1.0);};})();if(true){// AMD. Register as an anonymous module.
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){'use strict';return{FTScroller:_FTScroller,CubicBezier:CubicBezier};}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module!=='undefined'&&module.exports){module.exports=function(domNode,options){'use strict';return new _FTScroller(domNode,options);};module.exports.FTScroller=_FTScroller;module.exports.CubicBezier=CubicBezier;}

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(620), __esModule: true };

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(621);
	var $Object = __webpack_require__(20).Object;
	module.exports = function defineProperties(T, D){
	  return $Object.defineProperties(T, D);
	};

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(18);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(28), 'Object', {defineProperties: __webpack_require__(38)});

/***/ },
/* 622 */
/***/ function(module, exports) {

	'use strict';
	
	/*global exports*/
	
	function emptyElement(targetEl) {
		for (var i = 0; i < targetEl.children.length; i++) {
			targetEl.removeChild(targetEl.children[i]);
		}
	}
	
	function createElement(nodeName, content, classes) {
		var el = document.createElement(nodeName);
		el.innerHTML = content;
		el.setAttribute("class", classes);
		return el;
	}
	
	function wrapElement(targetEl, wrapEl) {
		var parentEl = targetEl.parentNode;
		wrapEl.appendChild(targetEl);
		parentEl.appendChild(wrapEl);
	}
	
	function unwrapElement(targetEl) {
		var wrappingEl = targetEl.parentNode;
		var wrappingElParent = wrappingEl.parentNode;
		while (wrappingEl.childNodes.length > 0) {
			wrappingElParent.appendChild(wrappingEl.childNodes[0]);
		}
		wrappingElParent.removeChild(wrappingEl);
	}
	
	function createItemsList(containerEl) {
		var itemsList = createElement("ol", "", "o-gallery__items");
		containerEl.appendChild(itemsList);
		return itemsList;
	}
	
	function createItems(containerEl, items) {
		var itemEl;
		var itemEls = [];
		for (var i = 0; i < items.length; i++) {
			itemEl = createElement("li", "&nbsp;", "o-gallery__item");
			if (items[i].selected) {
				itemEl.setAttribute('aria-selected', 'true');
			}
			containerEl.appendChild(itemEl);
			itemEls.push(itemEl);
		}
		return itemEls;
	}
	
	function insertItemContent(config, item, itemEl) {
		emptyElement(itemEl);
		var contentEl = createElement("div", item.content, "o-gallery__item__content");
		itemEl.appendChild(contentEl);
		if (config.captions) {
			var captionEl = createElement("div", item.caption || "", "o-gallery__item__caption");
			itemEl.appendChild(captionEl);
		}
	}
	
	function setPropertyIfAttributeExists(obj, propName, el, attrName) {
		var v = el.getAttribute(attrName);
		if (v !== null) {
			if (v === "true") {
				v = true;
			} else if (v === "false") {
				v = false;
			}
			obj[propName] = v;
		}
	}
	
	function getPropertiesFromAttributes(el, map) {
		var obj = {};
		var prop;
		for (prop in map) {
			if (map.hasOwnProperty(prop)) {
				setPropertyIfAttributeExists(obj, prop, el, map[prop]);
			}
		}
		return obj;
	}
	
	function setAttributesFromProperties(el, obj, map, excl) {
		var exclude = excl || [];
		for (var prop in obj) {
			if (obj.hasOwnProperty(prop) && exclude.indexOf(prop) < 0) {
				el.setAttribute(map[prop], obj[prop]);
			}
		}
	}
	
	exports.emptyElement = emptyElement;
	exports.createElement = createElement;
	exports.wrapElement = wrapElement;
	exports.unwrapElement = unwrapElement;
	exports.createItemsList = createItemsList;
	exports.createItems = createItems;
	exports.insertItemContent = insertItemContent;
	exports.setAttributesFromProperties = setAttributesFromProperties;
	exports.getPropertiesFromAttributes = getPropertiesFromAttributes;

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	/*global require,module */
	'use strict';
	
	var galleryDom = __webpack_require__(622);
	
	/**
	 * Mimics FTScroller without touch interface, transitions or events
	 * Intended for IE8 or other browsers that lack support for CSS transitions
	 */
	function SimpleScroller(containerEl) {
	
		var scroller = this;
		var allItemsEl;
		var viewportEl;
	
		function updateDimensions() {
			scroller.scrollLeft = viewportEl.scrollLeft;
		}
	
		function scrollTo(n) {
			viewportEl.scrollLeft = n;
			updateDimensions();
			containerEl.dispatchEvent(new CustomEvent('scrollend', {
				x: n
			}));
		}
	
		function destroy() {
			if (containerEl.querySelector('.o-gallery__viewport')) {
				galleryDom.unwrapElement(allItemsEl);
			}
		}
	
		allItemsEl = containerEl.querySelector('.o-gallery__items');
		viewportEl = galleryDom.createElement('div', '', 'o-gallery__viewport');
		galleryDom.wrapElement(allItemsEl, viewportEl);
		updateDimensions();
	
		this.contentContainerNode = allItemsEl;
		this.scrollTo = scrollTo;
		this.updateDimensions = updateDimensions;
		this.destroy = destroy;
	}
	
	module.exports = SimpleScroller;

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.add = add;
	
	var _superstore = __webpack_require__(215);
	
	var _superstore2 = _interopRequireDefault(_superstore);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var sessionStore = new _superstore2.default('session', 'ft');
	
	function add(id) {
		sessionStore.get('next-reading-history').then(function (articlesRead) {
			if (!articlesRead) {
				articlesRead = [];
			}
			articlesRead.push(id);
			sessionStore.set('next-reading-history', articlesRead);
		});
	}

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _utils = __webpack_require__(203);
	
	var fireBeacon = function fireBeacon(percentage) {
		var data = {
			action: 'scrolldepth',
			category: 'page',
			meta: {
				percentagesViewed: percentage
			},
			context: {
				product: 'next',
				source: 'next-article'
			}
		};
		(0, _utils.broadcast)('oTracking.event', data);
	};
	
	var intersectionCallback = function intersectionCallback(observer, changes) {
		changes.forEach(function (change) {
			var scrollDepthMarkerEl = change.target;
			fireBeacon(scrollDepthMarkerEl.getAttribute('data-percentage'));
			scrollDepthMarkerEl.parentNode.removeChild(scrollDepthMarkerEl);
			observer.unobserve(scrollDepthMarkerEl);
		});
	};
	
	exports.default = function (flags) {
		var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		var _ref$percentages = _ref.percentages;
		var percentages = _ref$percentages === undefined ? [25, 50, 75, 100] : _ref$percentages;
		var _ref$articleBodySelec = _ref.articleBodySelector;
		var articleBodySelector = _ref$articleBodySelec === undefined ? '.article__body' : _ref$articleBodySelec;
	
		var articleBody = document.querySelector(articleBodySelector);
		if (flags.get('articleScrollDepthTracking') && articleBody && window.IntersectionObserver) {
			(function () {
				var observer = new IntersectionObserver(function (changes) {
					intersectionCallback(this, changes);
				});
				percentages.forEach(function (percentage) {
					// add a scroll depth marker element
					var targetEl = document.createElement('div');
					targetEl.className = 'article__body__scroll-depth-marker';
					targetEl.style.top = percentage + '%';
					targetEl.setAttribute('data-percentage', percentage);
					articleBody.appendChild(targetEl);
					observer.observe(targetEl);
				});
			})();
		}
	};
	
	module.exports = exports['default'];

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _promise = __webpack_require__(185);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _nServiceWorker = __webpack_require__(369);
	
	var serviceWorker = _interopRequireWildcard(_nServiceWorker);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var fetchres = __webpack_require__(337);
	var oDate = __webpack_require__(280);
	var lazyLoadImages = __webpack_require__(366).lazyLoad;
	
	
	var $ = function $(selector) {
		return [].slice.call(document.querySelectorAll(selector));
	};
	
	function createPromise(el, url) {
		return fetch(url, { credentials: 'same-origin' }).then(fetchres.text).then(function (resp) {
			if (!resp) {
				throw new Error('No response');
			}
			el.innerHTML = resp;
			oDate.init(el);
		}).catch(function () {});
	}
	
	module.exports.init = function () {
	
		var articleEl = document.querySelector('.article');
		var dehydratedMetadata = document.getElementById('dehydrated-metadata');
	
		if (!articleEl || !dehydratedMetadata) {
			return;
		}
	
		var articleId = articleEl.getAttribute('data-content-id');
	
		// If there is no articleId don't try to load related content
		if (!articleId) {
			return;
		}
	
		var fetchPromises = [];
		var hydratedMetadata = JSON.parse(dehydratedMetadata.innerHTML);
	
		if (hydratedMetadata.package && hydratedMetadata.package.length) {
			(function () {
				var storyIds = hydratedMetadata.package.map(function (article) {
					return article.id;
				});
				var url = '/article/' + articleId + '/story-package?articleIds=' + storyIds.join() + '&count=5';
	
				fetchPromises = fetchPromises.concat($('.js-story-package').map(function (el) {
					return createPromise(el, url);
				}));
			})();
		}
	
		var specialReport = hydratedMetadata.moreOns && hydratedMetadata.moreOns.find(function (tag) {
			return tag.taxonomy === 'specialReports';
		});
	
		if (specialReport) {
			(function () {
				var url = '/article/' + articleId + '/special-report?tagId=' + encodeURI(specialReport.id) + '&count=5';
	
				fetchPromises = fetchPromises.concat($('.js-special-report').map(function (el) {
					return createPromise(el, url);
				}));
			})();
		}
	
		var moreOns = $('.js-more-on');
	
		if (moreOns.length) {
			(function () {
				var url = '/article/' + articleId + '/more-on?count=3';
	
				var tagIds = hydratedMetadata.moreOns.map(function (moreOn) {
					return encodeURI(moreOn.id);
				}).join(',');
	
				fetchPromises = fetchPromises.concat(moreOns.map(function (el, i) {
					var query = 'tagIds=' + tagIds + '&index=' + i;
					return createPromise(el, url + '&' + query);
				}));
			})();
		}
	
		return _promise2.default.all(fetchPromises.map(function (p) {
			return p.catch(function () {
				return null;
			});
		})).then(function () {
			lazyLoadImages();
			serviceWorker.message({
				type: 'cacheContent',
				content: [].concat((0, _toConsumableArray3.default)(document.querySelectorAll('.more-on .pod__item-wrapper--lead .pod__item__headline-link'))).map(function (linkEl) {
					return { url: linkEl.getAttribute('href') };
				})
			}).catch(function () {});
		});
	};

/***/ },
/* 627 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports.init = function (flags) {
		if (!flags.get('articleTOC')) {
			return false;
		}
	
		var duration = 1000;
		// https://gist.github.com/gre/1650294
		var easeFunction = function easeFunction(t) {
			return 1 - --t * t * t * t;
		};
	
		var tocs = document.querySelectorAll('.table-of-contents');
		if (tocs.length) {
			[].slice.call(tocs).forEach(function (toc) {
				toc.addEventListener('click', function (event) {
					event.preventDefault();
					event.stopPropagation();
	
					var scrollFrom = document.body.scrollTop;
					var scrollDist = document.querySelector(event.target.getAttribute('href')).getBoundingClientRect().top;
					var startTime = new Date();
					var interval = window.setInterval(function () {
						var elapsed = new Date() - startTime;
						document.body.scrollTop = scrollFrom + easeFunction(elapsed / duration) * scrollDist;
					}, 15);
	
					window.setTimeout(function () {
						window.clearInterval(interval);
						window.location.hash = event.target.getAttribute('href');
					}, duration);
				});
			});
		}
	};

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(421);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _nEmailArticle = __webpack_require__(629);
	
	var _oShare = __webpack_require__(660);
	
	var _oShare2 = _interopRequireDefault(_oShare);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.init = function () {
		var shareContainer = document.querySelector('[data-o-component=o-share]');
		if (shareContainer && !shareContainer.classList.contains('data-o-share--js')) {
			new _oShare2.default(shareContainer);
		}
	
		var emailArticle = {}; // we will lazily load the email article stuff when they're needed
		[].concat((0, _toConsumableArray3.default)(document.querySelectorAll('[data-n-article-email-clickable]'))).forEach(function (button) {
			button.addEventListener('click', function () {
				var attr = button.getAttribute('data-n-article-email-free-article');
				var isFreeArticle = attr === true || attr === 'true';
				var mode = isFreeArticle ? _nEmailArticle.emailArticleModes.FREE : _nEmailArticle.emailArticleModes.GIFT_OR_SUB;
				// lazily load the data
				if (!emailArticle.data) emailArticle.data = new _nEmailArticle.EmailArticleData(mode);
				var id = button.getAttribute('data-n-article-email-container');
				var isTop = id === 'top';
				// lazily load the view
				if (!emailArticle[id]) {
					var props = {
						mode: mode,
						isTop: isTop,
						store: emailArticle.data.store,
						actions: emailArticle.data.actions,
						dispatch: emailArticle.data.dispatch
					};
					emailArticle[id] = _react2.default.createElement(_nEmailArticle.EmailArticleView, props);
					var container = document.querySelector('[data-n-article-email-' + id + '-container]');
					_reactDom2.default.render(emailArticle[id], container);
				}
				// toggle showing/hiding of the view
				emailArticle.data.dispatch(emailArticle.data.actions[isTop ? 'toggleOpenTop' : 'toggleOpenBottom']());
			});
		});
	};

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EmailArticleView = exports.emailArticleModes = exports.EmailArticleData = undefined;
	
	var _data = __webpack_require__(630);
	
	var _data2 = _interopRequireDefault(_data);
	
	var _constants = __webpack_require__(649);
	
	var _components = __webpack_require__(653);
	
	var _components2 = _interopRequireDefault(_components);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.EmailArticleData = _data2.default;
	exports.emailArticleModes = _constants.modes;
	exports.EmailArticleView = _components2.default;

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _redux = __webpack_require__(631);
	
	var _reduxThunk = __webpack_require__(646);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _api = __webpack_require__(647);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _actions = __webpack_require__(648);
	
	var _actions2 = _interopRequireDefault(_actions);
	
	var _state = __webpack_require__(652);
	
	var _state2 = _interopRequireDefault(_state);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function _class(mode) {
		(0, _classCallCheck3.default)(this, _class);
	
		this.api = new _api2.default();
		this.actions = new _actions2.default(this.api);
		this.store = (0, _redux.createStore)(_state2.default, (0, _redux.applyMiddleware)(_reduxThunk2.default));
		this.dispatch = this.store.dispatch;
		this.dispatch(this.actions.modeChange(mode));
	};
	
	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(632);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(641);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(643);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(644);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(645);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(642);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(633);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(638);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(634),
	    isHostObject = __webpack_require__(636),
	    isObjectLike = __webpack_require__(637);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}
	
	module.exports = isPlainObject;


/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(635);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 635 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 636 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 637 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(639);


/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ponyfill = __webpack_require__(640);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root = undefined; /* global window */
	
	if (typeof global !== 'undefined') {
		root = global;
	} else if (typeof window !== 'undefined') {
		root = window;
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 640 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports['default'] = combineReducers;
	
	var _createStore = __webpack_require__(632);
	
	var _isPlainObject = __webpack_require__(633);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(642);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var unexpectedKeyCache = {};
	  }
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(390)))

/***/ },
/* 642 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 643 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = applyMiddleware;
	
	var _compose = __webpack_require__(645);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 645 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  var last = funcs[funcs.length - 1];
	  var rest = funcs.slice(0, -1);
	  return function () {
	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ },
/* 646 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }
	
	        return next(action);
	      };
	    };
	  };
	}
	
	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;
	
	exports['default'] = thunk;

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _stringify = __webpack_require__(84);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function post(url, emailAddresses, articleId) {
		return fetch(url, {
			credentials: 'same-origin',
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: (0, _stringify2.default)({
				contentUUID: articleId,
				recipients: emailAddresses
			})
		});
	}
	
	var _class = function () {
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
		}
	
		_class.prototype.creditInfo = function creditInfo() {
			return fetch('/article-email/credits', { credentials: 'same-origin' });
		};
	
		_class.prototype.gift = function gift(emailAddresses, articleId) {
			return post('/article-email/gift', emailAddresses, articleId);
		};
	
		_class.prototype.nonGift = function nonGift(emailAddresses, articleId) {
			return post('/article-email/send', emailAddresses, articleId);
		};
	
		return _class;
	}();

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _constants = __webpack_require__(649);
	
	var _nNotification = __webpack_require__(650);
	
	var _nNotification2 = _interopRequireDefault(_nNotification);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hideKeyboard() {
		document.activeElement.blur();
	}
	
	function validateEmail(email) {
		// return true if invalid
		return email !== '' && !email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/);
	}
	
	var _class = function () {
		function _class(api) {
			(0, _classCallCheck3.default)(this, _class);
	
			this.api = api;
		}
	
		_class.prototype.notifySuccess = function notifySuccess(title, content) {
			return function () {
				hideKeyboard();
				_nNotification2.default.show({ title: title, content: content, type: 'success' });
			};
		};
	
		_class.prototype.notifyError = function notifyError(title, content) {
			return function () {
				hideKeyboard();
				_nNotification2.default.show({ title: title, content: content, type: 'error' });
			};
		};
	
		_class.prototype.modeChange = function modeChange(mode) {
			return { type: _constants.actions.MODE_SET, mode: mode };
		};
	
		_class.prototype.toggleOpenTop = function toggleOpenTop() {
			var actions = this;
			return function (dispatch, getState) {
				// small delay to render initial CSS to transition from
				var open = function open() {
					return setTimeout(function () {
						return dispatch({ type: _constants.actions.TOGGLE_OPEN_TOP });
					}, 100);
				};
				if (getState().isReady) {
					open();
				} else {
					dispatch(actions.getCreditInfo(open));
				}
			};
		};
	
		_class.prototype.toggleOpenBottom = function toggleOpenBottom() {
			var actions = this;
			return function (dispatch, getState) {
				// small delay to render initial CSS to transition from
				var open = function open() {
					return setTimeout(function () {
						return dispatch({ type: _constants.actions.TOGGLE_OPEN_BOTTOM });
					}, 100);
				};
				if (getState().isReady) {
					open();
				} else {
					dispatch(actions.getCreditInfo(open));
				}
			};
		};
	
		_class.prototype.getCreditInfo = function getCreditInfo(postAction) {
			var actions = this;
			return function (dispatch) {
				dispatch({ type: _constants.actions.GET_CREDIT_INFO });
				return actions.api.creditInfo().then(function (response) {
					return response.json();
				}).then(function (json) {
					return dispatch(actions.handleCreditInfoResponse(json));
				}).then(function () {
					if (postAction) postAction();
				}).catch(function () {
					return dispatch(actions.notifyError('Oops.', 'We\'re unable to get gift article credit information. Please try again'));
				});
			};
		};
	
		_class.prototype.handleCreditInfoResponse = function handleCreditInfoResponse(json) {
			return { type: _constants.actions.GET_CREDIT_INFO_SUCCESS, monthlyAllowance: json.credits.allowance, credit: json.credits.remainingCredits };
		};
	
		_class.prototype.isGiftChange = function isGiftChange(isGift) {
			return { type: _constants.actions.IS_GIFT_CHANGE, isGift: isGift };
		};
	
		_class.prototype.emailAddressChange = function emailAddressChange(index, value) {
			return { type: _constants.actions.EMAIL_ADDRESS_CHANGE, index: index, value: value };
		};
	
		_class.prototype.addEmailAddress = function addEmailAddress() {
			return { type: _constants.actions.ADD_EMAIL_ADDRESS };
		};
	
		_class.prototype.removeEmailAddress = function removeEmailAddress(index) {
			return { type: _constants.actions.REMOVE_EMAIL_ADDRESS, index: index };
		};
	
		_class.prototype.validateThenSend = function validateThenSend() {
			var actions = this;
			return function (dispatch, getState) {
				var state = getState();
				var results = state.emailAddresses.map(validateEmail);
				// if all email addresses are blank, then the first one has to be an error
				if (state.emailAddresses.every(function (email) {
					return email === '';
				})) results[0] = true;
				dispatch({ type: _constants.actions.VALIDATION_RESULTS, results: results });
				if (results.indexOf(true) === -1) {
					dispatch(actions.send());
				}
			};
		};
	
		_class.prototype.send = function send() {
			var actions = this;
			return function (dispatch, getState) {
				var state = getState();
				dispatch({ type: _constants.actions.SEND });
				var articleId = document.querySelector('.article').getAttribute('data-content-id');
				var fetch = state.isGift ? actions.api.gift : actions.api.nonGift;
				var nonBlankEmailAddresses = state.emailAddresses.filter(function (a) {
					return a !== '';
				});
				return fetch(nonBlankEmailAddresses, articleId).then(function (response) {
					return response.json();
				}).then(function (json) {
					dispatch(actions.handleSendResponse(json));
					return json;
				}).then(function (json) {
					var count = json.results.filter(function (r) {
						return r.success;
					}).length;
					var message = 'This article has been sent to ' + count + ' recipient' + (count !== 1 ? 's' : '');
					if (state.isGift) {
						var remainder = state.credit - count;
						message += '. You can send ' + remainder + ' more gift article' + (remainder !== 1 ? 's' : '') + ' this month';
					}
					dispatch(actions.notifySuccess('Sent.', message));
				}).then(function () {
					return dispatch(actions.getCreditInfo());
				}).catch(function () {
					dispatch(actions.handleSendError());
					dispatch(actions.notifyError('Oops.', 'We\'re unable to send this article right now. Please try again'));
				});
			};
		};
	
		_class.prototype.handleSendResponse = function handleSendResponse() {
			return { type: _constants.actions.SEND_SUCCESS };
		};
	
		_class.prototype.handleSendError = function handleSendError() {
			return { type: _constants.actions.SEND_FAILURE };
		};
	
		_class.prototype.closeTop = function closeTop() {
			return { type: _constants.actions.CLOSE_TOP };
		};
	
		_class.prototype.closeBottom = function closeBottom() {
			return { type: _constants.actions.CLOSE_BOTTOM };
		};
	
		return _class;
	}();

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 649 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var actions = exports.actions = {
		MODE_SET: 'MODE_SET',
		TOGGLE_OPEN_TOP: 'TOGGLE_OPEN_TOP',
		TOGGLE_OPEN_BOTTOM: 'TOGGLE_OPEN_BOTTOM',
		GET_CREDIT_INFO: 'GET_CREDIT_INFO',
		GET_CREDIT_INFO_SUCCESS: 'GET_CREDIT_INFO_SUCCESS',
		IS_GIFT_CHANGE: 'IS_GIFT_CHANGE',
		EMAIL_ADDRESS_CHANGE: 'EMAIL_ADDRESS_CHANGE',
		ADD_EMAIL_ADDRESS: 'ADD_EMAIL_ADDRESS',
		REMOVE_EMAIL_ADDRESS: 'REMOVE_EMAIL_ADDRESS',
		VALIDATION_RESULTS: 'VALIDATION_RESULTS',
		SEND: 'SEND',
		SEND_SUCCESS: 'SEND_SUCCESS',
		SEND_FAILURE: 'SEND_FAILURE',
		CLOSE_TOP: 'CLOSE_TOP',
		CLOSE_BOTTOM: 'CLOSE_BOTTOM'
	};
	
	var modes = exports.modes = {
		GIFT_OR_SUB: 'GIFT_OR_SUB',
		SUB_ONLY: 'SUB_ONLY',
		FREE: 'FREE'
	};

/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var template = __webpack_require__(651);
	var timeoutDuration = 5000;
	
	var stack = [];
	var eventShow = function eventShow(e) {
		return show(e.detail);
	};
	var isInstantiated = false;
	var container = void 0;
	
	var Notice = function () {
		function Notice(options) {
			(0, _classCallCheck3.default)(this, Notice);
	
	
			options.trackable = options.trackable || 'notification-' + options.type;
	
			this.notice = document.createElement('div');
			this.notice.appendChild(template(options));
			this.notice.querySelector('button').onclick = this.hide.bind(this);
	
			var firstChild = container.firstChild;
			container.insertBefore(this.notice, firstChild);
	
			if (options.duration !== 0) {
				this.timeout = setTimeout(this.hide.bind(this), options.duration || timeoutDuration);
			}
	
			this.optionsContent = options.content;
		}
	
		Notice.prototype.hide = function hide() {
			clearTimeout(this.timeout);
			this.notice.parentNode.removeChild(this.notice);
			var index = stack.indexOf(this);
			if (index > -1) {
				stack.splice(index, 1);
			}
			this.dispatchNotificationCloseEvent();
		};
	
		Notice.prototype.dispatchNotificationCloseEvent = function dispatchNotificationCloseEvent() {
			document.dispatchEvent(new CustomEvent('nNotification.close'));
		};
	
		return Notice;
	}();
	
	function show(options) {
		if (!isInstantiated) {
			init();
		}
		if (stack.length > 0 && stack[stack.length - 1].optionsContent === options.content) {
			var lastNotice = stack[stack.length - 1];
			clearTimeout(lastNotice.timeout);
			lastNotice.timeout = setTimeout(lastNotice.hide.bind(lastNotice), timeoutDuration);
		} else {
			stack.push(new Notice(options));
		}
	}
	
	function init() {
		if (isInstantiated) return;
	
		container = document.createElement('div');
		container.className = 'n-notification';
		document.body.appendChild(container);
		document.addEventListener("nNotification.show", eventShow, false);
		isInstantiated = true;
	}
	
	function teardown() {
		stack.forEach(function (item) {
			return item.hide();
		});
		stack.length = 0;
		container.parentNode.removeChild(container);
		document.removeEventListener("nNotification.show", eventShow, false);
		isInstantiated = false;
	}
	
	module.exports = {
		init: init,
		show: show,
		teardown: teardown
	};

/***/ },
/* 651 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function (options) {
	
		var noticeEl = document.createElement('div');
		noticeEl.className = 'n-notification__item n-notification--' + (options.type ? options.type : 'default');
		noticeEl.setAttribute("role", "alert");
		noticeEl.setAttribute("data-trackable", options.trackable);
	
		var contentWrapperEl = document.createElement('div');
		contentWrapperEl.className = "n-notification__content-wrapper";
	
		if (options.title) {
			var titleEl = document.createElement('h3');
			titleEl.className = "n-notification__title";
			titleEl.innerHTML = options.title;
			contentWrapperEl.appendChild(titleEl);
		}
	
		if (options.content) {
			var contentEl = document.createElement('div');
			contentEl.className = "n-notification__content";
			contentEl.innerHTML = options.content;
			contentWrapperEl.appendChild(contentEl);
		}
	
		var buttonEl = document.createElement('button');
		buttonEl.className = "n-notification__close";
		buttonEl.setAttribute("data-trackable", "close");
		buttonEl.innerHTML = "Close";
	
		noticeEl.appendChild(contentWrapperEl);
		noticeEl.appendChild(buttonEl);
	
		return noticeEl;
	};

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = reducer;
	
	var _constants = __webpack_require__(649);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultState = {
		isReady: false,
		isOpenTop: false,
		isOpenBottom: false,
		credit: 0,
		monthlyAllowance: 0,
		isGift: false,
		emailAddresses: [''],
		emailAddressErrors: [false],
		isSending: false
	};
	
	function track(state, action) {
		// track some actions
		if (action.type.indexOf('redux') === -1 && action.type !== _constants.actions.EMAIL_ADDRESS_CHANGE) {
			// remove email addresses
			var anonymousEmails = state.emailAddresses.map(function (email) {
				return email === '' ? '<blank>' : '<populated>';
			});
			var anonymousState = (0, _assign2.default)({}, state, { emailAddresses: anonymousEmails });
			document.body.dispatchEvent(new CustomEvent('oTracking.event', {
				detail: {
					category: 'email-article',
					action: action.type,
					fullAction: action,
					state: anonymousState
				},
				bubbles: true
			}));
		}
	}
	
	function reducer() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];
		var action = arguments[1];
	
		track(state, action);
		switch (action.type) {
			case _constants.actions.MODE_SET:
				return (0, _assign2.default)({}, state, {
					mode: action.mode,
					isReady: action.mode !== _constants.modes.GIFT_OR_SUB, // need to get credit info
					isGift: action.mode === _constants.modes.GIFT_OR_SUB
				});
	
			case _constants.actions.TOGGLE_OPEN_TOP:
				return (0, _assign2.default)({}, state, { isOpenTop: !state.isOpenTop });
	
			case _constants.actions.TOGGLE_OPEN_BOTTOM:
				return (0, _assign2.default)({}, state, { isOpenBottom: !state.isOpenBottom });
	
			case _constants.actions.CLOSE_TOP:
				return (0, _assign2.default)({}, state, { isOpenTop: false });
	
			case _constants.actions.CLOSE_BOTTOM:
				return (0, _assign2.default)({}, state, { isOpenBottom: false });
	
			case _constants.actions.GET_CREDIT_INFO:
				return state;
	
			case _constants.actions.GET_CREDIT_INFO_SUCCESS:
				return (0, _assign2.default)({}, state, { credit: action.credit, monthlyAllowance: action.monthlyAllowance, isGift: action.credit > 0, emailAddresses: [''], isReady: true });
	
			case _constants.actions.IS_GIFT_CHANGE:
				if (action.isGift && state.emailAddresses.length > state.credit) return (0, _assign2.default)({}, state, {
					isGift: action.isGift,
					emailAddresses: state.emailAddresses.slice(0, state.credit)
				});else return (0, _assign2.default)({}, state, { isGift: action.isGift });
	
			case _constants.actions.EMAIL_ADDRESS_CHANGE:
				// some users comma-separate addresses in a single field
				// so we split them up into separate fields
				// and ignore anything over the maximum number allowed
				var maxItems = state.isGift ? state.credit : 10;
				var changed = action.value.split(',')
				// up to the maximum number of email addresses
				.slice(0, maxItems - state.emailAddresses.length + 1);
				var all = state.emailAddresses.slice(0, action.index).concat(changed).concat(state.emailAddresses.slice(action.index + 1));
				return (0, _assign2.default)({}, state, { emailAddresses: all });
	
			case _constants.actions.ADD_EMAIL_ADDRESS:
				return (0, _assign2.default)({}, state, {
					emailAddresses: state.emailAddresses.concat('')
				});
	
			case _constants.actions.REMOVE_EMAIL_ADDRESS:
				return (0, _assign2.default)({}, state, {
					emailAddresses: state.emailAddresses.filter(function (x, i) {
						return i !== action.index;
					})
				});
	
			case _constants.actions.VALIDATION_RESULTS:
				return (0, _assign2.default)({}, state, {
					emailAddressErrors: action.results
				});
	
			case _constants.actions.SEND:
				return (0, _assign2.default)({}, state, { isSending: true });
	
			case _constants.actions.SEND_SUCCESS:
				return (0, _assign2.default)({}, state, { isSending: false, isOpenTop: false, isOpenBottom: false, isReady: false });
	
			case _constants.actions.SEND_FAILURE:
				return (0, _assign2.default)({}, state, { isSending: false });
	
			default:
				return state;
	
		}
	}
	module.exports = exports['default'];

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _constants = __webpack_require__(649);
	
	var _emailSubOrGiftArticle = __webpack_require__(654);
	
	var _emailSubOrGiftArticle2 = _interopRequireDefault(_emailSubOrGiftArticle);
	
	var _emailSubOnlyArticle = __webpack_require__(658);
	
	var _emailSubOnlyArticle2 = _interopRequireDefault(_emailSubOnlyArticle);
	
	var _emailFreeArticle = __webpack_require__(659);
	
	var _emailFreeArticle2 = _interopRequireDefault(_emailFreeArticle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function (_React$Component) {
		(0, _inherits3.default)(_class, _React$Component);
	
		function _class(props) {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));
		}
	
		_class.prototype.componentWillMount = function componentWillMount() {
			var _this2 = this;
	
			this.setState(this.props.store.getState());
			this.storeUnsubscribe = this.props.store.subscribe(function () {
				return _this2.setState(_this2.props.store.getState());
			});
		};
	
		_class.prototype.componentWillUnmount = function componentWillUnmount() {
			this.storeUnsubscribe();
		};
	
		_class.prototype.render = function render() {
			var _this3 = this;
	
			var actions = this.props.actions;
			var dispatch = this.props.dispatch;
			if (this.state.mode === _constants.modes.GIFT_OR_SUB) {
				return _react2.default.createElement(_emailSubOrGiftArticle2.default, {
					isReady: this.state.isReady,
					isOpen: this.props.isTop ? this.state.isOpenTop : this.state.isOpenBottom,
					isGift: this.state.isGift,
					onIsGiftChange: function onIsGiftChange(isGift) {
						return dispatch(actions.isGiftChange(isGift));
					},
					credit: this.state.credit,
					monthlyAllowance: this.state.monthlyAllowance,
					emailAddresses: this.state.emailAddresses,
					emailAddressErrors: this.state.emailAddressErrors,
					onEmailAddressChange: function onEmailAddressChange(index, value) {
						return dispatch(actions.emailAddressChange(index, value));
					},
					onAddEmailAddress: function onAddEmailAddress() {
						return dispatch(actions.addEmailAddress());
					},
					onRemoveEmailAddress: function onRemoveEmailAddress(index) {
						return dispatch(actions.removeEmailAddress(index));
					},
					onSend: function onSend() {
						return dispatch(actions.validateThenSend());
					},
					isSending: this.state.isSending,
					onClose: function onClose() {
						return dispatch(_this3.props.isTop ? actions.closeTop() : actions.closeBottom());
					}
				});
			} else if (this.state.mode === _constants.modes.SUB_ONLY) {
				return _react2.default.createElement(_emailSubOnlyArticle2.default, {
					isReady: this.state.isReady,
					isOpen: this.props.isTop ? this.state.isOpenTop : this.state.isOpenBottom,
					emailAddresses: this.state.emailAddresses,
					emailAddressErrors: this.state.emailAddressErrors,
					onEmailAddressChange: function onEmailAddressChange(index, value) {
						return dispatch(actions.emailAddressChange(index, value));
					},
					onAddEmailAddress: function onAddEmailAddress() {
						return dispatch(actions.addEmailAddress());
					},
					onRemoveEmailAddress: function onRemoveEmailAddress(index) {
						return dispatch(actions.removeEmailAddress(index));
					},
					onSend: function onSend() {
						return dispatch(actions.validateThenSend());
					},
					isSending: this.state.isSending,
					onClose: function onClose() {
						return dispatch(_this3.props.isTop ? actions.closeTop() : actions.closeBottom());
					}
				});
			} else if (this.state.mode === _constants.modes.FREE) {
				return _react2.default.createElement(_emailFreeArticle2.default, {
					isReady: this.state.isReady,
					isOpen: this.props.isTop ? this.state.isOpenTop : this.state.isOpenBottom,
					emailAddresses: this.state.emailAddresses,
					emailAddressErrors: this.state.emailAddressErrors,
					onEmailAddressChange: function onEmailAddressChange(index, value) {
						return dispatch(actions.emailAddressChange(index, value));
					},
					onAddEmailAddress: function onAddEmailAddress() {
						return dispatch(actions.addEmailAddress());
					},
					onRemoveEmailAddress: function onRemoveEmailAddress(index) {
						return dispatch(actions.removeEmailAddress(index));
					},
					onSend: function onSend() {
						return dispatch(actions.validateThenSend());
					},
					isSending: this.state.isSending,
					onClose: function onClose() {
						return dispatch(_this3.props.isTop ? actions.closeTop() : actions.closeBottom());
					}
				});
			}
		};
	
		return _class;
	}(_react2.default.Component);
	
	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _giftOrNotSelection = __webpack_require__(655);
	
	var _giftOrNotSelection2 = _interopRequireDefault(_giftOrNotSelection);
	
	var _emailAddressList = __webpack_require__(656);
	
	var _emailAddressList2 = _interopRequireDefault(_emailAddressList);
	
	var _footnote = __webpack_require__(657);
	
	var _footnote2 = _interopRequireDefault(_footnote);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (_ref) {
		var isReady = _ref.isReady;
		var isOpen = _ref.isOpen;
		var isGift = _ref.isGift;
		var onIsGiftChange = _ref.onIsGiftChange;
		var credit = _ref.credit;
		var monthlyAllowance = _ref.monthlyAllowance;
		var emailAddresses = _ref.emailAddresses;
		var emailAddressErrors = _ref.emailAddressErrors;
		var onEmailAddressChange = _ref.onEmailAddressChange;
		var onAddEmailAddress = _ref.onAddEmailAddress;
		var onRemoveEmailAddress = _ref.onRemoveEmailAddress;
		var onSend = _ref.onSend;
		var isSending = _ref.isSending;
		var onClose = _ref.onClose;
		return _react2.default.createElement(
			'div',
			{ className: 'email-article email-article--' + (isReady && isOpen ? 'open' : 'closed') },
			_react2.default.createElement(
				'div',
				{ className: 'email-article__border' },
				_react2.default.createElement(
					'button',
					{ onClick: onClose, type: 'button', className: 'o-buttons o-buttons--medium email-article__close' },
					_react2.default.createElement(
						'i',
						null,
						'Close'
					)
				),
				_react2.default.createElement(
					'form',
					{ noValidate: true, onSubmit: function onSubmit(e) {
							e.preventDefault();onSend();
						}, className: 'email-article__container' },
					_react2.default.createElement(
						'h1',
						{ className: 'email-article__title' },
						'Email this subscriber-only article'
					),
					_react2.default.createElement(_giftOrNotSelection2.default, {
						isGift: isGift,
						onIsGiftChange: onIsGiftChange,
						credit: credit,
						monthlyAllowance: monthlyAllowance
					}),
					_react2.default.createElement('div', { className: 'email-article__section-break' }),
					_react2.default.createElement(_emailAddressList2.default, {
						items: emailAddresses,
						errors: emailAddressErrors,
						onItemChange: onEmailAddressChange,
						onAdd: onAddEmailAddress,
						onRemove: onRemoveEmailAddress,
						isGift: isGift,
						credit: credit,
						showMaySub: true
					}),
					_react2.default.createElement(
						'button',
						{ type: 'submit', disabled: isSending, className: 'email-article__submit o-buttons o-buttons--standout o-buttons--big' },
						'Send article'
					),
					_react2.default.createElement(_footnote2.default, null)
				)
			)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function giftLabelText(credit, monthlyAllowance) {
		if (credit > 0) return _react2.default.createElement(
			"div",
			{ className: "gift-or-not__option-text" },
			_react2.default.createElement(
				"div",
				null,
				"Send as a gift article that can be read by anyone"
			),
			_react2.default.createElement(
				"div",
				{ className: "gift-or-not__gift-note" },
				"You can send ",
				_react2.default.createElement(
					"span",
					{ className: "gift-or-not__gift-count" },
					credit,
					" gift article",
					credit !== 1 ? 's' : ''
				),
				" this month"
			)
		);else return _react2.default.createElement(
			"div",
			{ className: "gift-or-not__option-text" },
			_react2.default.createElement(
				"div",
				{ className: "gift-or-not__gift-note" },
				"You can send ",
				_react2.default.createElement(
					"span",
					{ className: "gift-or-not__gift-count" },
					"0 gift articles"
				),
				" this month. You will be able to send ",
				monthlyAllowance,
				" more next month"
			)
		);
	}
	
	exports.default = function (_ref) {
		var isGift = _ref.isGift;
		var onIsGiftChange = _ref.onIsGiftChange;
		var credit = _ref.credit;
		var monthlyAllowance = _ref.monthlyAllowance;
		return _react2.default.createElement(
			"div",
			{ className: "gift-or-not" },
			_react2.default.createElement(
				"div",
				{ className: "gift-or-not__option" },
				_react2.default.createElement("input", { type: "radio", onChange: function onChange() {
						return onIsGiftChange(true);
					}, checked: isGift, disabled: credit === 0,
					id: "gift-or-not__option--gift", className: "o-forms-radio" }),
				_react2.default.createElement(
					"label",
					{ htmlFor: "gift-or-not__option--gift", className: "gift-or-not__label o-forms-label" },
					_react2.default.createElement("div", { className: "gift-or-not__option-icon gift-or-not__option-icon--gift" }),
					giftLabelText(credit, monthlyAllowance)
				)
			),
			_react2.default.createElement(
				"div",
				{ className: "gift-or-not__option" },
				_react2.default.createElement("input", { type: "radio", onChange: function onChange() {
						return onIsGiftChange(false);
					}, checked: !isGift,
					id: "gift-or-not__option--non-gift", className: "o-forms-radio" }),
				_react2.default.createElement(
					"label",
					{ htmlFor: "gift-or-not__option--non-gift", className: "gift-or-not__label o-forms-label" },
					_react2.default.createElement("div", { className: "gift-or-not__option-icon gift-or-not__option-icon--non-gift" }),
					_react2.default.createElement(
						"div",
						{ className: "gift-or-not__option-text" },
						"Send as a non-gift article that can be read by subscribers only"
					)
				)
			)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function subNote(isGift, showMaySub) {
		if (!isGift && showMaySub) return _react2.default.createElement(
			"div",
			{ className: "email-address__note" },
			"This recipient may need to be a subscriber to read this content"
		);
	}
	
	function giftNote(items, isGift, credit) {
		if (isGift) {
			var remainder = credit - items.length;
			return _react2.default.createElement(
				"div",
				{ className: "email-address__note" },
				"You will have ",
				_react2.default.createElement(
					"span",
					{ className: "email-address__gift-count" },
					remainder,
					" gift article",
					remainder !== 1 ? 's' : ''
				),
				" remaining this month"
			);
		}
	}
	
	function inputs(items, errors, onItemChange, onAdd, onRemove, isGift, credit) {
		var maxItems = isGift ? credit : 10;
		return items.map(function (address, index) {
			var error = !errors[index] ? null : _react2.default.createElement(
				"div",
				{ className: "email-address__error o-forms-errortext" },
				"Please enter a valid email"
			);
			var action = maxItems === 1 || index + 1 === items.length && index + 1 < maxItems ? 'add' : 'remove';
			var button = _react2.default.createElement(
				"div",
				{ className: "email-address__button" },
				_react2.default.createElement(
					"button",
					{ type: "button", className: "o-buttons o-buttons--big",
						onClick: function onClick() {
							return action === 'add' ? onAdd() : onRemove(index);
						},
						disabled: maxItems === 1 },
					_react2.default.createElement(
						"i",
						{ className: "email-address__button--" + action },
						action
					)
				)
			);
			return _react2.default.createElement(
				"div",
				{ key: index, className: "email-address__item o-forms-group " + (error ? 'o-forms--error' : '') },
				_react2.default.createElement(
					"div",
					{ className: "email-address__input-button" },
					_react2.default.createElement("input", { type: "email", className: "o-forms-text email-address__input",
						autoFocus: true,
						value: address,
						onChange: function onChange(event) {
							return onItemChange(index, event.target.value);
						} }),
					button
				),
				error
			);
		});
	}
	
	exports.default = function (_ref) {
		var items = _ref.items;
		var errors = _ref.errors;
		var onItemChange = _ref.onItemChange;
		var onAdd = _ref.onAdd;
		var onRemove = _ref.onRemove;
		var isGift = _ref.isGift;
		var credit = _ref.credit;
		var showMaySub = _ref.showMaySub;
		return _react2.default.createElement(
			"div",
			{ className: "email-address" },
			_react2.default.createElement(
				"div",
				{ className: "email-address__label" },
				"Enter recipient’s email address"
			),
			_react2.default.createElement(
				"div",
				{ className: "email-address__list" },
				inputs(items, errors, onItemChange, onAdd, onRemove, isGift, credit)
			),
			subNote(isGift, showMaySub),
			giftNote(items, isGift, credit)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
		return _react2.default.createElement(
			"div",
			{ className: "email-article__footnote" },
			"This email will be sent from ",
			_react2.default.createElement(
				"a",
				{ href: "mailto:gifting@notice.ft.com" },
				"gifting@notice.ft.com"
			),
			". Your name or registered email address will also be included in the email"
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _emailAddressList = __webpack_require__(656);
	
	var _emailAddressList2 = _interopRequireDefault(_emailAddressList);
	
	var _footnote = __webpack_require__(657);
	
	var _footnote2 = _interopRequireDefault(_footnote);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (_ref) {
		var isReady = _ref.isReady;
		var isOpen = _ref.isOpen;
		var emailAddresses = _ref.emailAddresses;
		var emailAddressErrors = _ref.emailAddressErrors;
		var onEmailAddressChange = _ref.onEmailAddressChange;
		var onAddEmailAddress = _ref.onAddEmailAddress;
		var onRemoveEmailAddress = _ref.onRemoveEmailAddress;
		var onSend = _ref.onSend;
		var isSending = _ref.isSending;
		var onClose = _ref.onClose;
		return _react2.default.createElement(
			'div',
			{ className: 'email-article email-article--' + (isReady && isOpen ? 'open' : 'closed') },
			_react2.default.createElement(
				'div',
				{ className: 'email-article__border' },
				_react2.default.createElement(
					'button',
					{ onClick: onClose, type: 'button', className: 'o-buttons o-buttons--medium email-article__close' },
					_react2.default.createElement(
						'i',
						null,
						'Close'
					)
				),
				_react2.default.createElement(
					'form',
					{ noValidate: true, onSubmit: function onSubmit(e) {
							e.preventDefault();onSend();
						}, className: 'email-article__container' },
					_react2.default.createElement(
						'h1',
						{ className: 'email-article__title' },
						'Email this subscriber-only article'
					),
					_react2.default.createElement(_emailAddressList2.default, {
						items: emailAddresses,
						errors: emailAddressErrors,
						onItemChange: onEmailAddressChange,
						onAdd: onAddEmailAddress,
						onRemove: onRemoveEmailAddress,
						showMaySub: true
					}),
					_react2.default.createElement(
						'button',
						{ type: 'submit', disabled: isSending, className: 'email-article__submit o-buttons o-buttons--standout o-buttons--big' },
						'Send article'
					),
					_react2.default.createElement(_footnote2.default, null)
				)
			)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _emailAddressList = __webpack_require__(656);
	
	var _emailAddressList2 = _interopRequireDefault(_emailAddressList);
	
	var _footnote = __webpack_require__(657);
	
	var _footnote2 = _interopRequireDefault(_footnote);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (_ref) {
		var isReady = _ref.isReady;
		var isOpen = _ref.isOpen;
		var emailAddresses = _ref.emailAddresses;
		var emailAddressErrors = _ref.emailAddressErrors;
		var onEmailAddressChange = _ref.onEmailAddressChange;
		var onAddEmailAddress = _ref.onAddEmailAddress;
		var onRemoveEmailAddress = _ref.onRemoveEmailAddress;
		var onSend = _ref.onSend;
		var isSending = _ref.isSending;
		var onClose = _ref.onClose;
		return _react2.default.createElement(
			'div',
			{ className: 'email-article email-article--' + (isReady && isOpen ? 'open' : 'closed') },
			_react2.default.createElement(
				'div',
				{ className: 'email-article__border' },
				_react2.default.createElement(
					'button',
					{ onClick: onClose, type: 'button', className: 'o-buttons o-buttons--medium email-article__close' },
					_react2.default.createElement(
						'i',
						null,
						'Close'
					)
				),
				_react2.default.createElement(
					'form',
					{ noValidate: true, onSubmit: function onSubmit(e) {
							e.preventDefault();onSend();
						}, className: 'email-article__container' },
					_react2.default.createElement(
						'h1',
						{ className: 'email-article__title' },
						'Email this free article'
					),
					_react2.default.createElement(_emailAddressList2.default, {
						items: emailAddresses,
						errors: emailAddressErrors,
						onItemChange: onEmailAddressChange,
						onAdd: onAddEmailAddress,
						onRemove: onRemoveEmailAddress
					}),
					_react2.default.createElement(
						'button',
						{ type: 'submit', disabled: isSending, className: 'email-article__submit o-buttons o-buttons--standout o-buttons--big' },
						'Send article'
					),
					_react2.default.createElement(_footnote2.default, null)
				)
			)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(661);

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*global require, module*/
	var oShare = __webpack_require__(662);
	
	var constructAll = function constructAll() {
		oShare.init();
		document.removeEventListener('o.DOMContentLoaded', constructAll);
	};
	
	document.addEventListener('o.DOMContentLoaded', constructAll);
	
	module.exports = oShare;

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _create = __webpack_require__(110);
	
	var _create2 = _interopRequireDefault(_create);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**global require,module*/
	
	var DomDelegate = __webpack_require__(141);
	var TextCopyHelper = __webpack_require__(663);
	
	var socialUrls = {
		twitter: "https://twitter.com/intent/tweet?url={{url}}&text={{title}}&related={{relatedTwitterAccounts}}&via=FT",
		facebook: "http://www.facebook.com/sharer.php?u={{url}}&t={{title}}+|+{{titleExtra}}",
		linkedin: "http://www.linkedin.com/shareArticle?mini=true&url={{url}}&title={{title}}+|+{{titleExtra}}&summary={{summary}}&source=Financial+Times",
		googleplus: "https://plus.google.com/share?url={{url}}",
		reddit: "http://reddit.com/submit?url={{url}}&title={{title}}",
		pinterest: "http://www.pinterest.com/pin/create/button/?url={{url}}&description={{title}}",
		url: "{{url}}"
	};
	
	/**
	  * @class Share
	  *
	  * @param {(HTMLElement|string)} [el=document.body] - Element where to search for an o-share component. You can pass an HTMLElement or a selector string
	  * @param {Object} config - Optional
	  * @param {string} config.url - Optional, url to share
	  * @param {string} config.title - Optional, title to be used in social network sharing
	  * @param {string} config.titleExtra - Optional, extra bit to add to the title for some social networks
	  * @param {string} config.summary - Optional, summary of the page that's being shared
	  * @param {string} config.relatedTwitterAccounts - Optional, extra information for sharing on Twitter
	  * @param {Object[]} config.links - Optional, array of strings of supported social network names that you want rendered
	  */
	function Share(rootEl, config) {
		var oShare = this;
		var openWindows = {};
	
		/**
	   * Helper function to dispatch namespaced events, namespace defaults to oShare
	   *
	   * @private
	   */
		function dispatchCustomEvent(event) {
			var data = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
			var namespace = arguments.length <= 2 || arguments[2] === undefined ? 'oShare' : arguments[2];
	
			oShare.rootEl.dispatchEvent(new CustomEvent(namespace + '.' + event, {
				detail: data,
				bubbles: true
			}));
		}
	
		/**
	   * Click event handler that checks the event target is an o-share action, and acts depending on if it's a social network or a link
	   *
	   * @private
	   */
		function handleClick(ev) {
			var actionEl = ev.target.closest('li.o-share__action');
	
			if (oShare.rootEl.contains(actionEl) && actionEl.querySelector('a[href]')) {
				ev.preventDefault();
				ev.stopPropagation();
	
				var url = actionEl.querySelector('a[href]').href;
	
				dispatchCustomEvent('event', {
					category: 'share',
					action: 'click',
					button: actionEl.textContent.trim().toLowerCase()
				}, 'oTracking');
	
				if (actionEl.classList.contains('o-share__action--url')) {
					copyLink(url, actionEl);
				} else {
					shareSocial(url);
				}
			}
		}
	
		/**
	   * Event handler for the link element. Sets up a {@link TextCopyHelper} and dispatches the 'oShare.open' event
	   *
	   * @private
	   * @param {string} url - URL to be copied
	   * @param {HTMLElement} parentEl - List element that will contain the {@link TextCopyHelper}
	   */
		function copyLink(url, parentEl) {
			if (!url || !parentEl || parentEl.hasAttribute("aria-selected")) {
				return;
			}
			parentEl.setAttribute('aria-selected', 'true');
	
			new TextCopyHelper({
				message: "Copy this link for sharing",
				text: url,
				parentEl: parentEl,
				onCopy: function onCopy() {
					dispatchCustomEvent('copy', {
						share: oShare,
						action: "url",
						url: url
					});
				},
				onDestroy: function onDestroy() {
					parentEl.removeAttribute('aria-selected');
				}
			});
	
			dispatchCustomEvent('open', {
				share: oShare,
				action: "url",
				url: url
			});
		}
	
		/**
	   * Event handler for social network actions. Opens up a new window for that social network and dispatched the 'oShare.open' event
	   *
	   * @private
	   * @param {string} url - URL to be loaded in the new window
	   */
		function shareSocial(url) {
			if (url) {
				if (openWindows[url] && !openWindows[url].closed) {
					openWindows[url].focus();
				} else {
					openWindows[url] = window.open(url, '', 'width=646,height=436');
				}
	
				dispatchCustomEvent('open', {
					share: oShare,
					action: "social",
					url: url
				});
			}
		}
	
		/**
	   * Transforms the default social urls
	   *
	   * @private
	   * @param {string} socialNetwork - Name of the social network that we support (twitter, facebook, linkedin, googleplus, reddit, pinterest, url)
	   */
		function generateSocialUrl(socialNetwork) {
			var templateUrl = socialUrls[socialNetwork];
			templateUrl = templateUrl.replace('{{url}}', config.url).replace('{{title}}', encodeURIComponent(config.title)).replace('{{titleExtra}}', encodeURIComponent(config.titleExtra)).replace('{{summary}}', encodeURIComponent(config.summary)).replace('{{relatedTwitterAccounts}}', encodeURIComponent(config.relatedTwitterAccounts));
			return templateUrl;
		}
	
		/**
	   * Renders the list of social networks in {@link config.links}
	   *
	   * @private
	   */
		function render() {
			var ulElement = document.createElement('ul');
			for (var i = 0; i < config.links.length; i++) {
				var liElement = document.createElement('li');
				liElement.classList.add('o-share__action', 'o-share__action--' + config.links[i]);
				var aElement = document.createElement('a');
				aElement.href = generateSocialUrl(config.links[i]);
				aElement.appendChild(document.createElement('i'));
				liElement.appendChild(aElement);
				ulElement.appendChild(liElement);
			}
			oShare.rootEl.appendChild(ulElement);
		}
	
		/**
	   * Initialises the Share class, rendering the o-share element if it's empty with {@link config} options,
	   * or from corresponding data attributes and sets up dom-delegates.
	   * Dispatches 'oShare.ready' at the end
	   */
		function init() {
			if (!rootEl) {
				rootEl = document.body;
			} else if (!(rootEl instanceof HTMLElement)) {
				rootEl = document.querySelector(rootEl);
			}
	
			var rootDelegate = new DomDelegate(rootEl);
			rootDelegate.on('click', handleClick);
			rootEl.setAttribute('data-o-share--js', '');
	
			oShare.rootDomDelegate = rootDelegate;
			oShare.rootEl = rootEl;
	
			if (rootEl.children.length === 0) {
				if (!config) {
					config = {};
					config.links = rootEl.hasAttribute('data-o-share-links') ? rootEl.getAttribute('data-o-share-links').split(' ') : [];
					config.url = rootEl.getAttribute('data-o-share-url') || '';
					config.title = rootEl.getAttribute('data-o-share-title') || '';
					config.titleExtra = rootEl.getAttribute('data-o-share-titleExtra') || '';
					config.summary = rootEl.getAttribute('data-o-share-summary') || '';
					config.relatedTwitterAccounts = rootEl.getAttribute('data-o-share-relatedTwitterAccounts') || '';
				}
				render();
			}
	
			dispatchCustomEvent('ready', {
				share: oShare
			});
		}
	
		init();
	}
	
	/**
	  * Destroys the Share instance, disables dom-delegates
	  */
	Share.prototype.destroy = function () {
		this.rootDomDelegate.destroy();
		// Should destroy remove its children? Maybe setting .innerHTML to '' is faster
		for (var i = 0; i < this.rootEl.children; i++) {
			this.rootEl.removeChild(this.rootEl.children[i]);
		}
	
		this.rootEl.removeAttribute('data-o-share--js');
		this.rootEl = undefined;
	};
	
	/**
	  * Initialises all o-share components inside the element passed as the first parameter
	  *
	  * @param {(HTMLElement|string)} [el=document.body] - Element where to search for o-share components. You can pass an HTMLElement or a selector string
	  * @returns {Array} - An array of Share instances
	  */
	Share.init = function (el) {
		var shareInstances = [];
	
		if (!el) {
			el = document.body;
		} else if (!(el instanceof HTMLElement)) {
			el = document.querySelector(el);
		}
	
		var shareElements = el.querySelectorAll('[data-o-component=o-share]');
	
		for (var i = 0; i < shareElements.length; i++) {
			if (!shareElements[i].hasAttribute('data-o-header--js')) {
				shareInstances.push(new Share(shareElements[i]));
			}
		}
	
		return shareInstances;
	};
	
	var OSharePrototype = (0, _create2.default)(HTMLElement.prototype);
	
	/**
	  * If it supports custom elements, it will return an instance of the <o-share> HTMLElement
	  *
	  * @returns {(HTMLElement|undefined)}
	  */
	Share.Element = document.registerElement ? document.registerElement('o-share', {
		prototype: OSharePrototype
	}) : undefined;
	
	module.exports = Share;

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*global require, module*/
	
	var DomDelegate = __webpack_require__(141);
	var Tooltip = __webpack_require__(664);
	
	/**
	 * Gets the width of a text by using a <canvas> element
	 *
	 * @param {string} text - The text to measure
	 * @param {HTMLElement} refEl - The reference element where the text will be to get the font properties
	 *
	 * @returns {number}
	 */
	function getPixelWidthOfText(text, refEl) {
		var c = document.createElement("canvas");
	
		if (c.getContext && window.getComputedStyle) {
			var ctx = c.getContext("2d");
			var refElStyle = window.getComputedStyle(refEl);
			ctx.font = refElStyle.getPropertyValue('font-style') + " " + refElStyle.getPropertyValue('font-size') + " " + refElStyle.getPropertyValue('font-family');
			ctx.fillText(text, 10, 100);
			return ctx.measureText(text).width;
		}
	
		return -1;
	}
	
	/**
	 * @class TextCopyHelper
	 *
	 * @param {Object} config
	 * @param {string} config.text - Value of the url input element
	 * @param {string} config.message - Tooltip text
	 * @param {HTMLElement} config.parentEl - Parent element
	 * @param {function} config.onDestroy - Optional, callback that will be ran on {@link destroy}
	 * @param {function} config.onCopy - Optional, callback that will be ran when the 'copy' event is triggered
	 */
	function TextCopyHelper(config) {
	
		var textCopyHelper = this;
		/**
	  * Creates an input element for the URL setting it's correct width corresponding to said URL
	  *
	  * @private
	  * @returns {HTMLElement} inputEl
	  */
		function createInputElement(text) {
			var inputEl = document.createElement('input');
			inputEl.setAttribute('type', 'text');
			inputEl.setAttribute('value', text);
	
			return inputEl;
		}
	
		/**
	  * Initializes document.body and input dom-delegates and creates tooltip and input element
	  *
	  * @private
	  */
		function init() {
			textCopyHelper.inputEl = createInputElement(config.text);
			config.parentEl.insertBefore(textCopyHelper.inputEl, config.parentEl.childNodes[0]);
			var inputWidth = getPixelWidthOfText(config.text, textCopyHelper.inputEl);
	
			if (inputWidth !== -1) {
				textCopyHelper.inputEl.style.width = inputWidth + 'px';
			}
			textCopyHelper.inputEl.select();
	
			textCopyHelper.tooltip = new Tooltip(config.message, config.parentEl);
			textCopyHelper.config = config;
			textCopyHelper.bodyDomDelegate = new DomDelegate(document.body);
			textCopyHelper.inputDomDelegate = new DomDelegate(textCopyHelper.inputEl);
		}
	
		init();
	
		this.bodyDomDelegate.on('click', function (ev) {
			if (!config.parentEl.contains(ev.target)) {
				textCopyHelper.destroy();
			}
		});
		this.bodyDomDelegate.on('keydown', function (ev) {
			// 27 = Escape, 9 = Tab
			if (ev.keyCode === 27 || ev.keyCode === 9) {
				textCopyHelper.destroy();
			}
	
			// 8 = Backspace
			if (ev.keyCode === 8) {
				ev.stopImmediatePropagation();
				ev.preventDefault();
			}
		});
	
		// Stop input from being edited
		this.inputDomDelegate.on('keypress', function (ev) {
			ev.preventDefault();
		});
	
		this.inputDomDelegate.on('copy', function () {
			textCopyHelper.tooltip.setText('Copied!');
	
			if (typeof config.onCopy === "function") {
				config.onCopy();
			}
		});
	}
	
	/**
	 * Destroys the TextCopyHelper, disabling event listeners, and removing the input and tooltip from DOM. Also runs optional {@link config.onDestroy}
	 */
	TextCopyHelper.prototype.destroy = function () {
		this.inputEl.parentElement.removeChild(this.inputEl);
		this.tooltip.destroy();
		this.tooltip = undefined;
		this.inputEl = undefined;
		this.bodyDomDelegate.destroy();
		this.inputDomDelegate.destroy();
	
		if (typeof this.config.onDestroy === "function") {
			this.config.onDestroy();
		}
	};
	
	module.exports = TextCopyHelper;

/***/ },
/* 664 */
/***/ function(module, exports) {

	'use strict';
	
	/*global module*/
	
	/**
	 * @class Tooltip
	 *
	 * @param {string} text
	 * @param {HTMLElement} refEl
	 */
	function Tooltip(text, refEl) {
		this.cssClass = 'o-share-tooltip';
	
		/**
	  * Creates a tooltip element
	  *
	  * @private
	  * @returns {HTMLElement}
	  */
		function createTooltip(cssClass) {
			var tipEl = document.createElement('div');
			tipEl.className = cssClass;
			tipEl.innerHTML = '<div class="' + cssClass + '__text">' + text + '</div><div class="' + cssClass + '__arrow"></div>';
			return tipEl;
		}
	
		/**
	  * Renders a tooltip element
	  *
	  * @private
	  * @param {HTMLElement} tipEl - a tooltip element returned by {@link createTooltip}
	  */
		function renderTooltip(tipEl) {
			refEl.insertBefore(tipEl, refEl.childNodes[0]);
			tipEl.style.width = tipEl.clientWidth + "px"; // Set width based on initial text
			tipEl.style.left = (refEl.offsetWidth - tipEl.offsetWidth) / 2 + "px";
			tipEl.style.opacity = 1;
		}
	
		this.tooltipEl = createTooltip(this.cssClass);
		renderTooltip(this.tooltipEl);
	}
	
	/**
	 * Set the text on the tooltip
	 *
	 * @param {string} text
	 */
	Tooltip.prototype.setText = function (text) {
		this.tooltipEl.querySelector('.' + this.cssClass + '__text').innerText = text;
	};
	
	/**
	 * Destroys the tooltip, removing it from the DOM
	 */
	Tooltip.prototype.destroy = function () {
		this.tooltipEl.parentElement.removeChild(this.tooltipEl);
		this.tooltipEl = undefined;
	};
	
	module.exports = Tooltip;

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(421);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _oDate = __webpack_require__(281);
	
	var _oDate2 = _interopRequireDefault(_oDate);
	
	var _oFetchJsonp = __webpack_require__(381);
	
	var _oFetchJsonp2 = _interopRequireDefault(_oFetchJsonp);
	
	var _nSection = __webpack_require__(666);
	
	var components = _interopRequireWildcard(_nSection);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function correlator(len) {
		len = len || 16;
		function genRand(sig) {
			return parseInt(Math.random() * Math.pow(10, sig), 10);
		}
	
		return (new Date().getTime() + '' + genRand(16) + Math.random().toString(34).slice(2)).toString().substr(0, len);
	}
	
	var getSmartmatchData = function getSmartmatchData(adUnit, dfpResponse) {
		var uuid = document.documentElement.getAttribute('data-content-id');
	
		//Smartmatch explicitly require this to be double encoded
		var contentUrl = encodeURIComponent(encodeURIComponent('ft.com/content/' + uuid));
		var splitAdUnit = adUnit.split('/');
		var section = splitAdUnit[splitAdUnit.length - 1];
		var url = 'https://c.smartonomi.net/static/creative/' + dfpResponse.creativeID + '/key/' + dfpResponse.smartmatchKey + '/pcid/' + contentUrl + '/sct=' + encodeURIComponent(section) + ';encode=false;?cacheBuster=' + correlator(64);
		return (0, _oFetchJsonp2.default)(url, {
			timeout: 4000,
			mode: 'cors'
		}).then(function (response) {
			if (response.ok) {
				return response.json();
			}
		}).then(function (data) {
			if (data && data.type && data.title) {
				//add the DFP impression URL to smartmatch impression URLS
				data.impressionURL = [].concat(data.impressionURL, dfpResponse.impressionURL);
				return data;
			} else {
				throw 'No smartmatch results';
			}
		});
	};
	
	var getAdJson = function getAdJson(data) {
	
		var jsonResponse = (typeof data === 'undefined' ? 'undefined' : (0, _typeof3.default)(data)) === 'object' ? data : new Function('return ' + data)();
		var keys = jsonResponse ? (0, _keys2.default)(jsonResponse) : [];
		var adUnitKey = keys.length ? keys[0] : null;
		if (!adUnitKey && jsonResponse && jsonResponse[adUnitKey] && jsonResponse[adUnitKey]['_html_']) {
			return null;
		};
		var markup = jsonResponse[adUnitKey]['_html_'];
		var delimiter = '----------';
		if (markup && markup.length && markup.indexOf(delimiter) >= 0) {
	
			try {
				var adCustomJson = JSON.parse(markup.split(delimiter)[1]);
				adCustomJson.id = jsonResponse[adUnitKey]['_creative_ids_'][0];
				adCustomJson.lineItemId = jsonResponse[adUnitKey]['_adgroup2_ids_'][0];
				return adCustomJson;
			} catch (e) {
				return null;
			}
		} else {
			return null;
		}
	};
	
	var handleResponse = function handleResponse(el, response) {
	
		if (!(el && response && response.title)) {
			return;
		}
	
		document.querySelector('.promoted-content').classList.add('promoted-content--loaded');
	
		var props = {
			data: {
				content: [response]
			},
			itemIndex: 0,
			image: response.image && response.image.url ? {
				position: {
					default: 'embedded'
				},
				widths: [166, 281],
				sizes: {
					default: '166px',
					M: '281px'
				}
			} : null,
			size: 'small',
			standfirst: { show: { default: true } }
		};
	
		_reactDom2.default.render(_react2.default.createElement(components.Content, props), el);
		_oDate2.default.init(el);
	};
	
	function initPaidPost(el, flags, ads, skipSmartmatch) {
		var slotParams = 'pos=native';
		var adTargeting = ads.targeting.get();
		var custParams = (0, _keys2.default)(adTargeting).map(function (k) {
			return k + '=' + encodeURIComponent(adTargeting[k]);
		}).join('&');
		var adUnit = window.oAds.config('gpt').site ? window.oAds.config('gpt').network + '/' + window.oAds.config('gpt').site + '/' + window.oAds.config('gpt').zone : '5887/ft.com/home/UK';
		var url = 'https://securepubads.g.doubleclick.net/gampad/ads?gdfp_req=1&correlator=' + correlator() + '&output=json_html&impl=fif&sc=1&sfv=1-0-4&iu=%2F5887%2F' + adUnit.replace(/\/?5887\//, '') + '&sz=320x50&fluid=height&scp=' + encodeURIComponent(slotParams) + '&d_imp=1&ga_sid=' + new Date().getTime() + '&cust_params=' + encodeURIComponent(custParams);
	
		if (skipSmartmatch) {
			url += encodeURIComponent('&ftpb=1');
		}
	
		return (0, _oFetchJsonp2.default)(url, {
			timeout: 4000,
			mode: 'cors'
		}).then(function (response) {
			if (response.ok) {
				return response.text ? response.text() : response.json();
			}
		}).then(getAdJson).then(function (data) {
			if (data && data.type && data.title && data.type !== 'smartmatch') {
				var secondEl = document.querySelector('.promoted-content__second');
	
				handleResponse(el, data);
	
				if (data.type === 'special-report' && !secondEl.textContent) {
					el.setAttribute('data-o-grid-colspan', '12 M6');
					secondEl.setAttribute('data-o-grid-colspan', '12 M6');
					initPaidPost(secondEl, flags, ads);
				}
			} else if (data && data.type === 'smartmatch') {
				getSmartmatchData(adUnit, data).then(function (smartmatchResponse) {
					handleResponse(el, smartmatchResponse);
				}).catch(function () {
					//no smartmatch results - make another ad call
					initPaidPost(el, flags, ads, true);
				});
			}
		});
	};
	
	exports.default = function (flags) {
		if (flags.get('nativeAds') && flags.get('nativeAdsArticle')) {
			var _ret = function () {
	
				var el = document.querySelector('.promoted-content__first');
	
				if (!el) {
					return {
						v: void 0
					};
				}
	
				if (window.oAds && window.oAds.isInitialised) {
					initPaidPost(el, flags, window.oAds);
				} else {
					document.addEventListener('oAds.initialised', function (e) {
						initPaidPost(el, flags, e.detail);
					});
				}
			}();
	
			if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
		}
	};
	
	module.exports = exports['default'];

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.helpers = exports.Advert = exports.Content = exports.Row = exports.Column = exports.Section = undefined;
	
	var _section = __webpack_require__(667);
	
	var _section2 = _interopRequireDefault(_section);
	
	var _column = __webpack_require__(689);
	
	var _column2 = _interopRequireDefault(_column);
	
	var _row = __webpack_require__(690);
	
	var _row2 = _interopRequireDefault(_row);
	
	var _content = __webpack_require__(691);
	
	var _content2 = _interopRequireDefault(_content);
	
	var _advert = __webpack_require__(722);
	
	var _advert2 = _interopRequireDefault(_advert);
	
	var _helpers = __webpack_require__(688);
	
	var helpers = _interopRequireWildcard(_helpers);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Section = _section2.default;
	exports.Column = _column2.default;
	exports.Row = _row2.default;
	exports.Content = _content2.default;
	exports.Advert = _advert2.default;
	exports.helpers = helpers;

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _meta = __webpack_require__(668);
	
	var _meta2 = _interopRequireDefault(_meta);
	
	var _content = __webpack_require__(687);
	
	var _content2 = _interopRequireDefault(_content);
	
	var _helpers = __webpack_require__(688);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _this2 = this;
	
			if (this.props.raw) {
				var html = { __html: this.props.raw };
				return _react2.default.createElement('div', { dangerouslySetInnerHTML: html });
			};
	
			//if no content, don't render the section
			if (!this.props.data || (0, _keys2.default)(this.props.data).every(function (key) {
				return !_this2.props.data[key] || !_this2.props.data[key].length;
			})) {
				return null;
			}
			var cols = this.props.cols;
			var trackable = this.props.trackable || this.props.id;
			var sectionClasses = (0, _helpers.classify)(['o-grid-row', this.props.style ? 'section--' + this.props.style : '', this.props.articleRanking ? 'section--article-ranking' : '']);
			var sectionContentClasses = (0, _helpers.classify)(['section__column', 'section__column--content', this.props.isTab ? 'o-tabs__tabpanel' : '']);
			var sectionMetaClasses = (0, _helpers.classify)(['section__column', 'section__column--meta', this.props.cols.meta && this.props.cols.meta.hide ? 'n-util-visually-hidden' : '']);
	
			if (this.props.followButton) {
				this.props.followButton.classes = (this.props.followButton.classes || '').concat(' section-meta__follow ');
			}
	
			return _react2.default.createElement(
				'section',
				{ className: sectionClasses, 'data-trackable': trackable },
				cols.meta ? _react2.default.createElement(
					'div',
					{ 'data-o-grid-colspan': (0, _helpers.colspan)(cols.meta), className: sectionMetaClasses },
					_react2.default.createElement(_meta2.default, {
						title: this.props.title,
						sectionId: this.props.id,
						followButton: this.props.flags && this.props.flags.myFtApiWrite && this.props.followButton,
						sponsorshipInfo: this.props.flags && this.props.flags.myFtSponsorship && this.props.sponsorshipInfo })
				) : null,
				_react2.default.createElement(
					'div',
					{
						id: this.props.id + '-section-content',
						'data-o-grid-colspan': (0, _helpers.colspan)(cols.content),
						className: sectionContentClasses },
					_react2.default.createElement(_content2.default, {
						id: this.props.id,
						style: this.props.style,
						layout: this.props.layout,
						data: this.props.data,
						flags: this.props.flags
					})
				)
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(669);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _follow = __webpack_require__(670);
	
	var _follow2 = _interopRequireDefault(_follow);
	
	var _metaSponsorship = __webpack_require__(677);
	
	var _metaSponsorship2 = _interopRequireDefault(_metaSponsorship);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
	
			var followButton = this.props.followButton ? _react2.default.createElement(_follow2.default, this.props.followButton) : null;
	
			var sponsorship = this.props.sponsorshipInfo ? _react2.default.createElement(_metaSponsorship2.default, (0, _extends3.default)({ sectionId: this.props.sectionId }, this.props.sponsorshipInfo)) : null;
	
			return _react2.default.createElement(
				'div',
				{ className: 'section-meta' },
				_react2.default.createElement('h2', { className: 'section-meta__title', dangerouslySetInnerHTML: { __html: this.props.title } }),
				followButton,
				sponsorship
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(671);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _updateMyftForm = __webpack_require__(676);
	
	var _updateMyftForm2 = _interopRequireDefault(_updateMyftForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Follow = function (_Component) {
		(0, _inherits3.default)(Follow, _Component);
	
		function Follow() {
			(0, _classCallCheck3.default)(this, Follow);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		Follow.prototype.render = function render() {
			var attrs = (0, _assign2.default)({}, this.props);
			var followAttrs = {
				classes: (0, _classnames2.default)('n-myft-ui--follow', this.props.classes),
				action: '/__myft/api/core/followed/concept/' + this.props.conceptId + '?method=put',
				uiHandle: 'follow',
				activateLabel: 'Add',
				deactivateLabel: 'Remove',
				buttonText: this.props.buttonText || 'Add to myFT',
				alternateText: this.props.alternateText || this.props.buttonText || 'Added'
			};
			(0, _assign2.default)(attrs, followAttrs);
	
			return _react2.default.createElement(_updateMyftForm2.default, attrs);
		};
	
		return Follow;
	}(_react.Component);
	
	exports.default = Follow;
	module.exports = exports['default'];

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(672);
	module.exports = __webpack_require__(674);
	module.exports = __webpack_require__(675);

/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames() {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg === 'undefined' ? 'undefined' : (0, _typeof3.default)(arg);
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if ("function" === 'function' && (0, _typeof3.default)(__webpack_require__(673)) === 'object' && __webpack_require__(673)) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	})();

/***/ },
/* 673 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;
	
	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames() {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg === 'undefined' ? 'undefined' : (0, _typeof3.default)(arg);
	
				if (argType === 'string' || argType === 'number') {
					classes.push(this && this[arg] || arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(this, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(this && this[key] || key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if ("function" === 'function' && (0, _typeof3.default)(__webpack_require__(673)) === 'object' && __webpack_require__(673)) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	})();

/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _create = __webpack_require__(110);
	
	var _create2 = _interopRequireDefault(_create);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var classNames = function () {
			// don't inherit from Object so we can skip hasOwnProperty check later
			// http://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull#answer-21079232
			function StorageObject() {}
			StorageObject.prototype = (0, _create2.default)(null);
	
			function _parseArray(resultSet, array) {
				var length = array.length;
	
				for (var i = 0; i < length; ++i) {
					_parse(resultSet, array[i]);
				}
			}
	
			var hasOwn = {}.hasOwnProperty;
	
			function _parseNumber(resultSet, num) {
				resultSet[num] = true;
			}
	
			function _parseObject(resultSet, object) {
				for (var k in object) {
					if (hasOwn.call(object, k)) {
						// set value to false instead of deleting it to avoid changing object structure
						// https://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/#de-referencing-misconceptions
						resultSet[k] = !!object[k];
					}
				}
			}
	
			var SPACE = /\s+/;
			function _parseString(resultSet, str) {
				var array = str.split(SPACE);
				var length = array.length;
	
				for (var i = 0; i < length; ++i) {
					resultSet[array[i]] = true;
				}
			}
	
			function _parse(resultSet, arg) {
				if (!arg) return;
				var argType = typeof arg === 'undefined' ? 'undefined' : (0, _typeof3.default)(arg);
	
				// 'foo bar'
				if (argType === 'string') {
					_parseString(resultSet, arg);
	
					// ['foo', 'bar', ...]
				} else if (Array.isArray(arg)) {
					_parseArray(resultSet, arg);
	
					// { 'foo': true, ... }
				} else if (argType === 'object') {
					_parseObject(resultSet, arg);
	
					// '130'
				} else if (argType === 'number') {
					_parseNumber(resultSet, arg);
				}
			}
	
			function _classNames() {
				// don't leak arguments
				// https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
				var len = arguments.length;
				var args = Array(len);
				for (var i = 0; i < len; i++) {
					args[i] = arguments[i];
				}
	
				var classSet = new StorageObject();
				_parseArray(classSet, args);
	
				var list = [];
	
				for (var k in classSet) {
					if (classSet[k]) {
						list.push(k);
					}
				}
	
				return list.join(' ');
			}
	
			return _classNames;
		}();
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if ("function" === 'function' && (0, _typeof3.default)(__webpack_require__(673)) === 'object' && __webpack_require__(673)) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	})();

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(671);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var exists = function exists(thing) {
		return thing;
	};
	
	// interaction on this class all has to be with 3rd party JS because we must also build a non-React version
	
	/**
	* @param {string} conceptId - ID of the concept
	* @param {string} name - Name of the concept
	* @param {string} taxonomy - Taxonomy of the concept
	* @param {string} [variant] - Variant of the button, e.g. `inverse`
	* @param {string} [size] - Size of the button, e.g. `big`
	* @param {string} [buttonText=Follow] - Text of the button
	* @param {string} [alternateText=Following] - Text of the button
	* @param {(string|Array)} [classes] - Additional class(es) for the follow component
	*/
	
	var UpdateMyFtForm = function (_Component) {
		(0, _inherits3.default)(UpdateMyFtForm, _Component);
	
		function UpdateMyFtForm() {
			(0, _classCallCheck3.default)(this, UpdateMyFtForm);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		UpdateMyFtForm.prototype.renderHidden = function renderHidden() {
			if (this.props.hidden) {
				return this.props.hidden.map(function (hidden) {
					return _react2.default.createElement('input', { type: 'hidden', name: hidden.name, value: hidden.value });
				});
			}
		};
	
		UpdateMyFtForm.prototype.renderBtnName = function renderBtnName() {
			return typeof this.props.btnName !== 'undefined' ? this.props.btnName : null;
		};
	
		UpdateMyFtForm.prototype.renderBtnValue = function renderBtnValue() {
			return typeof this.props.btnValue !== 'undefined' ? this.props.btnValue : null;
		};
	
		UpdateMyFtForm.prototype.render = function render() {
			var classes = (0, _classnames2.default)('n-myft-ui', this.props.classes);
			var buttonClasses = ['n-myft-ui__button'];
			[this.props.variant, this.props.size].filter(exists).map(function (buttonOpt) {
				return buttonClasses.push('n-myft-ui__button--' + buttonOpt);
			});
	
			return _react2.default.createElement(
				'form',
				{
					className: classes,
					method: 'POST',
					'data-myft-ui': this.props.uiHandle,
					'data-concept-id': this.props.conceptId,
					action: this.props.action },
				_react2.default.createElement('input', { type: 'hidden', value: this.props.name, name: 'name' }),
				_react2.default.createElement('input', { type: 'hidden', value: this.props.taxonomy, name: 'taxonomy' }),
				this.renderHidden(),
				_react2.default.createElement(
					'button',
					{
						'aria-label': this.props.activateLabel + ' ' + this.props.name,
						'aria-pressed': this.props.ariaPressed || 'false',
						className: buttonClasses.join(' '),
						'data-alternate-label': this.props.deactivateLabel + ' ' + this.props.name,
						'data-alternate-text': this.props.alternateText || this.props.buttonText,
						'data-trackable': this.props.trackable || this.props.uiHandle,
						'data-concept-id': this.props.conceptId // duplicated here for tracking
						, title: this.props.activateLabel + this.props.name,
						name: this.renderBtnName(),
						value: this.renderBtnValue(),
						type: 'submit' },
					this.props.buttonText
				),
				this.props.alert
			);
		};
	
		return UpdateMyFtForm;
	}(_react.Component);
	
	exports.default = UpdateMyFtForm;
	module.exports = exports['default'];

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nImage = __webpack_require__(678);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Currently will only support static images, some work should be done to allow this
	// to use responsive images, utilising <Image>'s `url`, `widths` and `sizes` attrs.
	
	/**
		* @param {string} sectionId - the section name for data tracking e.g. "myft"
		* @param {string} text - e.g. "In association with"
		* @param {string} imageUrl - url for sponsor logo
		* @param {string} alt - alt for image
		* @param {string} textClasses - space seperated classes for the text element
		* @param {string} imageClasses - space seperated classes for the image element
		* @param {string} width - desired image width
		* @param {string} height - desired image height
		* @param {string} clickthroughUrl - url for image to clickthrough to
		*/
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var imageClasses = this.props.imageClasses.split(' ');
			var trackingId = this.props.sectionId + '-sponsorship:frontpage';
	
			// TODO: give the n-image-wrapper div the .section-meta__sponsorship--image class
			return _react2.default.createElement(
				'div',
				{ className: 'section-meta__sponsorship' },
				_react2.default.createElement(
					'span',
					{ className: 'section-meta__sponsorship-text' },
					this.props.text
				),
				_react2.default.createElement(
					'a',
					{ href: this.props.clickthroughUrl, className: 'section-meta__sponsorship-link', 'data-trackable': trackingId },
					_react2.default.createElement(_nImage.Image, {
						classes: imageClasses,
						src: this.props.imageUrl,
						width: this.props.width,
						height: this.props.height,
						alt: this.props.alt
					})
				)
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Picture = exports.Image = undefined;
	
	var _image = __webpack_require__(679);
	
	var _image2 = _interopRequireDefault(_image);
	
	var _picture = __webpack_require__(686);
	
	var _picture2 = _interopRequireDefault(_picture);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Image = _image2.default;
	exports.Picture = _picture2.default;

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(680);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// convert the `src` or `srcset` attribtues to a data attribute
	var hideImage = function hideImage(obj) {
		return (0, _keys2.default)(obj).reduce(function (dataObj, name) {
			if (name === 'src' || name === 'srcSet') {
				dataObj['data-' + name.toLowerCase()] = obj[name];
			} else {
				dataObj[name] = obj[name];
			}
			return dataObj;
		}, {});
	};
	
	/**
	 * @param {string} src - Actual src to use. If set, assume it's non-responsive, i.e. ignore url, widths, sizes
	 * @param {string} url - URL of the image
	 * @param {number[]} widths - Widths of the image, in pixels
	 * @param {Object} [sizes = {}] - Keys are breakpoints, values the length. e.g.
	 * { default: '33.3vw', L: 'calc(.333 * (100vw - 12em)'}
	 * @param {string[]|string} [classes = []] - Additional classes to add to the element
	 * @param {string} [width] - Width of the image
	 * @param {string} [height] - Height of the image
	 * @param {string} [alt = ''] - Alt text for the image
	 * @param {boolean} [lazyLoad = false] - Lazy load the image
	 * @param {string|number} [placeholder] - Set to add a placeholder. Value should be the ratio of the image as a number
	 * (width divided by height, e.g.`16/9`), or string (`square` or `landscape`)
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var image = this.props;
			var className = ['n-image'].concat(image.classes || []).join(' ');
			var attrs = {
				alt: image.alt || '',
				className: className
			};
			var wrapperClassNames = ['n-image-wrapper'];
	
			if (image.placeholder) {
				wrapperClassNames.push('n-image-wrapper--placeholder');
			}
			var ratio = image.placeholder;
			if (typeof ratio === 'number') {
				if (ratio === 1) {
					ratio = 'square';
				} else if (ratio === 16 / 9) {
					ratio = 'landscape';
				}
			}
			if (['square'].indexOf(ratio) > -1) {
				wrapperClassNames.push('n-image-wrapper--' + ratio + '-placeholder');
			}
			if (image.lazyLoad) {
				wrapperClassNames.push('n-image-wrapper--lazy-loading');
			}
			var wrapperAttrs = {
				className: wrapperClassNames.join(' ')
			};
			if (typeof ratio === 'number') {
				wrapperAttrs.style = { 'padding-bottom': 100 * (1 / ratio) + '%' };
			}
			if (!attrs.alt) {
				attrs.role = 'presentation';
			}
			if (image.src) {
				(0, _assign2.default)(attrs, { src: image.src, width: image.width, height: image.height });
			} else {
				(function () {
					attrs.srcSet = image.widths.sort(function (widthOne, widthTwo) {
						return widthTwo - widthOne;
					}).map(function (width) {
						return (0, _helpers.buildImageServiceUrl)(image.url, { width: width }) + ' ' + width + 'w';
					}).join(', ');
					var sizes = image.sizes || {};
					attrs.sizes = _helpers.breakpoints.map(function (breakpoint) {
						var size = sizes[breakpoint.name];
						return size ? breakpoint.name === 'default' ? size : '(min-width: ' + breakpoint.px + 'px) ' + size : null;
					}).filter(function (size) {
						return size;
					}).join(', ');
				})();
			}
			var lazyLoadedAttrs = hideImage(attrs);
			lazyLoadedAttrs.className += ' n-image--lazy-loading';
	
			return _react2.default.createElement(
				'div',
				wrapperAttrs,
				image.lazyLoad ? _react2.default.createElement('img', lazyLoadedAttrs) : _react2.default.createElement('img', attrs)
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.buildImageServiceUrl = exports.breakpoints = undefined;
	
	var _breakpoints = __webpack_require__(681);
	
	var _breakpoints2 = _interopRequireDefault(_breakpoints);
	
	var _buildImageServiceUrl = __webpack_require__(682);
	
	var _buildImageServiceUrl2 = _interopRequireDefault(_buildImageServiceUrl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.breakpoints = _breakpoints2.default;
	exports.buildImageServiceUrl = _buildImageServiceUrl2.default;

/***/ },
/* 681 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = [{
		name: 'XXL',
		px: '1440'
	}, {
		name: 'XL',
		px: '1220'
	}, {
		name: 'L',
		px: '980'
	}, {
		name: 'M',
		px: '740'
	}, {
		name: 'S',
		px: '490'
	}, {
		name: 'default',
		px: '0'
	}];
	module.exports = exports['default'];

/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _querystring = __webpack_require__(683);
	
	var _querystring2 = _interopRequireDefault(_querystring);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (url) {
		var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		var defaultOptions = {
			source: 'next',
			fit: 'scale-down',
			compression: 'best'
		};
		var options = (0, _assign2.default)({}, defaultOptions, params);
	
		return 'https://next-geebee.ft.com/image/v1/images/raw/' + encodeURIComponent(url) + '?' + _querystring2.default.stringify(options);
	};
	
	module.exports = exports['default'];

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.decode = exports.parse = __webpack_require__(684);
	exports.encode = exports.stringify = __webpack_require__(685);


/***/ },
/* 684 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	module.exports = function(qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};
	
	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }
	
	  var regexp = /\+/g;
	  qs = qs.split(sep);
	
	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }
	
	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }
	
	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr, vstr, k, v;
	
	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }
	
	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);
	
	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }
	
	  return obj;
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};


/***/ },
/* 685 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	var stringifyPrimitive = function(v) {
	  switch (typeof v) {
	    case 'string':
	      return v;
	
	    case 'boolean':
	      return v ? 'true' : 'false';
	
	    case 'number':
	      return isFinite(v) ? v : '';
	
	    default:
	      return '';
	  }
	};
	
	module.exports = function(obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }
	
	  if (typeof obj === 'object') {
	    return map(objectKeys(obj), function(k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (isArray(obj[k])) {
	        return map(obj[k], function(v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);
	
	  }
	
	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq +
	         encodeURIComponent(stringifyPrimitive(obj));
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};
	
	function map (xs, f) {
	  if (xs.map) return xs.map(f);
	  var res = [];
	  for (var i = 0; i < xs.length; i++) {
	    res.push(f(xs[i], i));
	  }
	  return res;
	}
	
	var objectKeys = Object.keys || function (obj) {
	  var res = [];
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
	  }
	  return res;
	};


/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(680);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createImg = function createImg(attrs) {
		var attrsStringified = (0, _keys2.default)(attrs).map(function (attrName) {
			return attrName + '="' + attrs[attrName] + '"';
		}).join(' ');
		return '<img ' + attrsStringified + ' />';
	};
	
	var createSources = function createSources(urls, _ref) {
		var _ref$alt = _ref.alt;
		var alt = _ref$alt === undefined ? '' : _ref$alt;
		var _ref$classes = _ref.classes;
		var classes = _ref$classes === undefined ? [] : _ref$classes;
		var _ref$withFallback = _ref.withFallback;
		var withFallback = _ref$withFallback === undefined ? false : _ref$withFallback;
	
		var className = classes.join(' ');
		var sources = _helpers.breakpoints.filter(function (breakpoint) {
			return breakpoint.name !== 'default';
		}).map(function (breakpoint) {
			var url = urls[breakpoint.name];
			return url ? '<source srcset="' + url + '" media="(min-width: ' + breakpoint.px + 'px)" />' : null;
		}).filter(function (source) {
			return source;
		});
		if (sources.length) {
			sources = ['<!--[if IE 9]><video style="display: none;"><![endif]-->'].concat(sources, '<!--[if IE 9]></video><![endif]-->');
		}
	
		var imgAttrs = {
			'class': className,
			alt: alt
		};
	
		if (!alt) {
			imgAttrs.role = 'presentation';
		}
	
		if (urls.default) {
			var defaultSrc = urls.default;
			if (withFallback) {
				imgAttrs.src = defaultSrc;
			} else {
				imgAttrs.srcset = defaultSrc;
			}
		}
	
		return sources.concat(createImg(imgAttrs)).join('');
	};
	
	/**
	 * @param {Object} urls - URLs of the image to use at different breakpoints. Key is the breakpoint, value the URL,
	 * e.g. { default: 'some/image.jpg', L: 'another/image.jpg' }
	 * @param {boolean} [withFallback = false] - Render a 'fallback' image, in the `default` size i.e. for browsers that
	 * don't support the picture element
	 * @param {string[]|string} [classes = []] - Additional classes to add to the `picture` element
	 * @param {string[]|string} [imgClasses = []] - Additional classes to add to the `img` element
	 * @param {string} [alt = ''] - Alt text for the image
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var classes = ['n-image'].concat(this.props.classes || []).join(' ');
			var imgClasses = ['n-image__img'].concat(this.props.imgClasses || []);
			var opts = {
				alt: this.props.alt,
				classes: imgClasses,
				withFallback: this.props.withFallback
			};
	
			// dangerouslySetInnerHTML is used to render the conditional IE9 comments
			// Will throw an error if such comments are returned directly
			return _react2.default.createElement('picture', {
				className: classes,
				dangerouslySetInnerHTML: { __html: createSources(this.props.urls, opts) } });
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _extends2 = __webpack_require__(669);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ = __webpack_require__(666);
	
	var Components = _interopRequireWildcard(_);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// assign an incremental id to the Content components
	var assignContentId = function assignContentId(contentIndex, component) {
		if (component.type === 'Content') {
			component.id = contentIndex++;
		} else if (component.components && component.components.length) {
			contentIndex = component.components.reduce(assignContentId, contentIndex);
		}
	
		return contentIndex;
	};
	
	var renderComponents = function renderComponents(id, components, data, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
		return components.map(function (component, index) {
			var Comp = Components[component.type];
			return _react2.default.createElement(Comp, (0, _extends3.default)({}, component, { data: data, key: id + '_child' + index, flags: flags }));
		});
	};
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var data = this.props.data;
			var components = this.props.layout;
			components.reduce(assignContentId, 0);
	
			return _react2.default.createElement(
				'div',
				{ className: 'section__column__inner' },
				renderComponents(this.props.id, components, data, { flags: this.props.flags })
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.renderClasses = exports.colspan = exports.classify = undefined;
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var layoutNames = ['default', 'XS', 'S', 'M', 'L', 'XL'];
	
	// turn { default: 12, XL: 2} into '12 XL2'
	var colspan = function colspan(config) {
		return layoutNames.reduce(function (colspan, breakpoint) {
			if (config[breakpoint]) {
				var colspanPrefix = breakpoint !== 'default' ? breakpoint : '';
				colspan.push(colspanPrefix + config[breakpoint]);
			}
			return colspan;
		}, []).join(' ');
	};
	
	var renderClasses = function renderClasses(classes) {
		return (0, _keys2.default)(classes).filter(function (className) {
			return classes[className];
		}).join(' ');
	};
	
	var classify = function classify(classes) {
		return classes.filter(function (className) {
			return className;
		}).join(' ');
	};
	
	exports.classify = classify;
	exports.colspan = colspan;
	exports.renderClasses = renderClasses;

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(669);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(688);
	
	var _ = __webpack_require__(666);
	
	var Components = _interopRequireWildcard(_);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _this2 = this;
	
			if (!this.props.components) {
				return null;
			}
			var classes = {
				column: true,
				'column--related': this.props.isRelated
			};
	
			var renderComponents = function renderComponents(components, _ref) {
				var _ref$flags = _ref.flags;
				var flags = _ref$flags === undefined ? {} : _ref$flags;
				return components.map(function (component, index) {
					var Comp = Components[component.type];
					return _react2.default.createElement(Comp, (0, _extends3.default)({}, component, { data: _this2.props.data, key: 'column-child_' + index, flags: flags }));
				});
			};
	
			return _react2.default.createElement(
				'div',
				{ className: (0, _helpers.renderClasses)(classes), 'data-o-grid-colspan': (0, _helpers.colspan)(this.props.colspan) },
				renderComponents(this.props.components, { flags: this.props.flags })
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(669);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ = __webpack_require__(666);
	
	var Components = _interopRequireWildcard(_);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _this2 = this;
	
			if (!this.props.components) {
				return null;
			}
	
			var renderComponents = function renderComponents(components, _ref) {
				var _ref$flags = _ref.flags;
				var flags = _ref$flags === undefined ? {} : _ref$flags;
				return components.map(function (component, index) {
					var Comp = Components[component.type];
					return _react2.default.createElement(Comp, (0, _extends3.default)({}, component, { data: _this2.props.data, key: 'row-child_' + index, flags: flags }));
				});
			};
	
			return _react2.default.createElement(
				'div',
				{ className: 'o-grid-row' },
				renderComponents(this.props.components, { flags: this.props.flags })
			);
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nCard = __webpack_require__(692);
	
	var _models = __webpack_require__(716);
	
	var _models2 = _interopRequireDefault(_models);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getModel = function getModel(item, opts, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
	
		var model = {
			size: opts.size,
			show: opts.show
		};
		(0, _assign2.default)(model, (0, _models2.default)(item, opts, { flags: flags }));
	
		return model;
	};
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var item = this.props.data.content[typeof this.props.itemIndex !== 'undefined' ? this.props.itemIndex : this.props.id];
			if (!item) {
				return null;
			}
			var model = getModel(item, this.props, { flags: this.props.flags });
	
			switch (model.type) {
				case 'video':
					return _react2.default.createElement(_nCard.VideoCard, model);
				case 'concept':
					return _react2.default.createElement(_nCard.ConceptCard, model);
				case 'collection':
					return _react2.default.createElement(_nCard.CollectionCard, model);
				default:
					return _react2.default.createElement(_nCard.ArticleCard, model);
	
			}
		};
	
		return _class;
	}(_react.Component);
	
	exports.default = _class;
	;
	module.exports = exports['default'];

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AdvertCard = exports.CollectionCard = exports.VideoCard = exports.ConceptCard = exports.ArticleCard = undefined;
	
	var _article = __webpack_require__(693);
	
	var _article2 = _interopRequireDefault(_article);
	
	var _concept = __webpack_require__(710);
	
	var _concept2 = _interopRequireDefault(_concept);
	
	var _video = __webpack_require__(712);
	
	var _video2 = _interopRequireDefault(_video);
	
	var _collection = __webpack_require__(713);
	
	var _collection2 = _interopRequireDefault(_collection);
	
	var _advert = __webpack_require__(715);
	
	var _advert2 = _interopRequireDefault(_advert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.ArticleCard = _article2.default;
	exports.ConceptCard = _concept2.default;
	exports.VideoCard = _video2.default;
	exports.CollectionCard = _collection2.default;
	exports.AdvertCard = _advert2.default;

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(669);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _defineProperty2 = __webpack_require__(694);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(698);
	
	var _blog = __webpack_require__(699);
	
	var _blog2 = _interopRequireDefault(_blog);
	
	var _brand = __webpack_require__(700);
	
	var _brand2 = _interopRequireDefault(_brand);
	
	var _subBrand = __webpack_require__(701);
	
	var _subBrand2 = _interopRequireDefault(_subBrand);
	
	var _saveForLater = __webpack_require__(702);
	
	var _saveForLater2 = _interopRequireDefault(_saveForLater);
	
	var _image = __webpack_require__(703);
	
	var _image2 = _interopRequireDefault(_image);
	
	var _related = __webpack_require__(704);
	
	var _related2 = _interopRequireDefault(_related);
	
	var _standfirst = __webpack_require__(705);
	
	var _standfirst2 = _interopRequireDefault(_standfirst);
	
	var _tag = __webpack_require__(706);
	
	var _tag2 = _interopRequireDefault(_tag);
	
	var _timestamp = __webpack_require__(707);
	
	var _timestamp2 = _interopRequireDefault(_timestamp);
	
	var _title = __webpack_require__(708);
	
	var _title2 = _interopRequireDefault(_title);
	
	var _advertiser = __webpack_require__(709);
	
	var _advertiser2 = _interopRequireDefault(_advertiser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// one hour in milliseconds
	var oneHour = 1000 * 60 * 60;
	
	var getLiveBlogStatus = function getLiveBlogStatus(article) {
		return article.liveBlog && article.liveBlog.status && article.liveBlog.status.toLowerCase();
	};
	
	var getTimestampProps = function getTimestampProps(article) {
		var liveBlogStatus = getLiveBlogStatus(article);
		if (liveBlogStatus) {
			return {
				liveBlogStatus: liveBlogStatus,
				date: article.liveBlog.latestUpdate && article.liveBlog.latestUpdate.date
			};
		}
		var props = { date: article.lastPublished };
		if (article.hideTimestampState) {
			return props;
		}
		var published = new Date(article.published).getTime();
		var lastPublished = new Date(article.lastPublished).getTime();
		var now = Date.now();
		if (published === lastPublished) {
			if (now - published < oneHour) {
				(0, _assign2.default)(props, { date: article.published, state: 'new' });
			}
		} else {
			if (now - lastPublished < oneHour) {
				(0, _assign2.default)(props, { state: 'updated' });
			}
		}
	
		return props;
	};
	
	var getImageConfig = function getImageConfig() {
		var position = arguments.length <= 0 || arguments[0] === undefined ? { default: 'bottom' } : arguments[0];
		var show = arguments.length <= 1 || arguments[1] === undefined ? { default: true } : arguments[1];
	
		var currentPosition = position.default;
		return ['default'].concat(_helpers.layoutNames).reduce(function (config, breakpoint) {
			if (position[breakpoint] && currentPosition !== position[breakpoint]) {
				config[breakpoint] = currentPosition = position[breakpoint];
			}
			if (show[breakpoint] === false) {
				config[breakpoint] = 'hide';
			} else if (show[breakpoint] === true) {
				config[breakpoint] = currentPosition;
			}
	
			return config;
		}, {});
	};
	
	/**
	 * @param {string} title
	 * @param {string} id
	 * @param {string} size
	 * @param {string} published - iso8601
	 * @param {string} lastPublished - iso8601
	 * @param {string} url
	 * @param {boolean} [hideTimestampState = false]
	 * @param {string} [type]
	 * @param {string} [standfirst]
	 * @param {Object} [tag]
	 * @param {string} tag.taxonomy
	 * @param {string} tag.url
	 * @param {string} tag.name
	 * @param {Object[]} [related]
	 * @param {string} related[].title
	 * @param {string} related[].url
	 * @param {string} related[].id
	 * @param {boolean} related[].isPremium
	 * @param {Object} [image]
	 * @param {string} image.url
	 * @param {Object} image.sizes
	 * @param {string} [image.ratio]
	 * @param {boolean} [image.hasContentOverlay = false]
	 * @param {Object} [image.show]
	 * @param {Object} [image.position]
	 * @param {Object} [liveBlog]
	 * @param {string} liveBlog.status
	 * @param {Object} liveBlog.latestUpdate
	 * @param {string} liveBlog.latestUpdate.date
	 * @param {Object} [brand]
	 * @param {string} brand.name
	 * @param {string} [brand.url]
	 * @param {string} [brand.headshot]
	 * @param {boolean} [isTransparent = false]
	 * @param {boolean} [isPictureStory = false]
	 * @param {boolean} [isMain = false]
	 * @param {Object} [standfirst]
	 * @param {String} standfirst.title
	 * @param {Object} standfirst.show
	 * @param {Object} [show = false]
	 * @param {boolean} [lazyLoadImages = false]
	 * @param {boolean} [hasActions = false]
	 * @param {Object} [branding]
	 * @param {string} [branding.name]
	 * @param {string} [branding.url]
	 * @param {string} [advertiser]
	 * @param {string} [impressionURL]
	 * @param {string} [modifier]
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _classes;
	
			var article = this.props;
			var tag = article.tag && (0, _assign2.default)({ flags: this.props.flags }, article.tag);
			var liveBlogStatus = getLiveBlogStatus(article);
			var isPremium = this.props.flags && this.props.flags.premiumContentIndicator && article.isPremium;
	
			var impressionURLs = [];
			if (typeof article.impressionURL === 'string') {
				impressionURLs = [article.impressionURL];
			} else if (Array.isArray(article.impressionURL)) {
				impressionURLs = article.impressionURL;
			}
	
			var classes = (_classes = {
				card: true,
				'card--picture-story': article.isPictureStory
			}, (0, _defineProperty3.default)(_classes, 'card--' + article.type, article.type), (0, _defineProperty3.default)(_classes, 'card--main', article.isMain), (0, _defineProperty3.default)(_classes, 'card--has-related', article.related), (0, _defineProperty3.default)(_classes, 'card--lazy-loading-images', article.lazyLoadImages), (0, _defineProperty3.default)(_classes, 'card--' + article.modifier, article.modifier), _classes);
	
			var attrs = {
				'data-trackable': 'card',
				'data-size': article.size
			};
	
			var contentClasses = {
				'card__content': true
			};
	
			if (article.image) {
				var contentWithImgClasses = {
					'card__content--has-image': true,
					'card__content--has-portrait-image': article.image.ratio && article.image.ratio < 1,
					'card__content--image-overlay': article.image.hasContentOverlay,
					'card__content--grow': article.image.stick
				};
				(0, _assign2.default)(contentClasses, contentWithImgClasses);
			}
	
			if (article.show) {
				attrs['data-show'] = (0, _helpers.responsiveValue)(article.show);
			}
			if (article.image) {
				attrs['data-image'] = (0, _helpers.responsiveValue)(getImageConfig(article.image.position, article.image.show));
			}
			if (article.isMain) {
				if (tag) {
					tag.isFollowable = true;
				}
				if (article.related) {
					article.related.size = 'large';
				}
			}
	
			var image = article.image ? _react2.default.createElement(_image2.default, (0, _extends3.default)({}, article.image, { contentUrl: article.url, lazyLoad: article.lazyLoadImages })) : null;
			var isImageEmbedded = article.image && article.image.position && article.image.position.default === 'embedded';
	
			var actions = article.hasActions ? _react2.default.createElement(_saveForLater2.default, { contentId: article.id, myFtApiWrite: true }) : null;
			return _react2.default.createElement(
				'article',
				(0, _extends3.default)({ className: (0, _helpers.renderClasses)(classes) }, attrs),
				image && !isImageEmbedded ? image : null,
				_react2.default.createElement(
					'div',
					{ className: (0, _helpers.renderClasses)(contentClasses) },
					actions,
					article.brand ? _react2.default.createElement(_brand2.default, (0, _extends3.default)({}, article.brand, { lazyLoadHeadshot: article.lazyLoadImages })) : null,
					article.advertiser && article.type === 'smartmatch' ? _react2.default.createElement(_advertiser2.default, article) : null,
					tag ? _react2.default.createElement(_tag2.default, (0, _extends3.default)({}, tag, { isSpecialReport: article.type === 'special-report' })) : null,
					liveBlogStatus ? _react2.default.createElement(_blog2.default, { status: liveBlogStatus }) : null,
					_react2.default.createElement(_title2.default, { title: article.title, url: article.url, isPremium: isPremium }),
					_react2.default.createElement(
						'div',
						{ className: 'card__sub-content' },
						isImageEmbedded ? image : null,
						_react2.default.createElement(
							'div',
							{ className: 'card__right-content' },
							article.advertiser && article.type === 'paid-post' ? _react2.default.createElement(_advertiser2.default, article) : null,
							article.standfirst ? _react2.default.createElement(_standfirst2.default, article.standfirst) : null,
							article.branding ? _react2.default.createElement(_subBrand2.default, article.branding) : null,
							_react2.default.createElement(_timestamp2.default, getTimestampProps(article))
						)
					)
				),
				article.related && article.related.items ? _react2.default.createElement(_related2.default, (0, _extends3.default)({}, article.related, { flags: this.props.flags })) : null,
				impressionURLs.map(function (url, index) {
					return _react2.default.createElement('img', { style: { display: 'none' }, src: url, key: 'impression-' + index });
				}),
				_react2.default.createElement('div', { className: 'card__content--clear-floats' }),
				' '
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(695);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(696), __esModule: true };

/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(697);
	var $Object = __webpack_require__(20).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(18);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(28), 'Object', {defineProperty: __webpack_require__(24).f});

/***/ },
/* 698 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.responsiveValue = exports.renderClasses = exports.responsiveClass = exports.objMap = exports.mobileFirst = exports.layoutNames = undefined;
	
	var _toConsumableArray2 = __webpack_require__(279);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _typeof2 = __webpack_require__(9);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var layoutNames = ['S', 'M', 'L', 'XL'];
	
	// Public: Filters a responsive property for use with media queries
	// e.g. {default: 1, S: 1, M: 2, L: 2, XL: 2} becomes {default: 1, M: 2}
	var mobileFirst = function mobileFirst(value) {
		var cleanValue = {};
		var layouts = ['default'].concat(layoutNames).filter(function (it) {
			return value.hasOwnProperty(it);
		});
	
		layouts.forEach(function (l, i) {
			var previousValue = value[layouts[i - 1]];
	
			if (value[l] !== null && (0, _typeof3.default)(value[l]) !== undefined && value[l] !== previousValue) cleanValue[l] = value[l];
		});
	
		return cleanValue;
	};
	
	// Public: maps a function over an object returning a new object
	// with the same keys and values replaced with the result of the function.
	// The callback has a signature '(value, key) => value'
	var objMap = function objMap(object, fn) {
		return (0, _keys2.default)(object).reduce(function (result, key) {
			result[key] = fn(object[key], key);
			return result;
		}, {});
	};
	
	// BEM style helper for responsive classes
	var prefix = function prefix(klass, modifier, layout) {
		return [klass, layout, modifier].filter(function (it) {
			return it !== '' && it !== null && typeof it !== 'undefined';
		}).join('--');
	};
	
	// Public: turns a component name (e.g. foo) and an object like {default: 'val', S: 'other-val'}
	// to a string 'foo--val foo--S--other-val'
	var responsiveClass = function responsiveClass(component, modifier) {
		var allModifiers = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
		// this is a crucial step in order not to output ridiculous classes
		var mod = allModifiers ? modifier : mobileFirst(modifier);
	
		return [prefix(component, mod.default)].concat((0, _toConsumableArray3.default)(layoutNames.filter(function (it) {
			return mod.hasOwnProperty(it);
		}).map(function (l) {
			return prefix(component, mod[l], l);
		}))).join(' ');
	};
	
	// Public: turns an object like {default: 'val', S: 'other-val'}
	// to a string 'val S--other-val'
	var responsiveValue = function responsiveValue(value) {
		var allValues = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
		return responsiveClass('', value, allValues);
	};
	
	var renderClasses = function renderClasses(classes) {
		return (0, _keys2.default)(classes).filter(function (className) {
			return classes[className];
		}).join(' ');
	};
	
	exports.layoutNames = layoutNames;
	exports.mobileFirst = mobileFirst;
	exports.objMap = objMap;
	exports.responsiveClass = responsiveClass;
	exports.renderClasses = renderClasses;
	exports.responsiveValue = responsiveValue;

/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var statuses = {
		inprogress: 'in-progress',
		comingsoon: 'coming-soon',
		closed: 'closed'
	};
	
	/**
	 * @param {string} status - inprogress|commingsoon|closed
	 */
	
	exports.default = function (_ref) {
		var status = _ref.status;
	
		return _react2.default.createElement(
			'div',
			{ className: 'card__live-blog-badge card__live-blog-badge--' + statuses[status] },
			_react2.default.createElement(
				'span',
				{ className: 'card__live-blog-badge__text' },
				'live'
			)
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(694);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nImage = __webpack_require__(678);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var headshotSize = 60;
	var getImage = function getImage(headshot, lazyLoadHeadshot) {
		return headshot ? _react2.default.createElement(_nImage.Image, {
			classes: 'card__brand__image card__brand__image--headshot',
			url: headshot + '?source=next&fit=scale-down&compression=best',
			width: headshotSize,
			height: headshotSize,
			widths: [headshotSize, 2 * headshotSize],
			lazyLoad: lazyLoadHeadshot }) : _react2.default.createElement(
			'div',
			{ className: 'card__brand__image' },
			_react2.default.createElement('div', { className: 'card__brand__quote card__brand__quote--left' }),
			_react2.default.createElement('div', { className: 'card__brand__quote card__brand__quote--right' })
		);
	};
	
	/**
	 * @param {string} title
	 * @param {string} [url]
	 * @param {string} [type] - opinion|editors-pick
	 * @param {string} [size = small]
	 * @param {string} [headshot]
	 * @param {boolean} [lazyLoadHeadshot = false]
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _classes;
	
			var brand = this.props;
			var size = brand.size || 'tiny';
			var classes = (_classes = {
				'card__brand': true
			}, (0, _defineProperty3.default)(_classes, 'card__brand--' + size, true), (0, _defineProperty3.default)(_classes, 'card__brand--' + brand.type, brand.type), (0, _defineProperty3.default)(_classes, 'card__brand--with-headshot', brand.headshot), _classes);
	
			return _react2.default.createElement(
				'div',
				{ className: (0, _helpers.renderClasses)(classes), 'data-trackable': 'brand' },
				brand.type === 'opinion' ? getImage(brand.headshot, brand.lazyLoadHeadshot) : null,
				_react2.default.createElement(
					'p',
					{ className: 'card__brand__title' },
					brand.url ? _react2.default.createElement(
						'a',
						{ className: 'card__brand__link', href: brand.url, 'data-trackable': 'link' },
						brand.title
					) : brand.title
				)
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} name
	 * @param {string} url
	 */
	exports.default = function (_ref) {
	  var name = _ref.name;
	  var url = _ref.url;
	  return _react2.default.createElement(
	    "p",
	    { className: "card-sub-brand" },
	    _react2.default.createElement(
	      "a",
	      { className: "card-sub-brand__link", href: url, "data-trackable": "link" },
	      name
	    )
	  );
	};
	
	module.exports = exports['default'];

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} contentId
	 * @param {boolean} [myFtApiWrite = false]
	 * @param {string} [variant]
	 * @param {string} [buttonText]
	 */
	
	exports.default = function (_ref) {
		var contentId = _ref.contentId;
		var myFtApiWrite = _ref.myFtApiWrite;
		var variant = _ref.variant;
		var buttonText = _ref.buttonText;
	
		return myFtApiWrite ? _react2.default.createElement(
			"form",
			{ className: "n-myft-ui n-myft-ui--save", method: "POST",
				"data-content-id": contentId,
				"data-myft-ui": "saved",
				action: "/__myft/api/core/saved/content/" + contentId + "?method=put" },
			_react2.default.createElement(
				"button",
				{
					type: "submit",
					className: "n-myft-ui__button" + (variant ? 'n-myft-ui__button--' + variant : ''),
					"data-trackable": "save-for-later",
					"data-alternate-label": "Saved to myFT",
					"data-alternate-text": "Saved",
					"data-content-id": contentId,
					"aria-label": "Save to myFT",
					title: "Save to myFT"
				},
				buttonText || 'Save'
			)
		) : null;
	};
	
	module.exports = exports['default'];

/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nImage = __webpack_require__(678);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} url
	 * @param {number[]} widths
	 * @param {Object} sizes
	 * @param {string} contentUrl
	 * @param {boolean} [lazyLoad = false]
	 * @param {number} [ratio = 16 / 9] width / height of the image
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var image = this.props;
			var classNames = {
				'card__image-link': true,
				'card__image-link--portrait': image.ratio && image.ratio < 1,
				'card__image-link--has-content-overlay': image.hasContentOverlay
			};
	
			return _react2.default.createElement(
				'a',
				{
					className: (0, _helpers.renderClasses)(classNames), href: image.contentUrl,
					'data-trackable': 'image',
					'aria-hidden': 'true' },
				_react2.default.createElement(_nImage.Image, {
					url: image.url,
					widths: image.widths || [],
					sizes: image.sizes || {},
					lazyLoad: image.lazyLoad,
					placeholder: image.ratio || 'landscape' })
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {Object[]) items
	 * @param {string) items[].id
	 * @param {string) items[].url
	 * @param {string) items[].title
	 * @param {boolean) items[].isPremium
	 * @param {Object} [show]
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var _this2 = this;
	
			var relatedEls = this.props.items.map(function (item) {
				return _react2.default.createElement(
					'li',
					{ className: 'card__related-item o-card__related-content-item', key: item.id },
					_react2.default.createElement(
						'a',
						{ href: item.url, className: 'card__related-item__link', 'data-trackable': 'related' },
						_react2.default.createElement(
							'span',
							{ className: 'card__classifier-gap' },
							item.title
						),
						_this2.props.flags && _this2.props.flags.premiumContentIndicator && item.isPremium ? _react2.default.createElement(
							'span',
							{ className: 'card__classifier' },
							'Premium'
						) : null
					)
				);
			});
			var dataShow = (0, _helpers.responsiveValue)(this.props.show || { default: true });
	
			return _react2.default.createElement(
				'ol',
				{ className: 'card__related-items o-card__related-content o-grid-row', 'data-show': dataShow },
				relatedEls
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} text
	 * @param {Object} [show] - breakpoints to show the standfirst, e.g. { default: true, M: false, XL: true }
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			return _react2.default.createElement(
				'p',
				{ className: 'card__standfirst', 'data-show': (0, _helpers.responsiveValue)(this.props.show) },
				this.props.text
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 706 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _follow = __webpack_require__(670);
	
	var _follow2 = _interopRequireDefault(_follow);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} id
	 * @param {string} name
	 * @param {string} url
	 * @param {string} taxonomy
	 * @param {boolean} [isFollowable]
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var tag = this.props;
			var isFollowable = !!(tag.isFollowable && tag.flags && tag.flags.myFtApiWrite);
	
			return _react2.default.createElement(
				'div',
				{ className: 'card__tag' },
				this.props.isSpecialReport ? 'Special Report: ' : '',
				_react2.default.createElement(
					'a',
					{ className: 'card__tag__link', href: tag.url, 'data-trackable': 'primary-tag' },
					tag.name
				),
				isFollowable ? _react2.default.createElement(_follow2.default, { conceptId: tag.id, name: tag.name, taxonomy: tag.taxonomy, classes: 'card__tag__follow' }) : null
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _oDate = __webpack_require__(281);
	
	var _oDate2 = _interopRequireDefault(_oDate);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var liveBlogStatusConfig = {
		inprogress: {
			id: 'in-progress',
			text: 'last post'
		},
		comingsoon: {
			id: 'coming-soon',
			text: 'coming soon'
		},
		closed: {
			id: 'closed',
			text: 'liveblog closed'
		}
	};
	
	var capitalise = function capitalise(string) {
		return string.slice(0, 1).toUpperCase() + string.slice(1);
	};
	
	/**
	 * @param {string} [date] - iso8601
	 * @param {string} [liveBlogStatus] - inprogress|commingsoon|closed
	 * @param {string} [state] - new|updated
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class(props) {
			(0, _classCallCheck3.default)(this, _class);
	
			var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
			_this.state = {
				dateText: _oDate2.default.format(props.date, 'datetime'),
				title: _oDate2.default.format(props.date, 'datetime')
			};
			_this.possibleStates = ['new', 'updated'];
			return _this;
		}
	
		// not called on the initial render, e.g. client only code
	
	
		_class.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
			this.setState({
				dateText: _oDate2.default.ftTime(new Date(props.date))
			});
		};
	
		_class.prototype.render = function render() {
			var liveBlogStatus = liveBlogStatusConfig[this.props.liveBlogStatus];
			var state = this.possibleStates.indexOf(this.props.state) >= 0 ? this.props.state : null;
			var classes = ['card__timestamp'];
			var prefix = null;
	
			if (state) {
				classes.push('card__timestamp--' + state);
				prefix = capitalise(state);
			} else if (liveBlogStatus) {
				classes.push('card__timestamp--live-blog', 'card__timestamp--' + liveBlogStatus.id);
				prefix = liveBlogStatus.text;
			}
	
			return _react2.default.createElement(
				'div',
				{ className: classes.join(' ') },
				prefix ? _react2.default.createElement(
					'span',
					{ className: 'card__timestamp__prefix' },
					_react2.default.createElement('span', { className: 'card__timestamp__prefix__icon' }),
					prefix
				) : null,
				this.props.date ? _react2.default.createElement(
					'time',
					{ className: 'card__timestamp__time', 'data-o-component': 'o-date', 'data-o-date-format': 'time-ago-limit-4-hours', title: this.state.title, dateTime: this.props.date },
					this.state.dateText
				) : null
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} title
	 * @param {string} url
	 * @param {boolean} [isPremium = false]
	 */
	exports.default = function (_ref) {
		var title = _ref.title;
		var url = _ref.url;
		var isPremium = _ref.isPremium;
	
		// note the card__classifier-gap is because we want the :after to not pick up
		// card__title-text's dotted border
		return _react2.default.createElement(
			"a",
			{ className: "card__title", href: url, "data-trackable": "main-link" },
			_react2.default.createElement(
				"span",
				{ className: "card__classifier-gap" },
				_react2.default.createElement(
					"h3",
					{ className: "card__title-text" },
					title ? title.trim() : ''
				)
			),
			isPremium ? _react2.default.createElement(
				"span",
				{ className: "card__classifier" },
				"Premium"
			) : null
		);
	};
	
	module.exports = exports['default'];

/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} advertiser
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var logo = void 0;
	
			if (this.props.type === 'paid-post') {
				logo = _react2.default.createElement(
					'span',
					{ className: 'card__advertiser-logo' },
					'Paid Post'
				);
			} else {
				logo = _react2.default.createElement(
					'span',
					{ className: 'card__advertiser-text' },
					'Promoted Content'
				);
			}
	
			return _react2.default.createElement(
				'div',
				{ className: 'card__advertiser' },
				logo,
				' BY ',
				_react2.default.createElement(
					'span',
					{ className: 'card__advertiser-name' },
					this.props.advertiser
				)
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nImage = __webpack_require__(678);
	
	var _follow = __webpack_require__(670);
	
	var _follow2 = _interopRequireDefault(_follow);
	
	var _instantAlert = __webpack_require__(711);
	
	var _instantAlert2 = _interopRequireDefault(_instantAlert);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// generic images for this concept
	var taxonomyImages = {
		authors: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		brand: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		organisations: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		people: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		regions: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		specialReports: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		topics: 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2',
		'default': 'http://com.ft.imagepublish.prod.s3.amazonaws.com/cca52406-bda0-11e5-9fdb-87b8d15baec2'
	};
	
	var getConceptImage = function getConceptImage(taxonomy, items) {
		var conceptImage = items.reduce(function (images, item) {
			if (item.primaryImage && !item.isPodcast) {
				images.push(item.primaryImage.rawSrc);
			}
			return images;
		}, []).shift();
	
		return conceptImage || taxonomyImages[taxonomy] || taxonomyImages.default;
	};
	
	/**
	 * @param {string} id
	 * @param {string} name
	 * @param {string} taxonomy
	 * @param {string} url
	 * @param {boolean} [isFollowing = false]
	 * @param {boolean} [hasInstantAlert = false] - does the user get an instant alert for this concept?
	 * @param {Object} [show = false]
	 * @param {Object[]} items
	 * @param {string} items.id
	 * @param {string} items.title
	 * @param {Object} [items.primaryImage]
	 * @param {string} items.primaryImage.rawSrc
	 * @param {boolean} [items.isPremium = false]
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class(props) {
			(0, _classCallCheck3.default)(this, _class);
	
			var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
			_this.state = {
				empty: !props.items.length
			};
			return _this;
		}
	
		_class.prototype.render = function render() {
			var concept = this.props;
			var classes = {
				card: true,
				'card--myft': true,
				'card--empty': this.state.empty,
				'card--lazy-loading-images': concept.lazyLoadImages,
				'o-card': true
			};
			var attrs = {
				className: (0, _helpers.renderClasses)(classes),
				'data-trackable': 'concept',
				'aria-label': concept.name
			};
			if (concept.show) {
				attrs['data-show'] = (0, _helpers.responsiveValue)(concept.show);
			}
			var articles = concept.items.slice(0, 4).map(function (article) {
				var isPremium = concept.flags && concept.flags.premiumContentIndicator && article.isPremium;
				return _react2.default.createElement(
					'li',
					{ className: 'card__concept-article', key: article.id },
					_react2.default.createElement(
						'a',
						{
							className: 'card__concept-article-link card__classifier-gap',
							href: article.url + (!concept.isFollowing ? '?tagToFollow=' + concept.id : '') + (concept.referrerTracking || ''),
							'data-trackable': 'article' },
						article.title
					),
					isPremium ? _react2.default.createElement(
						'span',
						{ className: 'card__classifier' },
						'Premium'
					) : null
				);
			});
	
			var content = this.state.empty ? _react2.default.createElement(
				'div',
				{ className: 'card__myft-content' },
				_react2.default.createElement(
					'p',
					{ className: 'card__concept-empty' },
					'No articles published in the last week'
				),
				_react2.default.createElement(
					'p',
					{ className: 'card__concept-empty' },
					'To see previous articles visit the ',
					_react2.default.createElement(
						'a',
						{ className: 'card__concept-empty-link', 'data-trackable': 'empty-link', href: concept.url },
						concept.name
					),
					' topic page'
				)
			) : _react2.default.createElement(
				'dl',
				{ className: 'card__myft-content' },
				_react2.default.createElement(
					'dt',
					{ className: 'card__concept-sub-heading' },
					'Recent articles'
				),
				_react2.default.createElement(
					'dd',
					{ className: 'card__concept-articles-container' },
					_react2.default.createElement(
						'ul',
						{ className: 'card__concept-articles' },
						articles
					)
				)
			);
	
			var actionData = {
				conceptId: concept.id,
				name: concept.name,
				taxonomy: concept.taxonomy
			};
			var followData = {
				isFollowing: concept.isFollowing,
				classes: 'card__concept-follow'
			};
			var instantData = {
				hasInstantAlert: concept.hasInstantAlert,
				classes: 'card__concept-instant'
			};
	
			(0, _assign2.default)(followData, actionData);
			(0, _assign2.default)(instantData, actionData);
	
			var action = void 0;
			if (concept.flags && concept.flags.myFtApiWrite) {
				action = _react2.default.createElement(
					'div',
					{ className: 'card__myft-meta' },
					_react2.default.createElement(
						'div',
						{ className: 'o-grid-row o-grid-row--compact' },
						_react2.default.createElement(
							'div',
							{ 'data-o-grid-colspan': '7 M12 XL7' },
							this.props.flags.myFTInstantAlertsButtons ? _react2.default.createElement(_instantAlert2.default, instantData) : ''
						),
						_react2.default.createElement(
							'div',
							{ 'data-o-grid-colspan': '5 M12 XL5' },
							_react2.default.createElement(_follow2.default, followData)
						)
					)
				);
			};
	
			var imageContainerClasses = {
				'card__myft-image-container': true,
				'n-util-hide-core': concept.lazyLoadImages
			};
	
			return _react2.default.createElement(
				'section',
				attrs,
				_react2.default.createElement(
					'header',
					{ className: 'card__myft-header' },
					!this.state.empty ? _react2.default.createElement(
						'div',
						{ className: (0, _helpers.renderClasses)(imageContainerClasses) },
						_react2.default.createElement(_nImage.Image, {
							url: getConceptImage(concept.taxonomy, concept.items),
							widths: [90, 120],
							sizes: { default: '90px', XL: '120px' },
							classes: 'card__myft-image',
							lazyLoad: concept.lazyLoadImages })
					) : '',
					_react2.default.createElement(
						'h3',
						{ className: 'card__myft-title' },
						_react2.default.createElement(
							'a',
							{ className: 'card__concept-link', href: concept.url, 'data-trackable': 'concept-link', title: 'Go to list of all articles about ' + concept.name },
							concept.name
						)
					)
				),
				content,
				_react2.default.createElement(
					'h4',
					{ className: 'n-util-visually-hidden' },
					'Actions and more information'
				),
				action
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(671);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _updateMyftForm = __webpack_require__(676);
	
	var _updateMyftForm2 = _interopRequireDefault(_updateMyftForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var InstantAlert = function (_Component) {
		(0, _inherits3.default)(InstantAlert, _Component);
	
		function InstantAlert() {
			(0, _classCallCheck3.default)(this, InstantAlert);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		InstantAlert.prototype.render = function render() {
			var attrs = (0, _assign2.default)({}, this.props);
			var isOnText = this.props.buttonText || 'Instant alerts on';
			var isOffText = this.props.alternateText || this.props.buttonText || 'Instant alerts off';
			var instantAttrs = {
				classes: (0, _classnames2.default)('n-myft-ui--instant', this.props.classes),
				action: '/__myft/api/core/followed/concept/' + this.props.conceptId + '?method=put',
				uiHandle: 'instant',
				ariaPressed: false,
				activateLabel: 'Get instant alerts for ',
				deactivateLabel: 'Stop instant alerts for ',
				buttonText: isOffText,
				alternateText: isOnText,
				btnName: '_rel.instant',
				btnValue: true
	
			};
			(0, _assign2.default)(attrs, instantAttrs);
			return _react2.default.createElement(_updateMyftForm2.default, attrs);
		};
	
		return InstantAlert;
	}(_react.Component);
	
	exports.default = InstantAlert;
	module.exports = exports['default'];

/***/ },
/* 712 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(698);
	
	var _title = __webpack_require__(708);
	
	var _title2 = _interopRequireDefault(_title);
	
	var _standfirst = __webpack_require__(705);
	
	var _standfirst2 = _interopRequireDefault(_standfirst);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @param {string} title
	 * @param {string} id
	 * @param {Object} flags
	 * @param {boolean} [flags.videojsPlayer = false]
	 * @param {boolean} [isTransparent = false]
	 * @param {Object} [show = false]
	 * @param {Object} [standfirst]
	 * @param {String} standfirst.title
	 * @param {Object} standfirst.show
	 * @param {string} [modifier]
	 */
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class() {
			(0, _classCallCheck3.default)(this, _class);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		_class.prototype.render = function render() {
			var articleAttrs = {
				className: 'card card--video o-card o-video--medium'
			};
			if (this.props.show) {
				articleAttrs['data-show'] = (0, _helpers.responsiveValue)(this.props.show);
			}
	
			if (this.props.isTransparent) {
				articleAttrs.className += ' card--transparent';
			}
	
			var videoAttrs = {
				'className': 'js-video video-wrapper'
			};
	
			videoAttrs['data-o-component'] = 'o-video';
			videoAttrs['data-o-video-source'] = 'brightcove';
			videoAttrs['data-o-video-id'] = this.props.id;
			videoAttrs['data-o-video-optimumwidth'] = '355';
			videoAttrs['data-o-video-placeholder'] = 'true';
			videoAttrs['data-o-video-placeholder-info'] = "['title','description','brand','duration']";
			videoAttrs['data-o-video-advertising'] = '' + this.props.flags.showVideoAdvertising;
	
			if (this.props.modifier) {
				articleAttrs.className += ' card--' + this.props.modifier;
			}
	
			if (this.props.flags['videojsPlayer']) {
				videoAttrs['data-o-video-player'] = 'videojs';
			}
	
			return _react2.default.createElement(
				'article',
				articleAttrs,
				_react2.default.createElement(
					'div',
					{ className: 'card--video-content-wrapper' },
					_react2.default.createElement('div', videoAttrs),
					_react2.default.createElement(_title2.default, { title: this.props.title, url: 'http://video.ft.com/' + this.props.id }),
					this.props.standfirst ? _react2.default.createElement(_standfirst2.default, this.props.standfirst) : null
				)
			);
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _followCollection = __webpack_require__(714);
	
	var _followCollection2 = _interopRequireDefault(_followCollection);
	
	var _helpers = __webpack_require__(698);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createFollowComponentAttrs = function createFollowComponentAttrs(concepts, name, isFollowing, flags) {
		return {
			concepts: concepts,
			name: name,
			isFollowing: isFollowing,
			flags: flags,
			classes: 'card__collection-follow  n-util-hide-core',
			buttonText: 'Follow All',
			alternateText: 'Following'
		};
	};
	
	/**
	 * @param {string} title
	 * @param {boolean} [isFollowing=false]
	 * @param {number} articleCount
	 * @param {Object[]} concepts
	 * @param {string} concepts.name
	 */
	
	var _class = function (_Component) {
		(0, _inherits3.default)(_class, _Component);
	
		function _class(props) {
			(0, _classCallCheck3.default)(this, _class);
	
			var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
			_this.state = {
				empty: props.isEmpty
			};
			return _this;
		}
	
		_class.prototype.likeCollections = function likeCollections() {
			this.setState({ liked: true });
		};
	
		_class.prototype.render = function render() {
			var classes = ['card', 'card--collection', 'o-card'];
			if (this.state.empty) classes.push('card--empty');
			var attrs = {
				className: classes.join(' '),
				'data-trackable': 'collection',
				'aria-label': this.props.name
			};
			if (this.props.show) {
				attrs['data-show'] = (0, _helpers.responsiveValue)(this.props.show);
			}
	
			var concepts = this.props.concepts.map(function (concept) {
				return _react2.default.createElement(
					'li',
					{ className: 'card__collection-concept' },
					_react2.default.createElement(
						'a',
						{
							className: 'card__collection-concept-link',
							href: concept.url,
							'data-trackable': 'concept' },
						concept.name
					)
				);
			});
	
			var feedback = this.state.liked ? _react2.default.createElement(
				'div',
				{ className: 'card__collection-feedback is-given' },
				_react2.default.createElement(
					'p',
					null,
					'Thanks for your feedback'
				)
			) : _react2.default.createElement(
				'div',
				{ className: 'card__collection-feedback' },
				_react2.default.createElement(
					'p',
					null,
					'We are currently trialling topic collections'
				),
				_react2.default.createElement(
					'p',
					null,
					'Let us know what you think'
				),
				_react2.default.createElement(
					'button',
					{ className: 'card__collection-more-button n-myft-ui__button n-util-hide-core',
						'aria-label': 'I like collections',
						title: 'I like collections',
						'aria-pressed': 'false',
						'data-trackable': 'more-collections',
						onClick: this.likeCollections.bind(this)
					},
					'I like collections'
				),
				_react2.default.createElement(
					'p',
					null,
					'or email us: ',
					_react2.default.createElement(
						'a',
						{ className: 'card__collection-feedback-email', href: 'mailto:next.feedback@ft.com?Subject=myFT%20Topic%20Collections', 'data-trackable': 'more-collections-email' },
						'next.feedback@ft.com'
					)
				)
			);
	
			if (this.state.empty) {
				return _react2.default.createElement(
					'section',
					attrs,
					_react2.default.createElement('div', { className: 'card__collection-stack' }),
					_react2.default.createElement(
						'header',
						{ className: 'card__collection-header' },
						_react2.default.createElement(
							'h3',
							{ className: 'card__collection-title' },
							'Want more?'
						)
					),
					feedback
				);
			} else {
				return _react2.default.createElement(
					'section',
					attrs,
					_react2.default.createElement('div', { className: 'card__collection-stack' }),
					_react2.default.createElement(
						'header',
						{ className: 'card__collection-header' },
						_react2.default.createElement(
							'h3',
							{ className: 'card__collection-title' },
							this.props.title
						)
					),
					_react2.default.createElement(
						'h4',
						{ className: 'card__collection-sub-heading' },
						'Topics included:'
					),
					_react2.default.createElement(
						'ul',
						{ className: 'card__collection-concepts' },
						concepts
					),
					_react2.default.createElement(
						'h4',
						{ className: 'n-util-visually-hidden' },
						'Actions and more information'
					),
					_react2.default.createElement(
						'div',
						{ className: 'card__collection-meta' },
						_react2.default.createElement(
							'div',
							{ className: 'card__collection-datum' },
							concepts.length,
							_react2.default.createElement('br', null),
							'topics'
						),
						_react2.default.createElement(_followCollection2.default, createFollowComponentAttrs(this.props.concepts, this.props.title, false, this.props.flags))
					)
				);
			}
		};
	
		return _class;
	}(_react.Component);

	exports.default = _class;
	module.exports = exports['default'];

/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// convert classes to array by splitting string on ' ', or if already array, just return
	var classesToArray = function classesToArray(thing) {
		return Array.isArray(thing) ? thing : thing.split(' ');
	};
	
	var exists = function exists(thing) {
		return thing;
	};
	
	/**
	* @param {string} name - Name of the collection
	* @param {string} [variant] - Variant of the button, e.g. `inverse`
	* @param {string} [size] - Size of the button, e.g. `big`
	* @param {Object[]} concepts
	* @param {string} concepts.id
	* @param {string} concepts.name
	* @param {string} concepts.taxonomy
	* @param {(string|Array)} [classes] - Additional class(es) for the follow component
	*/
	
	var FollowCollection = function (_Component) {
		(0, _inherits3.default)(FollowCollection, _Component);
	
		function FollowCollection() {
			(0, _classCallCheck3.default)(this, FollowCollection);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		FollowCollection.prototype.render = function render() {
			var classes = ['n-myft-ui', 'n-myft-ui--follow'];
			if (this.props.classes) {
				classes = classes.concat(classesToArray(this.props.classes));
			}
			var buttonClasses = ['n-myft-ui__button'];
			[this.props.variant, this.props.size].filter(exists).map(function (buttonOpt) {
				return buttonClasses.push('n-myft-ui__button--' + buttonOpt);
			});
	
			var conceptIds = this.props.concepts.map(function (c) {
				return c.id;
			}).join(',');
	
			return _react2.default.createElement(
				'form',
				{
					className: classes.join(' '),
					method: 'POST',
					'data-myft-ui': 'follow',
					'data-concept-id': conceptIds,
					action: '#' },
				_react2.default.createElement('input', { type: 'hidden', value: this.props.concepts.map(function (c) {
						return c.taxonomy;
					}).join(','), name: 'taxonomy' }),
				_react2.default.createElement('input', { type: 'hidden', value: this.props.concepts.map(function (c) {
						return c.name;
					}).join(','), name: 'name' }),
				this.props.flags.myFtApiWrite ? _react2.default.createElement(
					'button',
					{
						'aria-label': 'Add all topics in the ' + this.props.name + ' collection to my F T',
						'aria-pressed': 'false',
						className: buttonClasses.join(' '),
						'data-alternate-label': 'Remove all topics in the ' + this.props.name + ' collection from my F T',
						'data-alternate-text': 'Added',
						'data-trackable': 'follow',
						'data-concept-id': conceptIds // duplicated here for tracking
						, title: 'Add all topics in the ' + this.props.name + ' collection to my F T',
						type: 'submit' },
					'Add all to myFT'
				) : ''
			);
		};
	
		return FollowCollection;
	}(_react.Component);
	
	exports.default = FollowCollection;
	module.exports = exports['default'];

/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _keys = __webpack_require__(137);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultProps = {
		lazy: true,
		center: true,
		formats: {},
		targeting: {}
	};
	
	var defaultFormats = {
		default: 'Responsive',
		small: 'false',
		medium: 'false',
		large: 'false',
		extra: 'false'
	};
	
	function targetingToString(obj) {
		return (0, _keys2.default)(obj).map(function (key) {
			return key + '=' + obj[key];
		}).join('&');
	}
	
	/**
	 *  @param {string} name
	 *  @param {Object} [targeting]
	 *  @param  {Object} [formats]
	 *  @param {string} formats.default = "Responsive"
	 *  @param {string} formats.small = "false"
	 *  @param {string} formats.medium = "false"
	 *  @param {string} formats.large = "false"
	 *  @param {string} formats.extra = "false"
	 *  @param {boolean} lazy = true
	 */
	
	var Advert = function (_Component) {
		(0, _inherits3.default)(Advert, _Component);
	
		function Advert() {
			(0, _classCallCheck3.default)(this, Advert);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		Advert.prototype.render = function render() {
			// doing it like this cos I'm copying article.js - most of this doesn't need to run every render() but is most likely server-side anyway
			var ad = (0, _assign2.default)({}, defaultProps, this.props);
			ad.formats = (0, _assign2.default)({}, defaultFormats, ad.formats);
	
			return _react2.default.createElement(
				'div',
				{ className: 'card card--advert' },
				_react2.default.createElement('div', {
					'data-trackable': 'ad',
					className: 'o-ads',
					'data-o-ads-name': ad.name,
					'data-o-ads-targeting': targetingToString(ad.targeting),
					'data-o-ads-formats-default': ad.formats.default,
					'data-o-ads-formats-small': ad.formats.small,
					'data-o-ads-formats-medium': ad.formats.medium,
					'data-o-ads-formats-large': ad.formats.large,
					'data-o-ads-formats-extra': ad.formats.extra,
					'data-o-ads-lazy-load': ad.lazy,
					'data-o-ads-center': ad.center,
					'aria-hidden': 'true' })
			);
		};
	
		return Advert;
	}(_react.Component);
	
	exports.default = Advert;
	module.exports = exports['default'];

/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.video = exports.concept = exports.article = undefined;
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _article = __webpack_require__(717);
	
	var _article2 = _interopRequireDefault(_article);
	
	var _concept = __webpack_require__(718);
	
	var _concept2 = _interopRequireDefault(_concept);
	
	var _collection = __webpack_require__(719);
	
	var _collection2 = _interopRequireDefault(_collection);
	
	var _video = __webpack_require__(720);
	
	var _video2 = _interopRequireDefault(_video);
	
	var _nativeAd = __webpack_require__(721);
	
	var _nativeAd2 = _interopRequireDefault(_nativeAd);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.article = _article2.default;
	exports.concept = _concept2.default;
	exports.video = _video2.default;
	
	exports.default = function (item, opts, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
	
		var model = {
			size: opts.size,
			show: opts.show
		};
	
		if (item.type === 'Video' || item.type === 'VideoMedia') {
			(0, _assign2.default)(model, (0, _video2.default)(item, opts, { flags: flags }));
		} else if (item.type === 'Concept') {
			(0, _assign2.default)(model, (0, _concept2.default)(item, opts, { flags: flags }));
		} else if (item.type === 'Collection') {
			(0, _assign2.default)(model, (0, _collection2.default)(item, opts, { flags: flags }));
		} else if (item.type === 'paid-post' || item.type === 'special-report' || item.type === 'smartmatch') {
			(0, _assign2.default)(model, (0, _nativeAd2.default)(item, opts));
		} else {
			(0, _assign2.default)(model, (0, _article2.default)(item, opts, { flags: flags }));
		}
	
		return model;
	};

/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (item, opts) {
	
		var content = {};
	
		// combine image properties
		if (opts.image && item.image) {
			content.image = (0, _assign2.default)({}, opts.image, item.image);
		}
	
		// combine standfirst / summary properties
		if (opts.standfirst) {
			content.standfirst = (0, _assign2.default)({}, opts.standfirst, { text: item.summary });
		}
	
		// determine whether to show tag
		content.tag = !opts.hideTag && item.tag;
	
		// combine related properties and ensure a max of 3 related content items
		if (opts.related && opts.related.show) {
			content.related = (0, _assign2.default)({}, {
				items: item.relatedContent
			}, opts.related);
		}
	
		// decorate with all remaining necessary properties
		(0, _assign2.default)(content, {
			isPictureStory: opts.isPictureStory,
			isMain: opts.isMain,
			lazyLoadImages: opts.lazyLoadImages,
			id: item.id,
			url: item.url,
			title: item.title,
			published: item.published,
			lastPublished: item.lastPublished,
			hideTimestampState: item.hideTimestampState,
			liveBlog: item.liveBlog,
			subheading: item.subheading,
			type: item.type,
			brand: item.brand,
			branding: item.branding,
			isPremium: item.isPremium,
			flags: opts.flags,
			modifier: opts.modifier
		});
	
		return content;
	};
	
	module.exports = exports['default'];

/***/ },
/* 718 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (item, opts, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
		return {
			type: 'concept',
			id: item.id,
			name: item.name,
			items: item.items,
			taxonomy: item.taxonomy,
			url: item.url,
			isFollowing: item.isFollowing,
			flags: flags,
			lazyLoadImages: opts.lazyLoadImages
		};
	};
	
	module.exports = exports['default'];

/***/ },
/* 719 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (item, opts, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
		return {
			type: 'collection',
			title: item.title,
			articleCount: item.articleCount,
			concepts: item.concepts,
			isEmpty: item.isEmpty,
			flags: flags
		};
	};
	
	module.exports = exports['default'];

/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (item, opts, _ref) {
		var _ref$flags = _ref.flags;
		var flags = _ref$flags === undefined ? {} : _ref$flags;
	
	
		var video = {
			type: 'video',
			title: item.title,
			flags: flags,
			modifier: opts.modifier
		};
	
		video.id = item.videoId || item.id;
	
		if (item.summary && opts.standfirst) {
			video.standfirst = (0, _assign2.default)({}, opts.standfirst, { text: item.summary });
		}
	
		return video;
	};
	
	module.exports = exports['default'];

/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(196);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (item, opts) {
		var article = {
			type: item.type,
			id: item.id,
			title: item.title,
			url: item.url,
			advertiser: item.advertiser,
			impressionURL: item.impressionURL,
			published: item.published,
			lastPublished: item.lastPublished,
			lazyLoadImages: opts.lazyLoadImages,
			tag: item.tag
		};
	
		if (opts.image && item.image && item.image.url) {
			article.image = (0, _assign2.default)({}, opts.image, item.image);
		}
	
		if (opts.standfirst) {
			article.standfirst = (0, _assign2.default)({}, opts.standfirst, { text: item.summary });
		}
	
		if (!opts.hideTag && item.tag) {
			article.tag = item.tag;
		}
	
		return article;
	};
	
	module.exports = exports['default'];

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classCallCheck2 = __webpack_require__(200);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(339);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(340);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(388);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nCard = __webpack_require__(692);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Advert = function (_Component) {
		(0, _inherits3.default)(Advert, _Component);
	
		function Advert() {
			(0, _classCallCheck3.default)(this, Advert);
			return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
		}
	
		Advert.prototype.render = function render() {
			var model = this.props;
			return _react2.default.createElement(_nCard.AdvertCard, model);
		};
	
		return Advert;
	}(_react.Component);
	
	exports.default = Advert;
	module.exports = exports['default'];

/***/ }
/******/ ]);
//# sourceMappingURL=main.js.map