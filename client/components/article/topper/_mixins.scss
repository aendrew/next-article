@mixin colorBorder($color) {
	.article-topper__headline::after {
		border-bottom: 6px solid $color;
		@include oGridRespondTo($from: M) {
			border-bottom-width: 8px;
		}
	}
}

@mixin setButtonColor($theme, $hex) {
	.article-topper__extras {
		button {
			@include oButtonsTheme($theme);
			border-radius: 0;
			background-color: transparent;

			&::before {
				background-image: url('https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:plus?source=o-icons&tint=#{$hex}');
			}

			&:hover {
				background-color: rgba(0, 0, 0, 0.2) !important;
			}
		}
	}
}

$colors: 'white', 'black', 'claret', 'blue', 'pink', 'slate';
@each $color in $colors {
	[data-textbox-background~='#{$color}'] {
		$text-color: black;
		$contrast: lightness(oColorsGetPaletteColor($color));
		@include setButtonColor(uncolored, '000000');
		@if $contrast <= 50% {
			$text-color: white;
			@include setButtonColor(inverse, ffffff);
		}
		@include colorBorder($text-color);
		background-color: oColorsGetPaletteColor('#{$color}');
		color: $text-color;
	}
}

@mixin alignText($position) {
	$value: ("left": 0, "center": 33%, "right": 66%);
	.article-topper__headline::after {
		content: '';
		display: block;
		width: 33%;
		margin: 20px 0 40px map-get($value, #{$position});
	}
	.article-topper__text-wrapper {
		text-align: $position;
	}
}

@mixin resizeTextbox {
	.article-topper__text-wrapper {
		width: 100%;
		padding: 0;
	}

	.article-topper__headline {
		margin-top: 20px;
		@include oGridRespondTo(M) {
			&::after {
				margin-top: 40px;
			}
		}
	}

	.article-topper__stand-first {
		@include oGridRespondTo(M) {
			width: 50%;
			margin: 0 auto;
		}
	}
}

@mixin overlayText {
	.article-topper__background {
		position: absolute;
		top: 0;
		left: 0;
		height: inherit;
		min-height: inherit;
		width: 100%;
	}
}

@mixin setHeadlineFont($size-l, $size-s) {
	.article-topper__headline {
		@include oTypographySerifDisplayBold(xl, $load-progressively: true);

		font-size: $size-s;
		line-height: $size-s;

		.o-typography--loaded-serifDisplayBold & {
			font-size: $size-s * 1.077;
		}

		@include oGridRespondTo(L) {
			font-size: $size-l;
			line-height: $size-l;
			.o-typography--loaded-serifDisplayBold & {
				font-size: $size-l * 1.077;
			}
		}
	}
}

@mixin setStandfirstFont($size-l, $size-s) {
	.article-topper__stand-first {
		@include oTypographySans(m);

		font-size: $size-s;
		line-height: round($size-s * 1.2);
		opacity: 0.8;

		@include oGridRespondTo(L) {
			font-size: $size-l;
			line-height: round($size-l * 1.2);
		}
	}
}

@mixin fullBleedImage {
	@include setHeadlineFont(64px, 32px);
	@include setStandfirstFont(22px, 18px);
	.article-topper__text-box {
		background: transparent;
	}
	.article-topper__visual {
		width: 100%;
	}
	.article-topper__text-wrapper {
		z-index: 1;
	}
}

@mixin standardSplitMobile {
	@include alignText(left);
	@include setHeadlineFont(52px, 32px);
	@include setStandfirstFont(22px, 18px);
}
