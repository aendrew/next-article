@mixin colorBorder($color) {
	.article-topper__headline::after {
		border-bottom: 8px solid $color;
	}
}


$colors: 'white', 'black', 'claret', 'blue', 'transparent';

@each $color in $colors {
	[data-textbox-background~='#{$color}'] {
		$text-color: black;
		$contrast: lightness(oColorsGetPaletteColor($color));
		@if $contrast <= 50% {
			$text-color: white;
		}
		background-color: oColorsGetPaletteColor('#{$color}');
		color: $text-color;
		@include colorBorder($text-color);
	}
}


@mixin alignBorder($position) {
	$value: ("left": 0, "center": 33%, "right": 66%);
	.article-topper__headline::after {
		content: '';
		display: block;
		width: 33%;
		margin: 20px 0 20px map-get($value, #{$position});
	}
}

@mixin alignText($position) {
	@include alignBorder($position);
	.article-topper__text-wrapper {
		text-align: $position;
	}
}

@mixin setHeadlineFont($size-l, $height-l, $size-s, $height-s) {
	.article-topper__headline {
		@include oTypographySerifDisplayBold(xl, $load-progressively: true);
		@include setResponsiveType($size-l, $height-l, $size-s, $height-s);
	}
}


@mixin setStandfirstFont($size-l, $height-l, $size-s, $height-s) {
	.article-topper__stand-first {
		@include oTypographySans(m);
		@include setResponsiveType($size-l, $height-l, $size-s, $height-s);
	}
}

@mixin setResponsiveType($size-l, $height-l, $size-s, $height-s) {
	@include oGridRespondTo($until: L) {
		font-size: $size-s;
		line-height: $height-s;
	}

	@include oGridRespondTo(L) {
		font-size: $size-l;
		line-height: $height-l;
	}
}
